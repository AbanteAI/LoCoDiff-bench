
index d859f00fb..aa0ee13bc 100644
--- a/qdrant_lib_segment_src_index_hnsw_index_graph_layers.rs_expectedoutput.txt (expected):tmp/tmpfxn6nzrr_expected.txt	
+++ b/qdrant_lib_segment_src_index_hnsw_index_graph_layers.rs_extracted.txt (actual):tmp/tmpr69f4jls_actual.txt	
@@ -12,7 +12,7 @@ use serde::{Deserialize, Serialize};
 use super::entry_points::EntryPoint;
 use super::graph_links::{GraphLinks, GraphLinksFormat};
 use crate::common::operation_error::{
-    CancellableResult, OperationError, OperationResult, check_process_stopped,
+    check_process_stopped, CancellableResult, OperationError, OperationResult,
 };
 use crate::common::utils::rev_range;
 use crate::index::hnsw_index::entry_points::EntryPoints;
@@ -375,15 +375,15 @@ impl GraphLayers {
 
 #[cfg(test)]
 mod tests {
-    use rand::SeedableRng;
     use rand::rngs::StdRng;
+    use rand::SeedableRng;
     use rstest::rstest;
     use tempfile::Builder;
 
     use super::*;
     use crate::data_types::vectors::VectorElementType;
     use crate::fixtures::index_fixtures::{
-        FakeFilterContext, TestRawScorerProducer, random_vector,
+        random_vector, FakeFilterContext, TestRawScorerProducer,
     };
     use crate::index::hnsw_index::graph_links::GraphLinksSerializer;
     use crate::index::hnsw_index::tests::{
@@ -391,8 +391,8 @@ mod tests {
     };
     use crate::spaces::metric::Metric;
     use crate::spaces::simple::{CosineMetric, DotProductMetric};
-    use crate::vector_storage::DEFAULT_STOPPED;
     use crate::vector_storage::chunked_vector_storage::VectorOffsetType;
+    use crate::vector_storage::DEFAULT_STOPPED;
 
     fn search_in_graph(
         query: &[VectorElementType],
@@ -524,7 +524,7 @@ mod tests {
 
         let main_entry = graph_layers
             .entry_points
-            .get_entry_point(|_x| true)
+            .get_entry_point(|_| true)
             .expect("Expect entry point to exists");
 
         assert!(main_entry.level > 0);
