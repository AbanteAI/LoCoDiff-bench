
index d859f00fb..ace7433bc 100644
--- a/qdrant_lib_segment_src_index_hnsw_index_graph_layers.rs_expectedoutput.txt (expected):tmp/tmp1nhab4zp_expected.txt	
+++ b/qdrant_lib_segment_src_index_hnsw_index_graph_layers.rs_extracted.txt (actual):tmp/tmpakza4fzu_actual.txt	
@@ -53,9 +53,6 @@ pub trait GraphLayersBase {
     where
         F: FnMut(PointOffsetType);
 
-    /// Get M based on current level
-    fn get_m(&self, level: usize) -> usize;
-
     /// Greedy search for closest points within a single graph layer
     fn _search_on_level(
         &self,
@@ -190,6 +187,10 @@ pub trait GraphLayersBase {
         }
         current_point
     }
+
+    fn get_m(&self, level: usize) -> usize {
+        if level == 0 { self.m0 } else { self.m }
+    }
 }
 
 impl GraphLayersBase for GraphLayers {
@@ -203,10 +204,6 @@ impl GraphLayersBase for GraphLayers {
     {
         self.links.links(point_id, level).for_each(f);
     }
-
-    fn get_m(&self, level: usize) -> usize {
-        if level == 0 { self.m0 } else { self.m }
-    }
 }
 
 /// Object contains links between nodes for HNSW search
@@ -421,10 +418,8 @@ mod tests {
         let entry_points_num = 10;
         let num_vectors = 10;
 
-        let mut rng = StdRng::seed_from_u64(42);
-
         let vector_holder =
-            TestRawScorerProducer::<DotProductMetric>::new(dim, num_vectors, &mut rng);
+            TestRawScorerProducer::<DotProductMetric>::new(dim, num_vectors, &mut StdRng::seed_from_u64(42));
 
         let mut graph_links = vec![vec![Vec::new()]; num_vectors];
         graph_links[0][0] = vec![1, 2, 3, 4, 5, 6];
