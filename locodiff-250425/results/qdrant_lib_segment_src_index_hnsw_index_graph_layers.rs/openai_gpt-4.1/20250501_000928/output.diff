--- qdrant_lib_segment_src_index_hnsw_index_graph_layers.rs_expectedoutput.txt (expected)+++ qdrant_lib_segment_src_index_hnsw_index_graph_layers.rs_extracted.txt (actual)@@ -53,7 +53,6 @@     where
         F: FnMut(PointOffsetType);
 
-    /// Get M based on current level
     fn get_m(&self, level: usize) -> usize;
 
     /// Greedy search for closest points within a single graph layer
@@ -292,9 +291,7 @@     pub fn num_points(&self) -> usize {
         self.links.num_points()
     }
-}
-
-impl GraphLayers {
+
     pub fn load(dir: &Path, on_disk: bool, compress: bool) -> OperationResult<Self> {
         let graph_data: GraphLayerData = read_bin(&GraphLayers::get_path(dir))?;
 
@@ -421,10 +418,7 @@         let entry_points_num = 10;
         let num_vectors = 10;
 
-        let mut rng = StdRng::seed_from_u64(42);
-
-        let vector_holder =
-            TestRawScorerProducer::<DotProductMetric>::new(dim, num_vectors, &mut rng);
+        let vector_holder = TestRawScorerProducer::<DotProductMetric>::new(dim, num_vectors, &mut StdRng::seed_from_u64(42));
 
         let mut graph_links = vec![vec![Vec::new()]; num_vectors];
         graph_links[0][0] = vec![1, 2, 3, 4, 5, 6];
@@ -473,10 +467,10 @@     }
 
     #[rstest]
-    #[case::uncompressed((GraphLinksFormat::Plain, false))]
-    #[case::converted((GraphLinksFormat::Plain, true))]
-    #[case::compressed((GraphLinksFormat::Compressed, false))]
-    #[case::recompressed((GraphLinksFormat::Compressed, true))]
+    #[case::uncompressed(GraphLinksFormat::Plain)]
+    #[case::converted(GraphLinksFormat::Plain)]
+    #[case::compressed(GraphLinksFormat::Compressed)]
+    #[case::recompressed(GraphLinksFormat::Compressed)]
     fn test_save_and_load(#[case] (initial_format, compress): (GraphLinksFormat, bool)) {
         let num_vectors = 100;
         let dim = 8;
