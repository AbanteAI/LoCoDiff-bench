
index ce88caa2..b99baba6 100644
--- a/tldraw_apps_dotcom_sync-worker_src_TLDrawDurableObject.ts_expectedoutput.txt (expected):tmp/tmphxe_vm9j_expected.txt	
+++ b/tldraw_apps_dotcom_sync-worker_src_TLDrawDurableObject.ts_extracted.txt (actual):tmp/tmp7xp96nvk_actual.txt	
@@ -18,6 +18,7 @@ import {
 } from '@tldraw/dotcom-shared'
 import {
 	RoomSnapshot,
+	TLCloseEventCode,
 	TLSocketRoom,
 	TLSyncErrorCloseEventCode,
 	TLSyncErrorCloseEventReason,
@@ -36,12 +37,10 @@ import {
 import { createSentry } from '@tldraw/worker-shared'
 import { DurableObject } from 'cloudflare:workers'
 import { IRequest, Router } from 'itty-router'
-import { Kysely } from 'kysely'
 import { AlarmScheduler } from './AlarmScheduler'
 import { PERSIST_INTERVAL_MS } from './config'
 import { createPostgresConnectionPool } from './postgres'
 import { getR2KeyForRoom } from './r2'
-import { getPublishedRoomSnapshot } from './routes/tla/tldraw_apps_dotcom_sync-worker_src_TLDrawDurableObject.ts_expectedoutput.txt (expected): DocumentInfo | null = null
 
-	db: Kysely<DB>
+	db: import('kysely').Kysely<DB>
 
 	constructor(
 		private state: DurableObjectState,
@@ -311,8 +310,10 @@ export class TLDrawDurableObject extends DurableObject {
 		}
 	}
 
-	// this might return null if the file doesn't exist yet in the backend, or if it was deleted
+	_ownerId: string | null = null
+
 	_fileRecordCache: TlaFile | null = null
+	// this might return null if the file doesn't exist yet in the backend, or if it was deleted
 	async getAppFileRecord(): Promise<TlaFile | null> {
 		try {
 			return await retry(
@@ -527,7 +528,7 @@ export class TLDrawDurableObject extends DurableObject {
 				data = await getLegacyRoomData(this.env, id, 'snapshot')
 				break
 			case PUBLISH_PREFIX:
-				data = await getPublishedRoomSnapshot(this.env, id)
+				data = await import('./routes/tla/tldraw_apps_dotcom_sync-worker_src_TLDrawDurableObject.ts_expectedoutput.txt (expected):
 				// create empty room, the client will populate it
