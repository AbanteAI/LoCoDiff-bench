--- tldraw_apps_dotcom_sync-worker_src_TLDrawDurableObject.ts_expectedoutput.txt (expected)+++ tldraw_apps_dotcom_sync-worker_src_TLDrawDurableObject.ts_extracted.txt (actual)@@ -422,10 +422,7 @@ 			room.handleSocketConnect({
 				sessionId: sessionId,
 				socket: serverWebSocket,
-				meta: {
-					storeId,
-					userId: auth?.userId ? auth.userId : null,
-				},
+				meta: { storeId, userId: auth?.userId ? auth.userId : null },
 				isReadonly:
 					openMode === ROOM_OPEN_MODE.READ_ONLY || openMode === ROOM_OPEN_MODE.READ_ONLY_LEGACY,
 			})
@@ -681,10 +678,6 @@ 
 				// Update the updatedAt timestamp in the database
 				if (this.documentInfo.isApp) {
-					// don't await on this because otherwise
-					// if this logic is invoked during another db transaction
-					// (e.g. when publishing a file)
-					// that transaction will deadlock
 					this.db
 						.updateTable('file')
 						.set({ updatedAt: new Date().getTime() })
@@ -831,14 +824,6 @@ 			// finally clear storage so we don't keep the data around
 			this.ctx.storage.deleteAll()
 		})
-	}
-
-	/**
-	 * @internal
-	 */
-	async awaitPersist() {
-		if (!this._documentInfo) return
-		await this.persistToDatabase()
 	}
 
 	async __admin__hardDeleteIfLegacy() {
@@ -882,6 +867,14 @@ 		)
 		await this.getRoom()
 	}
+
+	/**
+	 * @internal
+	 */
+	async awaitPersist() {
+		if (!this._documentInfo) return
+		await this.persistToDatabase()
+	}
 }
 
 async function listAllObjectKeys(bucket: R2Bucket, prefix: string): Promise<string[]> {
