
index a458d5593..7011a0923 100644
--- a/qdrant_lib_collection_src_collection_manager_optimizers_segment_optimizer.rs_expectedoutput.txt (expected):tmp/tmpisi7gg64_expected.txt	
+++ b/qdrant_lib_collection_src_collection_manager_optimizers_segment_optimizer.rs_extracted.txt (actual):tmp/tmpmyp9skj9_actual.txt	
@@ -26,7 +26,6 @@ use crate::collection_manager::holders::segment_holder::{
     LockedSegment, LockedSegmentHolder, SegmentId,
 };
 use crate::config::CollectionParams;
-use crate::operations::config_diff::DiffConfig;
 use crate::operations::types::{CollectionError, CollectionResult};
 
 const BYTES_IN_KB: usize = 1024;
@@ -124,7 +123,7 @@ pub trait SegmentOptimizer {
                 LockedSegment::Proxy(_) => {
                     return Err(CollectionError::service_error(
                         "Proxy segment is not expected here".to_string(),
-                    ));
+                    ))
                 }
             };
             let locked_segment = segment.read();
@@ -704,12 +703,7 @@ pub trait SegmentOptimizer {
                 // Applied optimizations are not removed from `proxy_index_changes`.
                 match change {
                     ProxyIndexChange::Create(schema, version) => {
-                        optimized_segment.create_field_index(
-                            *version,
-                            field_name,
-                            Some(schema),
-                            &hw_counter,
-                        )?;
+                        optimized_segment.create_field_index(*version, field_name, Some(schema), &hw_counter)?;
                     }
                     ProxyIndexChange::Delete(version) => {
                         optimized_segment.delete_field_index(*version, field_name)?;
@@ -762,6 +756,10 @@ pub trait SegmentOptimizer {
                 for proxy in proxies {
                     proxy.drop_data()?;
                 }
+
+                timer.set_success(true);
+
+                Ok(point_count)
             } else {
                 // unlock collection for search and updates
                 drop(write_segments_guard);
@@ -772,11 +770,11 @@ pub trait SegmentOptimizer {
                     proxy.drop_data()?;
                 }
                 tmp_segment.drop_data()?;
-            }
 
-            timer.set_success(true);
+                timer.set_success(true);
 
-            Ok(point_count)
+                Ok(point_count)
+            }
         }
     }
 }
\ No newline at end of file
