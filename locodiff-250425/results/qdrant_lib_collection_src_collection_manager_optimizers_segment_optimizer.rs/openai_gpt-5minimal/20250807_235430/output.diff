
index a458d5593..edf4751f9 100644
--- a/qdrant_lib_collection_src_collection_manager_optimizers_segment_optimizer.rs_expectedoutput.txt (expected):tmp/tmpyl4eqk0j_expected.txt	
+++ b/qdrant_lib_collection_src_collection_manager_optimizers_segment_optimizer.rs_extracted.txt (actual):tmp/tmpz57d_a8t_actual.txt	
@@ -26,7 +26,6 @@ use crate::collection_manager::holders::segment_holder::{
     LockedSegment, LockedSegmentHolder, SegmentId,
 };
 use crate::config::CollectionParams;
-use crate::operations::config_diff::DiffConfig;
 use crate::operations::types::{CollectionError, CollectionResult};
 
 const BYTES_IN_KB: usize = 1024;
@@ -124,7 +123,7 @@ pub trait SegmentOptimizer {
                 LockedSegment::Proxy(_) => {
                     return Err(CollectionError::service_error(
                         "Proxy segment is not expected here".to_string(),
-                    ));
+                    ))
                 }
             };
             let locked_segment = segment.read();
@@ -762,6 +761,10 @@ pub trait SegmentOptimizer {
                 for proxy in proxies {
                     proxy.drop_data()?;
                 }
+
+                timer.set_success(true);
+
+                Ok(point_count)
             } else {
                 // unlock collection for search and updates
                 drop(write_segments_guard);
@@ -772,11 +775,10 @@ pub trait SegmentOptimizer {
                     proxy.drop_data()?;
                 }
                 tmp_segment.drop_data()?;
-            }
-
-            timer.set_success(true);
+                timer.set_success(true);
 
-            Ok(point_count)
+                Ok(point_count)
+            }
         }
     }
 }
\ No newline at end of file
