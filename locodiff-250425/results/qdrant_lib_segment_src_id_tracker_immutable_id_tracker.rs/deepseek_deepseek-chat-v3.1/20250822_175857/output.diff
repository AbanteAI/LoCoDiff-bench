
index 012de67c1..08c4b86c1 100644
--- a/qdrant_lib_segment_src_id_tracker_immutable_id_tracker.rs_expectedoutput.txt (expected):tmp/tmp6a1j2g24_expected.txt	
+++ b/qdrant_lib_segment_src_id_tracker_immutable_id_tracker.rs_extracted.txt (actual):tmp/tmpe0m9mivs_actual.txt	
@@ -627,7 +627,7 @@ pub(super) mod test {
                 }
 
                 if index % 5 == 0 {
-                    let new_version = rng.next_u64();
+                    let new_version = rng.random_range(0..1000);
                     id_tracker
                         .set_internal_version(index as PointOffsetType, new_version)
                         .unwrap();
@@ -719,7 +719,7 @@ pub(super) mod test {
             let intetrnal_id = id_tracker
                 .internal_id(point_to_delete)
                 .expect("Point to delete exists.");
-            assert!(!id_tracker.is_deleted_point(intetrnal_id));
+            assert!(!id_tracker.is_deleted_point(intetrinal_id));
             id_tracker.drop(point_to_delete).unwrap();
             id_tracker.mapping_flusher()().unwrap();
             id_tracker.versions_flusher()().unwrap();
@@ -730,6 +730,7 @@ pub(super) mod test {
         let id_tracker = ImmutableIdTracker::open(dir.path()).unwrap();
         assert_eq!(id_tracker.internal_id(point_to_delete), None);
 
+        // Old mappings should be the same as newly loaded one.
         old_mappings
             .iter_internal_raw()
             .zip(id_tracker.mappings.iter_internal_raw())
