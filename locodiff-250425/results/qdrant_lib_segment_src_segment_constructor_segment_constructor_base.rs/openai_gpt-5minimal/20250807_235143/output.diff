
index 5dbd9e9bd..bd50f89cf 100644
--- a/qdrant_lib_segment_src_segment_constructor_segment_constructor_base.rs_expectedoutput.txt (expected):tmp/tmpe54oeyd1_expected.txt	
+++ b/qdrant_lib_segment_src_segment_constructor_segment_constructor_base.rs_extracted.txt (actual):tmp/tmpxwt7dy5t_actual.txt	
@@ -7,7 +7,6 @@ use std::sync::atomic::AtomicBool;
 
 use atomic_refcell::AtomicRefCell;
 use common::budget::ResourcePermit;
-use common::flags::FeatureFlags;
 use io::storage_version::StorageVersion;
 use log::info;
 use parking_lot::{Mutex, RwLock};
@@ -360,12 +359,6 @@ pub(crate) fn create_rocksdb_id_tracker(
     SimpleIdTracker::open(database)
 }
 
-pub(crate) fn create_immutable_id_tracker(
-    segment_path: &Path,
-) -> OperationResult<ImmutableIdTracker> {
-    ImmutableIdTracker::open(segment_path)
-}
-
 pub(crate) fn get_payload_index_path(segment_path: &Path) -> PathBuf {
     segment_path.join(PAYLOAD_INDEX_PATH)
 }
@@ -385,7 +378,7 @@ pub struct VectorIndexBuildArgs<'a> {
     pub old_indices: &'a [Arc<AtomicRefCell<VectorIndexEnum>>],
     pub gpu_device: Option<&'a LockedGpuDevice<'a>>,
     pub stopped: &'a AtomicBool,
-    pub feature_flags: FeatureFlags,
+    pub feature_flags: common::flags::FeatureFlags,
 }
 
 pub(crate) fn open_vector_index(
@@ -717,6 +710,8 @@ fn create_segment(
         SegmentType::Plain
     };
 
+    let appendable_flag = config.is_appendable();
+
     Ok(Segment {
         version,
         persisted_version: Arc::new(Mutex::new(version)),
@@ -763,8 +758,9 @@ pub fn load_segment(path: &Path, stopped: &AtomicBool) -> OperationResult<Option
 
         if stored_version > app_version {
             return Err(OperationError::service_error(format!(
-                "Data version {stored_version} is newer than application version {app_version}. \
-                Please upgrade the application. Compatibility is not guaranteed."
+                "Data version {} is newer than application version {}. \
+                Please upgrade the application. Compatibility is not guaranteed.",
+                stored_version, app_version
             )));
         }
 
