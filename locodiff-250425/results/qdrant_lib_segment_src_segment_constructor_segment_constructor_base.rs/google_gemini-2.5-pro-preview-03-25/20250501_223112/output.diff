--- qdrant_lib_segment_src_segment_constructor_segment_constructor_base.rs_expectedoutput.txt (expected)+++ qdrant_lib_segment_src_segment_constructor_segment_constructor_base.rs_extracted.txt (actual)@@ -127,14 +127,16 @@                         *multi_vec_config,
                         stopped,
                     ),
-                    VectorStorageDatatype::Float16 => open_simple_multi_dense_vector_storage_half(
-                        database.clone(),
-                        &db_column_name,
-                        vector_config.size,
-                        vector_config.distance,
-                        *multi_vec_config,
-                        stopped,
-                    ),
+                    VectorStorageDatatype::Float16 => {
+                        open_simple_multi_dense_vector_storage_half(
+                            database.clone(),
+                            &db_column_name,
+                            vector_config.size,
+                            vector_config.distance,
+                            *multi_vec_config,
+                            stopped,
+                        )
+                    }
                 }
             } else {
                 match storage_element_type {
@@ -463,6 +465,7 @@         args.config.datatype.unwrap_or_default(),
         sparse_vector_index::USE_COMPRESSED,
     ) {
+        // Datatypes disabled in non-compressed indices
         (_, a @ (VectorStorageDatatype::Float16 | VectorStorageDatatype::Uint8), false) => {
             Err(OperationError::ValidationError {
                 description: format!("{a:?} datatype is not supported"),
@@ -582,7 +585,6 @@     };
 
     let mut vector_storages = HashMap::new();
-
     for (vector_name, vector_config) in &config.vector_data {
         let vector_storage_path = get_vector_storage_path(segment_path, vector_name);
 
@@ -704,8 +706,8 @@         vector_data.insert(
             vector_name.to_owned(),
             VectorData {
+                vector_index,
                 vector_storage,
-                vector_index,
                 quantized_vectors: sp(None),
             },
         );
