
index 751af1b8..9068f4ef 100644
--- a/tldraw_packages_tldraw_src_lib_shapes_geo_GeoShapeUtil.tsx_expectedoutput.txt (expected):tmp/tmpkw1g8x70_expected.txt	
+++ b/tldraw_packages_tldraw_src_lib_shapes_geo_GeoShapeUtil.tsx_extracted.txt (actual):tmp/tmpxfe6qx_1_actual.txt	
@@ -28,17 +28,15 @@ import {
 	getDefaultColorTheme,
 	getFontsFromRichText,
 	getPolygonVertices,
+	isEmptyRichText,
 	lerp,
+	renderHtmlFromRichTextForMeasurement,
+	renderPlaintextFromRichText,
 	toRichText,
 	useValue,
 } from '@tldraw/editor'
 
 import isEqual from 'lodash.isequal'
-import {
-	isEmptyRichText,
-	renderHtmlFromRichTextForMeasurement,
-	renderPlaintextFromRichText,
-} from '../../utils/text/richText'
 import { HyperlinkButton } from '../shared/HyperlinkButton'
 import { RichTextLabel, RichTextSVG } from '../shared/RichTextLabel'
 import {
@@ -171,6 +169,7 @@ export class GeoShapeUtil extends BaseBoxShapeUtil<TLGeoShape> {
 				// have 2 points at the bottom.
 				const sides = 5
 				const step = PI2 / sides / 2
+
 				const rightMostIndex = Math.floor(sides / 4) * 2
 				const leftMostIndex = sides * 2 - rightMostIndex
 				const topMostIndex = 0
@@ -326,32 +325,19 @@ export class GeoShapeUtil extends BaseBoxShapeUtil<TLGeoShape> {
 			}
 		}
 
-		const unscaledlabelSize = getUnscaledLabelSize(this.editor, shape)
-		// unscaled w and h
-		const unscaledW = w / shape.props.scale
-		const unscaledH = h / shape.props.scale
-		const unscaledminWidth = Math.min(100, unscaledW / 2)
-		const unscaledMinHeight = Math.min(
+		const labelSize = getLabelSize(this.editor, shape)
+		const unscaledSize = Math.min(100, w / 2)
+		const minHeight = Math.min(
 			LABEL_FONT_SIZES[shape.props.size] * TEXT_PROPS.lineHeight + LABEL_PADDING * 2,
-			unscaledH / 2
+			h / 2
 		)
 
-		const unscaledLabelWidth = Math.min(
-			unscaledW,
-			Math.max(unscaledlabelSize.w, Math.min(unscaledminWidth, Math.max(1, unscaledW - 8)))
-		)
-		const unscaledLabelHeight = Math.min(
-			unscaledH,
-			Math.max(unscaledlabelSize.h, Math.min(unscaledMinHeight, Math.max(1, unscaledH - 8)))
-		)
-
-		// not sure if bug
+		const labelWidth = Math.min(w, Math.max(labelSize.w, Math.min(unscaledSize, Math.max(1, w - 8))))
+		const labelHeight = Math.min(h, Math.max(labelSize.h, Math.min(minHeight, Math.max(1, w - 8))))
 
 		const lines = getLines(shape.props, STROKE_SIZES[shape.props.size] * shape.props.scale)
 		const edges = lines ? lines.map((line) => new Polyline2d({ points: line })) : []
 
-		// todo: use centroid for label position
-
 		return new Group2d({
 			children: [
 				body,
@@ -360,16 +346,16 @@ export class GeoShapeUtil extends BaseBoxShapeUtil<TLGeoShape> {
 						shape.props.align === 'start'
 							? 0
 							: shape.props.align === 'end'
-								? (unscaledW - unscaledLabelWidth) * shape.props.scale
-								: ((unscaledW - unscaledLabelWidth) / 2) * shape.props.scale,
+							  ? w - labelWidth
+							  : (w - labelWidth) / 2,
 					y:
 						shape.props.verticalAlign === 'start'
 							? 0
 							: shape.props.verticalAlign === 'end'
-								? (unscaledH - unscaledLabelHeight) * shape.props.scale
-								: ((unscaledH - unscaledLabelHeight) / 2) * shape.props.scale,
-					width: unscaledLabelWidth * shape.props.scale,
-					height: unscaledLabelHeight * shape.props.scale,
+							  ? h - labelHeight
+							  : (h - labelHeight) / 2,
+					width: labelWidth,
+					height: labelHeight,
 					isFilled: true,
 					isLabel: true,
 				}),
@@ -379,7 +365,7 @@ export class GeoShapeUtil extends BaseBoxShapeUtil<TLGeoShape> {
 	}
 
 	override getHandleSnapGeometry(shape: TLGeoShape): HandleSnapGeometry {
-		const geometry = this.getGeometry(shape)
+		const geometry = this.editor.getShapeGeometry(shape)
 		// we only want to snap handles to the outline of the shape - not to its label etc.
 		const outline = geometry.children[0]
 		switch (shape.props.geo) {
@@ -475,7 +461,7 @@ export class GeoShapeUtil extends BaseBoxShapeUtil<TLGeoShape> {
 	}
 
 	indicator(shape: TLGeoShape) {
-		const { id, props } = shape
+		const { props, id } = shape
 		const { w, size } = props
 		const h = props.h + props.growY
 
@@ -502,7 +488,6 @@ export class GeoShapeUtil extends BaseBoxShapeUtil<TLGeoShape> {
 			}
 
 			default: {
-				const geometry = this.editor.getShapeGeometry(shape)
 				const outline =
 					geometry instanceof Group2d ? geometry.children[0].vertices : geometry.vertices
 				let path: string
@@ -819,6 +804,7 @@ export class GeoShapeUtil extends BaseBoxShapeUtil<TLGeoShape> {
 
 		return
 	}
+
 	override getInterpolatedProps(
 		startShape: TLGeoShape,
 		endShape: TLGeoShape,
@@ -862,17 +848,4 @@ function getUnscaledLabelSize(editor: Editor, shape: TLGeoShape) {
 		fontSize: LABEL_FONT_SIZES[size],
 		minWidth: minSize.w,
 		maxWidth: Math.max(
-			// Guard because a DOM nodes can't be less 0
-			0,
-			// A 'w' width that we're setting as the min-width
-			Math.ceil(minSize.w + sizes[size]),
-			// The actual text size
-			Math.ceil(w / shape.props.scale - LABEL_PADDING * 2)
-		),
-	})
-
-	return {
-		w: textSize.w + LABEL_PADDING * 2,
-		h: textSize.h + LABEL_PADDING * 2,
-	}
-}
\ No newline at end of file
+			// Guard because a DOM nodes can't be
\ No newline at end of file
