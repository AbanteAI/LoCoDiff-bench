--- tldraw_packages_tldraw_src_lib_shapes_geo_GeoShapeUtil.tsx_expectedoutput.txt (expected)+++ tldraw_packages_tldraw_src_lib_shapes_geo_GeoShapeUtil.tsx_extracted.txt (actual)@@ -40,6 +40,8 @@ 	renderPlaintextFromRichText,
 } from '../../utils/text/richText'
 import { HyperlinkButton } from '../shared/HyperlinkButton'
+import { useDefaultColorTheme } from '../shared/useDefaultColorTheme'
+import { useIsReadyForEditing } from '../shared/useEditablePlainText'
 import { RichTextLabel, RichTextSVG } from '../shared/RichTextLabel'
 import {
 	FONT_FAMILIES,
@@ -49,8 +51,6 @@ 	TEXT_PROPS,
 } from '../shared/default-shape-constants'
 import { getFillDefForCanvas, getFillDefForExport } from '../shared/defaultStyleDefs'
-import { useDefaultColorTheme } from '../shared/useDefaultColorTheme'
-import { useIsReadyForEditing } from '../shared/useEditablePlainText'
 import { GeoShapeBody } from './components/GeoShapeBody'
 import {
 	cloudOutline,
@@ -326,7 +326,7 @@ 			}
 		}
 
-		const unscaledlabelSize = getUnscaledLabelSize(this.editor, shape)
+		const labelSize = getUnscaledLabelSize(this.editor, shape)
 		// unscaled w and h
 		const unscaledW = w / shape.props.scale
 		const unscaledH = h / shape.props.scale
@@ -338,11 +338,11 @@ 
 		const unscaledLabelWidth = Math.min(
 			unscaledW,
-			Math.max(unscaledlabelSize.w, Math.min(unscaledminWidth, Math.max(1, unscaledW - 8)))
+			Math.max(labelSize.w, Math.min(unscaledminWidth, Math.max(1, unscaledW - 8)))
 		)
 		const unscaledLabelHeight = Math.min(
 			unscaledH,
-			Math.max(unscaledlabelSize.h, Math.min(unscaledMinHeight, Math.max(1, unscaledH - 8)))
+			Math.max(labelSize.h, Math.min(unscaledMinHeight, Math.max(1, unscaledH - 8)))
 		)
 
 		// not sure if bug
@@ -502,7 +502,6 @@ 			}
 
 			default: {
-				const geometry = this.editor.getShapeGeometry(shape)
 				const outline =
 					geometry instanceof Group2d ? geometry.children[0].vertices : geometry.vertices
 				let path: string
@@ -819,6 +818,7 @@ 
 		return
 	}
+
 	override getInterpolatedProps(
 		startShape: TLGeoShape,
 		endShape: TLGeoShape,
