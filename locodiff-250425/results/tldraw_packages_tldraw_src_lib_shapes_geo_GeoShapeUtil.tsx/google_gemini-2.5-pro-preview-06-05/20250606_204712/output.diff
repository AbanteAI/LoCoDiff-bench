
index 751af1b8f..5e270185f 100644
--- a/tldraw_packages_tldraw_src_lib_shapes_geo_GeoShapeUtil.tsx_expectedoutput.txt (expected):tmp/tmpjj5jqfmo_expected.txt	
+++ b/tldraw_packages_tldraw_src_lib_shapes_geo_GeoShapeUtil.tsx_extracted.txt (actual):tmp/tmpkisli4ek_actual.txt	
@@ -186,8 +186,8 @@ export class GeoShapeUtil extends BaseBoxShapeUtil<TLGeoShape> {
 				const offsetY = h / 2 + minY - (h / 2 - maxY)
 
 				const ratio = 1
-				const cx = (w - offsetX) / 2
-				const cy = (h - offsetY) / 2
+				const cxStar = (w - offsetX) / 2
+				const cyStar = (h - offsetY) / 2
 				const ox = (w + diffX) / 2
 				const oy = (h + diffY) / 2
 				const ix = (ox * ratio) / 2
@@ -197,8 +197,8 @@ export class GeoShapeUtil extends BaseBoxShapeUtil<TLGeoShape> {
 					points: Array.from(Array(sides * 2)).map((_, i) => {
 						const theta = -HALF_PI + i * step
 						return new Vec(
-							cx + (i % 2 ? ix : ox) * Math.cos(theta),
-							cy + (i % 2 ? iy : oy) * Math.sin(theta)
+							cxStar + (i % 2 ? ix : ox) * Math.cos(theta),
+							cyStar + (i % 2 ? iy : oy) * Math.sin(theta)
 						)
 					}),
 					isFilled,
@@ -502,9 +502,7 @@ export class GeoShapeUtil extends BaseBoxShapeUtil<TLGeoShape> {
 			}
 
 			default: {
-				const geometry = this.editor.getShapeGeometry(shape)
-				const outline =
-					geometry instanceof Group2d ? geometry.children[0].vertices : geometry.vertices
+				const outline = geometry.children[0].vertices
 				let path: string
 
 				if (props.dash === 'draw') {
