
index 6902880d..0f55a458 100644
--- a/qdrant_lib_segment_benches_vector_search.rs_expectedoutput.txt (expected):tmp/tmphli0ih0i_expected.txt	
+++ b/qdrant_lib_segment_benches_vector_search.rs_extracted.txt (actual):tmp/tmpz7g6vin9_actual.txt	
@@ -6,8 +6,8 @@ use atomic_refcell::AtomicRefCell;
 use common::counter::hardware_counter::HardwareCounterCell;
 use common::types::PointOffsetType;
 use criterion::{Criterion, criterion_group, criterion_main};
-use rand::Rng;
 use rand::distr::StandardUniform;
+use rand::Rng;
 use segment::common::rocksdb_wrapper::{DB_VECTOR_CF, open_db};
 use segment::data_types::vectors::{DenseVector, VectorInternal, VectorRef};
 use segment::fixtures::payload_context_fixture::FixtureIdTracker;
@@ -90,7 +90,6 @@ fn random_access_benchmark(c: &mut Criterion) {
 
     let vector = random_vector(DIM);
     let vector = vector.as_slice().into();
-
     let scorer = new_raw_scorer_for_test(
         vector,
         &storage,
