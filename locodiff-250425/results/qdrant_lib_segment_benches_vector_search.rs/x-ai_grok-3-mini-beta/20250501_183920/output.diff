
index 6902880d..640d46d2 100644
--- a/qdrant_lib_segment_benches_vector_search.rs_expectedoutput.txt (expected):tmp/tmp1r4sunco_expected.txt	
+++ b/qdrant_lib_segment_benches_vector_search.rs_extracted.txt (actual):tmp/tmphhs7e3hb_actual.txt	
@@ -3,7 +3,6 @@ use std::sync::Arc;
 use std::sync::atomic::AtomicBool;
 
 use atomic_refcell::AtomicRefCell;
-use common::counter::hardware_counter::HardwareCounterCell;
 use common::types::PointOffsetType;
 use criterion::{Criterion, criterion_group, criterion_main};
 use rand::Rng;
@@ -14,9 +13,7 @@ use segment::fixtures::payload_context_fixture::FixtureIdTracker;
 use segment::id_tracker::IdTrackerSS;
 use segment::types::Distance;
 use segment::vector_storage::dense::simple_dense_vector_storage::open_simple_dense_vector_storage;
-use segment::vector_storage::{
-    DEFAULT_STOPPED, VectorStorage, VectorStorageEnum, new_raw_scorer_for_test,
-};
+use segment::vector_storage::{DEFAULT_STOPPED, VectorStorage, VectorStorageEnum, new_raw_scorer_for_test};
 use tempfile::Builder;
 
 const NUM_VECTORS: usize = 100000;
@@ -41,7 +38,6 @@ fn init_vector_storage(
             .unwrap();
 
     let hw_counter = HardwareCounterCell::new();
-
     {
         for i in 0..num {
             let vector: VectorInternal = random_vector(dim).into();
@@ -95,8 +91,7 @@ fn random_access_benchmark(c: &mut Criterion) {
         vector,
         &storage,
         borrowed_id_tracker.deleted_point_bitslice(),
-    )
-    .unwrap();
+    ).unwrap();
 
     let mut total_score = 0.;
     group.bench_function("storage vector search", |b| {
