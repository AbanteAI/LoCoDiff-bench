--- aider_tests_basic_test_repomap.py_expectedoutput.txt (expected)+++ aider_tests_basic_test_repomap.py_extracted.txt (actual)@@ -274,11 +274,6 @@             del repo_map
 
 
-class TestRepoMapTypescript(unittest.TestCase):
-    def setUp(self):
-        self.GPT35 = Model("gpt-3.5-turbo")
-
-
 class TestRepoMapAllLanguages(unittest.TestCase):
     def setUp(self):
         self.GPT35 = Model("gpt-3.5-turbo")
@@ -286,101 +281,70 @@ 
     def test_language_c(self):
         self._test_language_repo_map("c", "c", "main")
-
     def test_language_cpp(self):
         self._test_language_repo_map("cpp", "cpp", "main")
-
     def test_language_d(self):
         self._test_language_repo_map("d", "d", "main")
-
     def test_language_dart(self):
         self._test_language_repo_map("dart", "dart", "Person")
-
     def test_language_elixir(self):
         self._test_language_repo_map("elixir", "ex", "Greeter")
-
     def test_language_gleam(self):
         self._test_language_repo_map("gleam", "gleam", "greet")
-
     def test_language_java(self):
         self._test_language_repo_map("java", "java", "Greeting")
-
     def test_language_javascript(self):
         self._test_language_repo_map("javascript", "js", "Person")
-
     def test_language_kotlin(self):
         self._test_language_repo_map("kotlin", "kt", "Greeting")
-
     def test_language_lua(self):
         self._test_language_repo_map("lua", "lua", "greet")
-
     # "ocaml": ("ml", "Greeter"), # not supported in tsl-pack (yet?)
-
     def test_language_php(self):
         self._test_language_repo_map("php", "php", "greet")
-
     def test_language_python(self):
         self._test_language_repo_map("python", "py", "Person")
-
     # "ql": ("ql", "greet"), # not supported in tsl-pack (yet?)
-
     def test_language_ruby(self):
         self._test_language_repo_map("ruby", "rb", "greet")
-
     def test_language_rust(self):
         self._test_language_repo_map("rust", "rs", "Person")
-
     def test_language_typescript(self):
         self._test_language_repo_map("typescript", "ts", "greet")
-
     def test_language_tsx(self):
         self._test_language_repo_map("tsx", "tsx", "UserProps")
-
     def test_language_csharp(self):
         self._test_language_repo_map("csharp", "cs", "IGreeter")
-
     def test_language_elisp(self):
         self._test_language_repo_map("elisp", "el", "greeter")
-
     def test_language_elm(self):
         self._test_language_repo_map("elm", "elm", "Person")
-
     def test_language_go(self):
         self._test_language_repo_map("go", "go", "Greeter")
-
     def test_language_hcl(self):
         self._test_language_repo_map("hcl", "tf", "aws_vpc")
-
     def test_language_arduino(self):
         self._test_language_repo_map("arduino", "ino", "setup")
-
     def test_language_chatito(self):
         self._test_language_repo_map("chatito", "chatito", "intent")
-
     def test_language_commonlisp(self):
         self._test_language_repo_map("commonlisp", "lisp", "greet")
-
     def test_language_pony(self):
         self._test_language_repo_map("pony", "pony", "Greeter")
-
     def test_language_properties(self):
-        self._test_language_repo_map("properties", "properties", "database.url")
-
+        self._test_language_repo_map(
+            "properties", "properties", "database.url"
+        )
     def test_language_r(self):
         self._test_language_repo_map("r", "r", "calculate")
-
     def test_language_racket(self):
         self._test_language_repo_map("racket", "rkt", "greet")
-
     def test_language_solidity(self):
         self._test_language_repo_map("solidity", "sol", "SimpleStorage")
-
     def test_language_swift(self):
         self._test_language_repo_map("swift", "swift", "Greeter")
-
     def test_language_udev(self):
         self._test_language_repo_map("udev", "rules", "USB_DRIVER")
-
     def test_language_scala(self):
         self._test_language_repo_map("scala", "scala", "Greeter")
 
@@ -437,12 +401,12 @@ 
         # Initialize RepoMap with the sample code base as root
         io = InputOutput()
-        repomap_root = Path(__file__).parent.parent.parent
         repo_map = RepoMap(
             main_model=self.GPT35,
-            root=str(repomap_root),
+            root=str(Path(__file__).parent.parent.parent),
             io=io,
         )
+
 
         # Get all files in the sample code base
         other_files = [str(f) for f in sample_code_base.rglob("*") if f.is_file()]
