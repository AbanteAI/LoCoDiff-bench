--- aider_tests_basic_test_repomap.py_expectedoutput.txt (expected)+++ aider_tests_basic_test_repomap.py_extracted.txt (actual)@@ -91,12 +91,16 @@             self.assertEqual(
                 initial_map, second_map, "RepoMap should not change with refresh='files'"
             )
-
+            # Because repo_map should not update unless it sees file1.py in one of the args lists
+            # it doesn't matter that it was changed on disk
+
+            # When file1.py is passed in, either in chat or other, it should trigger a reread
             other_files = [
                 os.path.join(temp_dir, "file1.py"),
                 os.path.join(temp_dir, "file2.py"),
             ]
             second_map = repo_map.get_repo_map([], other_files)
+            # Now we should see the new function
             self.assertIn("functionNEW", second_map)
 
             # close the open cache files, so Windows won't error
@@ -272,11 +276,6 @@ 
             # close the open cache files, so Windows won't error
             del repo_map
-
-
-class TestRepoMapTypescript(unittest.TestCase):
-    def setUp(self):
-        self.GPT35 = Model("gpt-3.5-turbo")
 
 
 class TestRepoMapAllLanguages(unittest.TestCase):
