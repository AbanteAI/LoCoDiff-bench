--- tldraw_packages_tldraw_src_lib_ui_hooks_useClipboardEvents.ts_expectedoutput.txt (expected)+++ tldraw_packages_tldraw_src_lib_ui_hooks_useClipboardEvents.ts_extracted.txt (actual)@@ -528,7 +528,7 @@ 	// Try to paste a link
 	for (const result of results) {
 		if (result.type === 'text' && result.subtype === 'url') {
-			pasteUrl(editor, result.data, point, results)
+			pasteUrl(editor, result.data, point)
 			return
 		}
 	}
@@ -740,15 +740,7 @@ 			if (editor.user.getIsPasteAtCursorMode()) pasteAtCursor = !pasteAtCursor
 			if (pasteAtCursor) point = editor.inputs.currentPagePoint
 
-			const pasteFromEvent = () => {
-				if (e.clipboardData) {
-					handlePasteFromEventClipboardData(editor, e.clipboardData, point)
-				}
-			}
-
-			// if we can read from the clipboard API, we want to try using that first. that allows
-			// us to access most things, and doesn't strip out metadata added to tldraw's own
-			// copy-as-png features - so copied shapes come back in at the correct size.
+			// First try to use the clipboard API:
 			if (navigator.clipboard?.read) {
 				// We can't read files from the filesystem using the clipboard API though - they'll
 				// just come in as the file names instead. So we'll use the clipboard event's files
