
index 5ea95b92f..44e86f7d7 100644
--- a/tldraw_packages_tldraw_src_lib_ui_hooks_useClipboardEvents.ts_expectedoutput.txt (expected):tmp/tmpgmjbhbsu_expected.txt	
+++ b/tldraw_packages_tldraw_src_lib_ui_hooks_useClipboardEvents.ts_extracted.txt (actual):tmp/tmpo2sqnges_actual.txt	
@@ -21,17 +21,6 @@ import { TLUiEventSource, useUiEvents } from '../context/events'
 import { pasteFiles } from './clipboard/pasteFiles'
 import { pasteUrl } from './clipboard/pasteUrl'
 
-// Expected paste mime types. The earlier in this array they appear, the higher preference we give
-// them. For example, we prefer the `web image/png+tldraw` type to plain `image/png` as it does not
-// strip some of the extra metadata we write into it.
-const expectedPasteFileMimeTypes = [
-	TLDRAW_CUSTOM_PNG_MIME_TYPE,
-	'image/png',
-	'image/jpeg',
-	'image/webp',
-	'image/svg+xml',
-] satisfies string[]
-
 /**
  * Strip HTML tags from a string.
  * @param html - The HTML to strip.
@@ -219,6 +208,17 @@ const handlePasteFromEventClipboardData = async (
 	handleClipboardThings(editor, things, point)
 }
 
+// Expected paste mime types. The earlier in this array they appear, the higher preference we give
+// them. For example, we prefer the `web image/png+tldraw` type to plain `image/png` as it does not
+// strip some of the extra metadata we write into it.
+const expectedPasteFileMimeTypes = [
+	TLDRAW_CUSTOM_PNG_MIME_TYPE,
+	'image/png',
+	'image/jpeg',
+	'image/webp',
+	'image/svg+xml',
+] satisfies string[]
+
 /**
  * Handle a paste using items retrieved from the Clipboard API.
  * https://developer.mozilla.org/en-US/docs/Web/tldraw_packages_tldraw_src_lib_ui_hooks_useClipboardEvents.ts_extracted.txt (actual): Editor, things: ClipboardThing[], p
 						const thing = t as Exclude<ClipboardThing, { type: 'file' } | { type: 'blob' }>
 
 						if (thing.type === 'file') {
-							r({ type: 'error', data: null, reason: 'unexpected file' })
+							r({ type: 'error', data: null, reason: 'unexpected file' } as any)
 							return
 						}
 
@@ -359,7 +359,7 @@ async function handleClipboardThings(editor: Editor, things: ClipboardThing[], p
 											type: 'error',
 											data: jsonComment,
 											reason: `found tldraw data comment but could not parse base64`,
-										})
+										} as any)
 										return
 									} else {
 										const json = JSON.parse(jsonComment)
@@ -368,7 +368,7 @@ async function handleClipboardThings(editor: Editor, things: ClipboardThing[], p
 												type: 'error',
 												data: json,
 												reason: `found tldraw data comment but JSON was of a different type: ${json.type}`,
-											})
+											} as any)
 										}
 
 										if (typeof json.data === 'string') {
@@ -377,11 +377,11 @@ async function handleClipboardThings(editor: Editor, things: ClipboardThing[], p
 												data: json,
 												reason:
 													'found tldraw json but data was a string instead of a TLClipboardModel object',
-											})
+											} as any)
 											return
 										}
 
-										r({ type: 'tldraw', data: json.data })
+										r({ type: 'tldraw', data: json.data } as any)
 										return
 									}
 								} catch {
@@ -390,17 +390,17 @@ async function handleClipboardThings(editor: Editor, things: ClipboardThing[], p
 										data: tldrawHtmlComment,
 										reason:
 											'found tldraw json but data was a string instead of a TLClipboardModel object',
-									})
+									} as any)
 									return
 								}
 							} else {
 								if (thing.type === 'html') {
-									r({ type: 'text', data: text, subtype: 'html' })
+									r({ type: 'text', data: text, subtype: 'html' } as any)
 									return
 								}
 
 								if (thing.type === 'url') {
-									r({ type: 'text', data: text, subtype: 'url' })
+									r({ type: 'text', data: text, subtype: 'url' } as any)
 									return
 								}
 
@@ -409,20 +409,20 @@ async function handleClipboardThings(editor: Editor, things: ClipboardThing[], p
 									const json = JSON.parse(text)
 									if (json.type === 'excalidraw/clipboard') {
 										// If the clipboard contains content copied from excalidraw, then paste that
-										r({ type: 'excalidraw', data: json })
+										r({ type: 'excalidraw', data: json } as any)
 										return
 									} else {
-										r({ type: 'text', data: text, subtype: 'json' })
+										r({ type: 'text', data: text, subtype: 'json' } as any)
 										return
 									}
 								} catch {
 									// If we could not parse the text as JSON, then it's just text
-									r({ type: 'text', data: text, subtype: 'text' })
+									r({ type: 'text', data: text, subtype: 'text' } as any)
 									return
 								}
 							}
 
-							r({ type: 'error', data: text, reason: 'unhandled case' })
+							r({ type: 'error', data: text, reason: 'unhandled case' } as any)
 						})
 					})
 			)
