--- tldraw_packages_tldraw_src_lib_ui_hooks_useClipboardEvents.ts_expectedoutput.txt (expected)+++ tldraw_packages_tldraw_src_lib_ui_hooks_useClipboardEvents.ts_extracted.txt (actual)@@ -461,7 +461,7 @@ 			const bodyNode = rootNode.querySelector('body')
 
 			// Edge on Windows 11 home appears to paste a link as a single <a/> in
-			// the HTML document. If we're pasting a single like tag we'll just
+			// the HTML document.If we're pasting a single like tag we'll just
 			// assume the user meant to paste the URL.
 			const isHtmlSingleLink =
 				bodyNode &&
@@ -478,7 +478,7 @@ 			}
 
 			// If the html is NOT a link, and we have NO OTHER texty content, then paste the html as text
-			if (!results.some((r) => r.type === 'text' && r.subtype !== 'html') && result.data.trim()) {
+			if (!results.some((r) => r.type === 'text' && r.subtype !== 'html')) {
 				const html = stripHtml(result.data) ?? ''
 				if (html) {
 					handleText(editor, stripHtml(result.data), point, results)
@@ -528,7 +528,7 @@ 	// Try to paste a link
 	for (const result of results) {
 		if (result.type === 'text' && result.subtype === 'url') {
-			pasteUrl(editor, result.data, point, results)
+			pasteUrl(editor, result.data, point)
 			return
 		}
 	}
@@ -537,7 +537,7 @@ 	for (const result of results) {
 		if (result.type === 'text' && result.subtype === 'text' && result.data.trim()) {
 			// The clipboard may include multiple text items, but we only want to paste the first one
-			handleText(editor, result.data, point, results)
+			handleText(editor, result.data, point)
 			return
 		}
 	}
@@ -739,12 +739,6 @@ 			if (editor.inputs.shiftKey) pasteAtCursor = true
 			if (editor.user.getIsPasteAtCursorMode()) pasteAtCursor = !pasteAtCursor
 			if (pasteAtCursor) point = editor.inputs.currentPagePoint
-
-			const pasteFromEvent = () => {
-				if (e.clipboardData) {
-					handlePasteFromEventClipboardData(editor, e.clipboardData, point)
-				}
-			}
 
 			// if we can read from the clipboard API, we want to try using that first. that allows
 			// us to access most things, and doesn't strip out metadata added to tldraw's own
@@ -773,6 +767,12 @@ 			trackEvent('paste', { source: 'kbd' })
 		}
 
+		const pasteFromEvent = () => {
+			if (e.clipboardData) {
+				handlePasteFromEventClipboardData(editor, e.clipboardData, point)
+			}
+		}
+
 		document.addEventListener('copy', copy)
 		document.addEventListener('cut', cut)
 		document.addEventListener('paste', paste)
