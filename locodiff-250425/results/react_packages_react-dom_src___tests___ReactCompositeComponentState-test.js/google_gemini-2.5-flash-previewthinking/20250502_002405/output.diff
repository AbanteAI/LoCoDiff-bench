--- react_packages_react-dom_src___tests___ReactCompositeComponentState-test.js_expectedoutput.txt (expected)+++ react_packages_react-dom_src___tests___ReactCompositeComponentState-test.js_extracted.txt (actual)@@ -71,14 +71,14 @@ 
       UNSAFE_componentWillMount() {
         this.peekAtState('componentWillMount-start');
-        this.setState(function (state) {
+        this.setState(function(state) {
           this.peekAtState('before-setState-sunrise', state);
         });
         this.setState(
           {color: 'sunrise'},
           this.peekAtCallback('setState-sunrise'),
         );
-        this.setState(function (state) {
+        this.setState(function(state) {
           this.peekAtState('after-setState-sunrise', state);
         });
         this.peekAtState('componentWillMount-after-sunrise');
@@ -86,7 +86,7 @@           {color: 'orange'},
           this.peekAtCallback('setState-orange'),
         );
-        this.setState(function (state) {
+        this.setState(function(state) {
           this.peekAtState('after-setState-orange', state);
         });
         this.peekAtState('componentWillMount-end');
@@ -104,18 +104,18 @@       UNSAFE_componentWillReceiveProps(newProps) {
         this.peekAtState('componentWillReceiveProps-start');
         if (newProps.nextColor) {
-          this.setState(function (state) {
+          this.setState(function(state) {
             this.peekAtState('before-setState-receiveProps', state);
             return {color: newProps.nextColor};
           });
           // No longer a public API, but we can test that it works internally by
           // reaching into the updater.
           this.updater.enqueueReplaceState(this, {color: undefined});
-          this.setState(function (state) {
+          this.setState(function(state) {
             this.peekAtState('before-setState-again-receiveProps', state);
             return {color: newProps.nextColor};
           }, this.peekAtCallback('setState-receiveProps'));
-          this.setState(function (state) {
+          this.setState(function(state) {
             this.peekAtState('after-setState-receiveProps', state);
           });
         }
@@ -300,6 +300,8 @@       root.render(<Parent />);
     });
 
+    assertLog(['child did update', 'parent did update']);
+
     await act(() => {
       parent.setState({foo: true});
       child.setState({bar: true});
