
index c73d0a5b6..efe054eb0 100644
--- a/react_packages_react-dom_src___tests___ReactCompositeComponentState-test.js_expectedoutput.txt (expected):tmp/tmpuuf2m58d_expected.txt	
+++ b/react_packages_react-dom_src___tests___ReactCompositeComponentState-test.js_extracted.txt (actual):tmp/tmp_xz3_2mi_actual.txt	
@@ -300,11 +300,24 @@ describe('ReactCompositeComponent-state', () => {
       root.render(<Parent />);
     });
 
+    assertLog(['parent render one', 'child render one']);
+    await act(() => {
+      root.render(<Parent />);
+    });
+
+    assertLog([
+      'parent render one',
+      'child componentWillReceiveProps one',
+      'child componentWillReceiveProps done one',
+      'child render one',
+      'parent render two',
+      'child render two',
+    ]);
+
     await act(() => {
       parent.setState({foo: true});
       child.setState({bar: true});
     });
-
     // When we render changes top-down in a batch, children's componentDidUpdate
     // happens before the parent.
     assertLog(['child did update', 'parent did update']);
@@ -315,7 +328,6 @@ describe('ReactCompositeComponent-state', () => {
       parent.setState({foo: false});
       child.setState({bar: false});
     });
-
     // We expect the same thing to happen if we bail out in the middle.
     assertLog(['child did update', 'parent did update']);
   });
@@ -387,13 +399,13 @@ describe('ReactCompositeComponent-state', () => {
     await act(() => {
       root.render(<Parent />);
     });
-
-    assertLog(['parent render one', 'child render one']);
     await act(() => {
       root.render(<Parent />);
     });
 
     assertLog([
+      'parent render one',
+      'child render one',
       'parent render one',
       'child componentWillReceiveProps one',
       'child componentWillReceiveProps done one',
