
index c73d0a5b..d0728d44 100644
--- a/react_packages_react-dom_src___tests___ReactCompositeComponentState-test.js_expectedoutput.txt (expected):tmp/tmpoqhbkq8a_expected.txt	
+++ b/react_packages_react-dom_src___tests___ReactCompositeComponentState-test.js_extracted.txt (actual):tmp/tmpawre8uy3_actual.txt	
@@ -304,7 +304,6 @@ describe('ReactCompositeComponent-state', () => {
       parent.setState({foo: true});
       child.setState({bar: true});
     });
-
     // When we render changes top-down in a batch, children's componentDidUpdate
     // happens before the parent.
     assertLog(['child did update', 'parent did update']);
@@ -315,7 +314,6 @@ describe('ReactCompositeComponent-state', () => {
       parent.setState({foo: false});
       child.setState({bar: false});
     });
-
     // We expect the same thing to happen if we bail out in the middle.
     assertLog(['child did update', 'parent did update']);
   });
@@ -350,7 +348,6 @@ describe('ReactCompositeComponent-state', () => {
     await act(() => {
       root.render(<Outer />);
     });
-
     expect(() => {
       root.unmount();
     }).not.toThrow();
@@ -389,10 +386,10 @@ describe('ReactCompositeComponent-state', () => {
     });
 
     assertLog(['parent render one', 'child render one']);
+
     await act(() => {
       root.render(<Parent />);
     });
-
     assertLog([
       'parent render one',
       'child componentWillReceiveProps one',
@@ -487,11 +484,9 @@ describe('ReactCompositeComponent-state', () => {
     ]);
 
     // Check deduplication; (no additional warnings are expected)
-    expect(() => {
-      ReactDOM.flushSync(() => {
-        root.render(<Test />);
-      });
-    }).not.toThrow();
+    ReactDOM.flushSync(() => {
+      root.render(<Test />);
+    });
   });
 
   it('should treat assigning to this.state inside cWM as a replaceState, with a warning', () => {
