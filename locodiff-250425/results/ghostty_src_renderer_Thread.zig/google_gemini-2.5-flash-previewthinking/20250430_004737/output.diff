
index 11175f62..f198dd0b 100644
--- a/ghostty_src_renderer_Thread.zig_expectedoutput.txt (expected):tmp/tmpjkfik3gu_expected.txt	
+++ b/ghostty_src_renderer_Thread.zig_extracted.txt (actual):tmp/tmp8toqk0mn_actual.txt	
@@ -100,6 +100,7 @@ flags: packed struct {
     focused: bool = true,
 } = .{},
 
+
 pub const DerivedConfig = struct {
     custom_shader_animation: configpkg.CustomShaderAnimation,
 
@@ -490,7 +491,7 @@ fn wakeupCallback(
         return .rearm;
     };
 
-    const t = self_.?;
+    const t: *Thread = self_.?;
 
     // When we wake up, we check the mailbox. Mailbox producers should
     // wake up our thread after publishing.
@@ -532,7 +533,7 @@ fn drawNowCallback(
     };
 
     // Draw immediately
-    const t = self_.?;
+    const t: *Thread = self_.?;
     t.drawFrame(true);
 
     return .rearm;
@@ -575,12 +576,6 @@ fn renderCallback(
         return .disarm;
     };
 
-    // If we have an inspector, let the app know we want to rerender that.
-    if (t.flags.has_inspector) {
-        _ = t.app_mailbox.push(.{ .redraw_inspector = t.surface }, .{ .instant = {} });
-    }
-
-    // Update our frame data
     t.renderer.updateFrame(
         t.surface,
         t.state,
@@ -637,7 +632,7 @@ fn cursorCancelCallback(
         Unexpected,
     };
 
-    _ = r catch |err| switch (@as(CancelError, @errorCast(err))) {
+    _ = r catch |err| switch (@errorCast(err)) {
         error.Canceled => {}, // success
         error.NotFound => {}, // completed before it could cancel
         else => {
