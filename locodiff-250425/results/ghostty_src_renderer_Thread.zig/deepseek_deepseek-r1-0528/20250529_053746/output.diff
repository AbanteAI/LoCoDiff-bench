
index 11175f626..719a1ed3e 100644
--- a/ghostty_src_renderer_Thread.zig_expectedoutput.txt (expected):tmp/tmph6mrldv0_expected.txt	
+++ b/ghostty_src_renderer_Thread.zig_extracted.txt (actual):tmp/tmpxcw6m55d_actual.txt	
@@ -227,7 +227,8 @@ fn threadMain_(self: *Thread) !void {
     // Send an initial wakeup message so that we render right away.
     try self.wakeup.notify();
 
-    // Start blinking the cursor.
+    // Setup a timer for blinking the cursor.
+    self.flags.cursor_blink_visible = true;
     self.cursor_h.run(
         &self.loop,
         &self.cursor_c,
@@ -325,7 +326,7 @@ fn drainMailbox(self: *Thread) !void {
                 // If we became visible then we immediately trigger a draw.
                 // We don't need to update frame data because that should
                 // still be happening.
-                if (v) self.drawFrame(false);
+                if (v) self.drawFrame(true);
 
                 // Notify the renderer so it can update any state.
                 self.renderer.setVisible(v);
@@ -587,8 +588,6 @@ fn renderCallback(
         t.flags.cursor_blink_visible,
     ) catch |err|
         log.warn("error rendering err={}", .{err});
-
-    // Draw
     t.drawFrame(false);
 
     return .disarm;
@@ -649,12 +648,6 @@ fn cursorCancelCallback(
     return .disarm;
 }
 
-// fn prepFrameCallback(h: *libuv.Prepare) void {
-//     _ = h;
-//
-//     tracy.frameMark();
-// }
-
 fn stopCallback(
     self_: ?*Thread,
     _: *xev.Loop,
