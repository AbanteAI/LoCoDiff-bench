
index 11175f626..06b4ef283 100644
--- a/ghostty_src_renderer_Thread.zig_expectedoutput.txt (expected):tmp/tmplz_jrimh_expected.txt	
+++ b/ghostty_src_renderer_Thread.zig_extracted.txt (actual):tmp/tmp0croeoo6_actual.txt	
@@ -1,6 +1,4 @@
-//! Represents the renderer thread logic. The renderer thread is able to
-//! be woken up to render.
-pub const Thread = @This();
+const Thread = @This();
 
 const std = @import("std");
 const builtin = @import("builtin");
@@ -390,21 +388,6 @@ fn drainMailbox(self: *Thread) !void {
                 }
             },
 
-            .reset_cursor_blink => {
-                self.flags.cursor_blink_visible = true;
-                if (self.cursor_c.state() == .active) {
-                    self.cursor_h.reset(
-                        &self.loop,
-                        &self.cursor_c,
-                        &self.cursor_c_cancel,
-                        CURSOR_BLINK_INTERVAL,
-                        Thread,
-                        self,
-                        cursorTimerCallback,
-                    );
-                }
-            },
-
             .font_grid => |grid| {
                 self.renderer.setFontGrid(grid.grid);
                 grid.set.deref(grid.old_key);
@@ -649,12 +632,6 @@ fn cursorCancelCallback(
     return .disarm;
 }
 
-// fn prepFrameCallback(h: *libuv.Prepare) void {
-//     _ = h;
-//
-//     tracy.frameMark();
-// }
-
 fn stopCallback(
     self_: ?*Thread,
     _: *xev.Loop,
