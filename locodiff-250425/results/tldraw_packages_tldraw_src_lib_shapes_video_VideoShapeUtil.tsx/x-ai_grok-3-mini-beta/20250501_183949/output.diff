
index eee57f79..022bfe0d 100644
--- a/tldraw_packages_tldraw_src_lib_shapes_video_VideoShapeUtil.tsx_expectedoutput.txt (expected):tmp/tmp6zdg33h6_expected.txt	
+++ b/tldraw_packages_tldraw_src_lib_shapes_video_VideoShapeUtil.tsx_extracted.txt (actual):tmp/tmp8o_y63sj_actual.txt	
@@ -3,15 +3,14 @@ import {
 	HTMLContainer,
 	MediaHelpers,
 	SvgExportContext,
-	TLAsset,
 	TLVideoShape,
 	toDomPrecision,
 	useEditor,
 	useEditorComponents,
 	useIsEditing,
+	usePrefersReducedMotion,
 	videoShapeMigrations,
 	videoShapeProps,
-	WeakCache,
 } from '@tldraw/editor'
 import classNames from 'classnames'
 import { memo, ReactEventHandler, useCallback, useEffect, useRef, useState } from 'react'
@@ -20,7 +19,7 @@ import { HyperlinkButton } from '../shared/HyperlinkButton'
 import { useImageOrVideoAsset } from '../shared/useImageOrVideoAsset'
 import { usePrefersReducedMotion } from '../shared/usePrefersReducedMotion'
 
-const videoSvgExportCache = new WeakCache<TLAsset, Promise<string | null>>()
+const videoSvgExportCache = const WeakCache<TLAsset, Promise<string | null>>()
 
 /** @public */
 export class VideoShapeUtil extends BaseBoxShapeUtil<TLVideoShape> {
@@ -111,7 +110,6 @@ const VideoShape = memo(function VideoShape({ shape }: { shape: TLVideoShape })
 		setIsLoaded(true)
 	}, [])
 
-	// If the current time changes and we're not editing the video, update the video time
 	useEffect(() => {
 		const video = rVideo.current
 		if (!video) return
@@ -183,7 +181,9 @@ const VideoShape = memo(function VideoShape({ shape }: { shape: TLVideoShape })
 					</div>
 				</div>
 			</HTMLContainer>
-			{'url' in shape.props && shape.props.url && <HyperlinkButton url={shape.props.url} />}
+			{'url' in shape.props && shape.props.url && (
+				<HyperlinkButton url={shape.props.url} zoomLevel={editor.getZoomLevel()} />
+			)}
 		</>
 	)
 })
\ No newline at end of file
