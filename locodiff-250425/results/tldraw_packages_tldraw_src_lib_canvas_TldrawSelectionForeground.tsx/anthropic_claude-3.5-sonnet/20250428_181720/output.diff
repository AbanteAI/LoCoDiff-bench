
index 1f7e604f..f2c9659b 100644
--- a/tldraw_packages_tldraw_src_lib_canvas_TldrawSelectionForeground.tsx_expectedoutput.txt (expected):tmp/tmpdf57gxx0_expected.txt	
+++ b/tldraw_packages_tldraw_src_lib_canvas_TldrawSelectionForeground.tsx_extracted.txt (actual):tmp/tmpd4e8l8qr_actual.txt	
@@ -1,7 +1,7 @@
 import {
 	Box,
 	RotateCorner,
-	TLEmbedShape,
+	TLEmbedShape, 
 	TLSelectionForegroundProps,
 	TLTextShape,
 	getCursor,
@@ -11,7 +11,6 @@ import {
 	useEditor,
 	useSelectionEvents,
 	useTransform,
-	useValue,
 } from '@tldraw/editor'
 import classNames from 'classnames'
 import { useRef } from 'react'
@@ -149,23 +148,23 @@ export const TldrawSelectionForeground = track(function TldrawSelectionForegroun
 				!editor.getShapeUtil(onlyShape).hideResizeHandles(onlyShape)
 			: true) &&
 		!showCropHandles &&
-		!isLockedShape
+		!isLockedShape 
 
 	const hideAlternateCornerHandles = isTinyX || isTinyY
 	const showOnlyOneHandle = isTinyX && isTinyY
 	const hideAlternateCropHandles = isSmallCropX || isSmallCropY
 
-	const showHandles = showResizeHandles || showCropHandles
+	const showHandles = showResizeHandles || showCropHandles  
 	const hideRotateCornerHandles = !showCornerRotateHandles
 	const hideMobileRotateHandle = !shouldDisplayControls || !showMobileRotateHandle
 	const hideTopLeftCorner = !shouldDisplayControls || !showHandles
 	const hideTopRightCorner = !shouldDisplayControls || !showHandles || hideAlternateCornerHandles
 	const hideBottomLeftCorner = !shouldDisplayControls || !showHandles || hideAlternateCornerHandles
-	const hideBottomRightCorner =
+	const hideBottomRightCorner = 
 		!shouldDisplayControls || !showHandles || (showOnlyOneHandle && !showCropHandles)
 
 	// If we're showing crop handles, then show the edges too.
-	// If we're showing resize handles, then show the edges only
+	// If we're showing resize handles, then show the edges only  
 	// if we're not hiding them for some other reason.
 	let hideVerticalEdgeTargets = true
 	// The same logic above applies here, except another nuance is that
@@ -203,17 +202,17 @@ export const TldrawSelectionForeground = track(function TldrawSelectionForegroun
 					data-testid="selection.rotate.top-left"
 					cx={0}
 					cy={0}
-					targetSize={targetSize}
-					corner="top_left_rotate"
+					targetSize={targetSize}  
+					corner="top_left_rotate"  
 					cursor={isDefaultCursor ? getCursor('nwse-rotate', rotation) : undefined}
 					isHidden={hideRotateCornerHandles}
 				/>
 				<RotateCornerHandle
-					data-testid="selection.rotate.top-right"
+					data-testid="selection.rotate.top-right"  
 					cx={width + targetSize * 3}
 					cy={0}
 					targetSize={targetSize}
-					corner="top_right_rotate"
+					corner="top_right_rotate"  
 					cursor={isDefaultCursor ? getCursor('nesw-rotate', rotation) : undefined}
 					isHidden={hideRotateCornerHandles}
 				/>
@@ -222,7 +221,7 @@ export const TldrawSelectionForeground = track(function TldrawSelectionForegroun
 					cx={0}
 					cy={height + targetSize * 3}
 					targetSize={targetSize}
-					corner="bottom_left_rotate"
+					corner="bottom_left_rotate"  
 					cursor={isDefaultCursor ? getCursor('swne-rotate', rotation) : undefined}
 					isHidden={hideRotateCornerHandles}
 				/>
@@ -231,7 +230,7 @@ export const TldrawSelectionForeground = track(function TldrawSelectionForegroun
 					cx={width + targetSize * 3}
 					cy={height + targetSize * 3}
 					targetSize={targetSize}
-					corner="bottom_right_rotate"
+					corner="bottom_right_rotate"  
 					cursor={isDefaultCursor ? getCursor('senw-rotate', rotation) : undefined}
 					isHidden={hideRotateCornerHandles}
 				/>
@@ -240,7 +239,7 @@ export const TldrawSelectionForeground = track(function TldrawSelectionForegroun
 					cx={isSmallX ? -targetSize * 1.5 : width / 2}
 					cy={isSmallX ? height / 2 : -targetSize * 1.5}
 					size={size}
-					isHidden={hideMobileRotateHandle}
+					isHidden={hideMobileRotateHandle}  
 				/>
 				{/* Targets */}
 				<rect
@@ -250,7 +249,7 @@ export const TldrawSelectionForeground = track(function TldrawSelectionForegroun
 					data-testid="selection.resize.top"
 					role="button"
 					aria-label="top target"
-					pointerEvents="all"
+					pointerEvents="all"  
 					x={0}
 					y={toDomPrecision(0 - (isSmallY ? targetSizeY * 2 : targetSizeY))}
 					width={toDomPrecision(width)}
@@ -260,18 +259,18 @@ export const TldrawSelectionForeground = track(function TldrawSelectionForegroun
 				/>
 				<rect
 					className={classNames('tl-transparent', {
-						'tl-hidden': hideHorizontalEdgeTargets,
+						'tl-hidden': hideHorizontalEdgeTargets,  
 					})}
 					data-testid="selection.resize.right"
 					role="button"
-					aria-label="right target"
+					aria-label="right target" 
 					pointerEvents="all"
 					x={toDomPrecision(width - (isSmallX ? 0 : targetSizeX))}
 					y={0}
 					height={toDomPrecision(height)}
 					width={toDomPrecision(Math.max(1, targetSizeX * 2))}
 					style={isDefaultCursor ? { cursor: getCursor('ew-resize', rotation) } : undefined}
-					{...rightEvents}
+					{...rightEvents}  
 				/>
 				<rect
 					className={classNames('tl-transparent', {
@@ -281,10 +280,10 @@ export const TldrawSelectionForeground = track(function TldrawSelectionForegroun
 					role="button"
 					aria-label="bottom target"
 					pointerEvents="all"
-					x={0}
+					x={0}  
 					y={toDomPrecision(height - (isSmallY ? 0 : targetSizeY))}
 					width={toDomPrecision(width)}
-					height={toDomPrecision(Math.max(1, targetSizeY * 2))}
+					height={toDomPrecision(Math.max(1, targetSizeY * 2))} 
 					style={isDefaultCursor ? { cursor: getCursor('ns-resize', rotation) } : undefined}
 					{...bottomEvents}
 				/>
@@ -315,7 +314,7 @@ export const TldrawSelectionForeground = track(function TldrawSelectionForegroun
 					x={toDomPrecision(0 - (isSmallX ? targetSizeX * 2 : targetSizeX * 1.5))}
 					y={toDomPrecision(0 - (isSmallY ? targetSizeY * 2 : targetSizeY * 1.5))}
 					width={toDomPrecision(targetSizeX * 3)}
-					height={toDomPrecision(targetSizeY * 3)}
+					height={toDomPrecision(targetSizeY * 3)} 
 					style={isDefaultCursor ? { cursor: getCursor('nwse-resize', rotation) } : undefined}
 					{...topLeftEvents}
 				/>
@@ -332,7 +331,7 @@ export const TldrawSelectionForeground = track(function TldrawSelectionForegroun
 					width={toDomPrecision(targetSizeX * 3)}
 					height={toDomPrecision(targetSizeY * 3)}
 					style={isDefaultCursor ? { cursor: getCursor('nesw-resize', rotation) } : undefined}
-					{...topRightEvents}
+					{...topRightEvents} 
 				/>
 				<rect
 					className={classNames('tl-transparent', {
@@ -357,7 +356,7 @@ export const TldrawSelectionForeground = track(function TldrawSelectionForegroun
 					role="button"
 					aria-label="bottom-left target"
 					pointerEvents="all"
-					x={toDomPrecision(0 - (isSmallX ? targetSizeX * 3 : targetSizeX * 1.5))}
+					x={toDomPrecision(0 - (isSmallX ? targetSizeX * 3 : targetSizeX * 1.5))}  
 					y={toDomPrecision(height - (isSmallY ? 0 : targetSizeY * 1.5))}
 					width={toDomPrecision(targetSizeX * 3)}
 					height={toDomPrecision(targetSizeY * 3)}
@@ -369,22 +368,22 @@ export const TldrawSelectionForeground = track(function TldrawSelectionForegroun
 					<>
 						<rect
 							data-testid="selection.resize.top-left"
+							role="button"
 							className={classNames('tl-corner-handle', {
 								'tl-hidden': hideTopLeftCorner,
 							})}
-							role="button"
 							aria-label="top_left handle"
-							x={toDomPrecision(0 - size / 2)}
+							x={toDomPrecision(0 - size / 2)}  
 							y={toDomPrecision(0 - size / 2)}
 							width={toDomPrecision(size)}
 							height={toDomPrecision(size)}
 						/>
 						<rect
 							data-testid="selection.resize.top-right"
+							role="button"
 							className={classNames('tl-corner-handle', {
 								'tl-hidden': hideTopRightCorner,
 							})}
-							role="button"
 							aria-label="top_right handle"
 							x={toDomPrecision(width - size / 2)}
 							y={toDomPrecision(0 - size / 2)}
@@ -393,26 +392,26 @@ export const TldrawSelectionForeground = track(function TldrawSelectionForegroun
 						/>
 						<rect
 							data-testid="selection.resize.bottom-right"
+							role="button"
 							className={classNames('tl-corner-handle', {
 								'tl-hidden': hideBottomRightCorner,
 							})}
-							role="button"
 							aria-label="bottom_right handle"
 							x={toDomPrecision(width - size / 2)}
-							y={toDomPrecision(height - size / 2)}
+							y={toDomPrecision(height - size / 2)} 
 							width={toDomPrecision(size)}
 							height={toDomPrecision(size)}
 						/>
 						<rect
 							data-testid="selection.resize.bottom-left"
+							role="button"
 							className={classNames('tl-corner-handle', {
-								'tl-hidden': hideBottomLeftCorner,
+								'tl-hidden': hideBottomLeftCorner,  
 							})}
-							role="button"
 							aria-label="bottom_left handle"
 							x={toDomPrecision(0 - size / 2)}
 							y={toDomPrecision(height - size / 2)}
-							width={toDomPrecision(size)}
+							width={toDomPrecision(size)} 
 							height={toDomPrecision(size)}
 						/>
 					</>
@@ -421,8 +420,8 @@ export const TldrawSelectionForeground = track(function TldrawSelectionForegroun
 					<>
 						<rect
 							data-testid="selection.text-resize.left.handle"
-							className="tl-text-handle"
 							role="button"
+							className="tl-text-handle"
 							aria-label="bottom_left handle"
 							x={toDomPrecision(0 - size / 4)}
 							y={toDomPrecision(height / 2 - textHandleHeight / 2)}
@@ -431,19 +430,19 @@ export const TldrawSelectionForeground = track(function TldrawSelectionForegroun
 							height={toDomPrecision(textHandleHeight)}
 						/>
 						<rect
-							data-testid="selection.text-resize.right.handle"
-							className="tl-text-handle"
+							data-testid="selection.text-resize.right.handle"  
 							role="button"
-							aria-label="bottom_left handle"
+							className="tl-text-handle"
+							aria-label="bottom_left handle"  
 							rx={size / 4}
 							x={toDomPrecision(width - size / 4)}
 							y={toDomPrecision(height / 2 - textHandleHeight / 2)}
-							width={toDomPrecision(size / 2)}
+							width={toDomPrecision(size / 2)} 
 							height={toDomPrecision(textHandleHeight)}
 						/>
 					</>
 				)}
-				{/* Crop Handles */}
+				{/* Crop Handles */}  
 				{showCropHandles && (
 					<TldrawCropHandles
 						{...{
@@ -462,7 +461,7 @@ export const TldrawSelectionForeground = track(function TldrawSelectionForegroun
 export const RotateCornerHandle = function RotateCornerHandle({
 	cx,
 	cy,
-	targetSize,
+	targetSize, 
 	corner,
 	cursor,
 	isHidden,
@@ -472,7 +471,7 @@ export const RotateCornerHandle = function RotateCornerHandle({
 	cy: number
 	targetSize: number
 	corner: RotateCorner
-	cursor?: string
+	cursor?: string  
 	isHidden: boolean
 	'data-testid'?: string
 }) {
@@ -486,7 +485,7 @@ export const RotateCornerHandle = function RotateCornerHandle({
 			pointerEvents="all"
 			x={toDomPrecision(cx - targetSize * 3)}
 			y={toDomPrecision(cy - targetSize * 3)}
-			width={toDomPrecision(Math.max(1, targetSize * 3))}
+			width={toDomPrecision(Math.max(1, targetSize * 3))}  
 			height={toDomPrecision(Math.max(1, targetSize * 3))}
 			cursor={cursor}
 			{...events}
@@ -498,13 +497,13 @@ const SQUARE_ROOT_PI = Math.sqrt(Math.PI)
 
 export const MobileRotateHandle = function RotateHandle({
 	cx,
-	cy,
+	cy, 
 	size,
 	isHidden,
 	'data-testid': testId,
 }: {
 	cx: number
-	cy: number
+	cy: number  
 	size: number
 	isHidden: boolean
 	'data-testid'?: string
@@ -519,7 +518,7 @@ export const MobileRotateHandle = function RotateHandle({
 		<g>
 			<circle
 				data-testid={testId}
-				pointerEvents="all"
+				pointerEvents="all" 
 				className={classNames('tl-transparent', 'tl-mobile-rotate__bg', { 'tl-hidden': isHidden })}
 				cx={cx}
 				cy={cy}
