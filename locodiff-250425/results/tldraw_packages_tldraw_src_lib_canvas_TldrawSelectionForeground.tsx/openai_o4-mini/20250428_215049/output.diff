
index 1f7e604f..6b1a0b1d 100644
--- a/tldraw_packages_tldraw_src_lib_canvas_TldrawSelectionForeground.tsx_expectedoutput.txt (expected):tmp/tmpa_dmwz98_expected.txt	
+++ b/tldraw_packages_tldraw_src_lib_canvas_TldrawSelectionForeground.tsx_extracted.txt (actual):tmp/tmpehhu962u_actual.txt	
@@ -5,13 +5,11 @@ import {
 	TLSelectionForegroundProps,
 	TLTextShape,
 	getCursor,
-	tlenv,
 	toDomPrecision,
 	track,
 	useEditor,
 	useSelectionEvents,
 	useTransform,
-	useValue,
 } from '@tldraw/editor'
 import classNames from 'classnames'
 import { useRef } from 'react'
@@ -52,12 +50,13 @@ export const TldrawSelectionForeground = track(function TldrawSelectionForegroun
 			? bounds.clone().expand(expandOutlineBy).zeroFix()
 			: bounds.clone().expandBy(expandOutlineBy).zeroFix()
 
-	useTransform(rSvg, bounds?.x, bounds?.y, 1, editor.getSelectionRotation(), {
+	useTransform(rSvg, bounds.x, bounds.y, 1, editor.getSelectionRotation(), {
 		x: expandedBounds.x - bounds.x,
 		y: expandedBounds.y - bounds.y,
 	})
 
 	if (onlyShape && editor.isShapeHidden(onlyShape)) return null
+	if (!bounds) return null
 
 	const zoom = editor.getZoomLevel()
 	const isChangingStyle = editor.getInstanceState().isChangingStyle
@@ -104,27 +103,18 @@ export const TldrawSelectionForeground = track(function TldrawSelectionForegroun
 			editor.isShapeOfType<TLTextShape>(onlyShape, 'text'))
 
 	if (onlyShape && shouldDisplayBox) {
-		if (tlenv.isFirefox && editor.isShapeOfType<TLEmbedShape>(onlyShape, 'embed')) {
+		if (editor.environment.isFirefox && editor.isShapeOfType<TLEmbedShape>(onlyShape, 'embed')) {
 			shouldDisplayBox = false
 		}
 	}
 
 	const showCropHandles =
-		editor.isInAny(
-			'select.crop.idle',
-			'select.crop.pointing_crop',
-			'select.crop.pointing_crop_handle'
-		) &&
+		editor.isInAny('select.crop.idle', 'select.crop.pointing_crop', 'select.crop.pointing_crop_handle') &&
 		!isChangingStyle &&
 		!isReadonlyMode
 
 	const shouldDisplayControls =
-		editor.isInAny(
-			'select.idle',
-			'select.pointing_selection',
-			'select.pointing_shape',
-			'select.crop.idle'
-		) &&
+		editor.isInAny('select.idle', 'select.pointing_selection', 'select.pointing_shape', 'select.crop.idle') &&
 		!isChangingStyle &&
 		!isReadonlyMode
 
@@ -146,7 +136,7 @@ export const TldrawSelectionForeground = track(function TldrawSelectionForegroun
 		shouldDisplayControls &&
 		(onlyShape
 			? editor.getShapeUtil(onlyShape).canResize(onlyShape) &&
-				!editor.getShapeUtil(onlyShape).hideResizeHandles(onlyShape)
+			  !editor.getShapeUtil(onlyShape).hideResizeHandles(onlyShape)
 			: true) &&
 		!showCropHandles &&
 		!isLockedShape
@@ -193,11 +183,7 @@ export const TldrawSelectionForeground = track(function TldrawSelectionForegroun
 		<svg className="tl-overlays__item tl-selection__fg" data-testid="selection-foreground">
 			<g ref={rSvg}>
 				{shouldDisplayBox && (
-					<rect
-						className="tl-selection__fg__outline"
-						width={toDomPrecision(width)}
-						height={toDomPrecision(height)}
-					/>
+					<rect className="tl-selection__fg__outline" width={toDomPrecision(width)} height={toDomPrecision(height)} />
 				)}
 				<RotateCornerHandle
 					data-testid="selection.rotate.top-left"
@@ -244,9 +230,7 @@ export const TldrawSelectionForeground = track(function TldrawSelectionForegroun
 				/>
 				{/* Targets */}
 				<rect
-					className={classNames('tl-transparent', {
-						'tl-hidden': hideVerticalEdgeTargets,
-					})}
+					className={classNames('tl-transparent', { 'tl-hidden': hideVerticalEdgeTargets })}
 					data-testid="selection.resize.top"
 					role="button"
 					aria-label="top target"
@@ -259,9 +243,7 @@ export const TldrawSelectionForeground = track(function TldrawSelectionForegroun
 					{...topEvents}
 				/>
 				<rect
-					className={classNames('tl-transparent', {
-						'tl-hidden': hideHorizontalEdgeTargets,
-					})}
+					className={classNames('tl-transparent', { 'tl-hidden': hideHorizontalEdgeTargets })}
 					data-testid="selection.resize.right"
 					role="button"
 					aria-label="right target"
@@ -274,9 +256,7 @@ export const TldrawSelectionForeground = track(function TldrawSelectionForegroun
 					{...rightEvents}
 				/>
 				<rect
-					className={classNames('tl-transparent', {
-						'tl-hidden': hideVerticalEdgeTargets,
-					})}
+					className={classNames('tl-transparent', { 'tl-hidden': hideVerticalEdgeTargets })}
 					data-testid="selection.resize.bottom"
 					role="button"
 					aria-label="bottom target"
@@ -289,9 +269,7 @@ export const TldrawSelectionForeground = track(function TldrawSelectionForegroun
 					{...bottomEvents}
 				/>
 				<rect
-					className={classNames('tl-transparent', {
-						'tl-hidden': hideHorizontalEdgeTargets,
-					})}
+					className={classNames('tl-transparent', { 'tl-hidden': hideHorizontalEdgeTargets })}
 					data-testid="selection.resize.left"
 					role="button"
 					aria-label="left target"
@@ -305,9 +283,7 @@ export const TldrawSelectionForeground = track(function TldrawSelectionForegroun
 				/>
 				{/* Corner Targets */}
 				<rect
-					className={classNames('tl-transparent', {
-						'tl-hidden': hideTopLeftCorner,
-					})}
+					className={classNames('tl-transparent', { 'tl-hidden': hideTopLeftCorner })}
 					data-testid="selection.target.top-left"
 					role="button"
 					aria-label="top-left target"
@@ -320,9 +296,7 @@ export const TldrawSelectionForeground = track(function TldrawSelectionForegroun
 					{...topLeftEvents}
 				/>
 				<rect
-					className={classNames('tl-transparent', {
-						'tl-hidden': hideTopRightCorner,
-					})}
+					className={classNames('tl-transparent', { 'tl-hidden': hideTopRightCorner })}
 					data-testid="selection.target.top-right"
 					role="button"
 					aria-label="top-right target"
@@ -335,9 +309,7 @@ export const TldrawSelectionForeground = track(function TldrawSelectionForegroun
 					{...topRightEvents}
 				/>
 				<rect
-					className={classNames('tl-transparent', {
-						'tl-hidden': hideBottomRightCorner,
-					})}
+					className={classNames('tl-transparent', { 'tl-hidden': hideBottomRightCorner })}
 					data-testid="selection.target.bottom-right"
 					role="button"
 					aria-label="bottom-right target"
@@ -350,9 +322,7 @@ export const TldrawSelectionForeground = track(function TldrawSelectionForegroun
 					{...bottomRightEvents}
 				/>
 				<rect
-					className={classNames('tl-transparent', {
-						'tl-hidden': hideBottomLeftCorner,
-					})}
+					className={classNames('tl-transparent', { 'tl-hidden': hideBottomLeftCorner })}
 					data-testid="selection.target.bottom-left"
 					role="button"
 					aria-label="bottom-left target"
@@ -369,9 +339,7 @@ export const TldrawSelectionForeground = track(function TldrawSelectionForegroun
 					<>
 						<rect
 							data-testid="selection.resize.top-left"
-							className={classNames('tl-corner-handle', {
-								'tl-hidden': hideTopLeftCorner,
-							})}
+							className={classNames('tl-corner-handle', { 'tl-hidden': hideTopLeftCorner })}
 							role="button"
 							aria-label="top_left handle"
 							x={toDomPrecision(0 - size / 2)}
@@ -381,9 +349,7 @@ export const TldrawSelectionForeground = track(function TldrawSelectionForegroun
 						/>
 						<rect
 							data-testid="selection.resize.top-right"
-							className={classNames('tl-corner-handle', {
-								'tl-hidden': hideTopRightCorner,
-							})}
+							className={classNames('tl-corner-handle', { 'tl-hidden': hideTopRightCorner })}
 							role="button"
 							aria-label="top_right handle"
 							x={toDomPrecision(width - size / 2)}
@@ -393,9 +359,7 @@ export const TldrawSelectionForeground = track(function TldrawSelectionForegroun
 						/>
 						<rect
 							data-testid="selection.resize.bottom-right"
-							className={classNames('tl-corner-handle', {
-								'tl-hidden': hideBottomRightCorner,
-							})}
+							className={classNames('tl-corner-handle', { 'tl-hidden': hideBottomRightCorner })}
 							role="button"
 							aria-label="bottom_right handle"
 							x={toDomPrecision(width - size / 2)}
@@ -405,9 +369,7 @@ export const TldrawSelectionForeground = track(function TldrawSelectionForegroun
 						/>
 						<rect
 							data-testid="selection.resize.bottom-left"
-							className={classNames('tl-corner-handle', {
-								'tl-hidden': hideBottomLeftCorner,
-							})}
+							className={classNames('tl-corner-handle', { 'tl-hidden': hideBottomLeftCorner })}
 							role="button"
 							aria-label="bottom_left handle"
 							x={toDomPrecision(0 - size / 2)}
@@ -446,12 +408,7 @@ export const TldrawSelectionForeground = track(function TldrawSelectionForegroun
 				{/* Crop Handles */}
 				{showCropHandles && (
 					<TldrawCropHandles
-						{...{
-							size,
-							width,
-							height,
-							hideAlternateHandles: hideAlternateCropHandles,
-						}}
+						{...{ size, width, height, hideAlternateHandles: hideAlternateCropHandles }}
 					/>
 				)}
 			</g>
