--- react_packages_react-dom_src___tests___ReactDOMServerIntegrationHooks-test.js_expectedoutput.txt (expected)+++ react_packages_react-dom_src___tests___ReactDOMServerIntegrationHooks-test.js_extracted.txt (actual)@@ -424,6 +424,7 @@         });
         return 'hi';
       }
+
       const domNode = await render(
         <App />,
         render === clientRenderOnBadMarkup
@@ -621,6 +622,7 @@       expect(domNode.textContent).toEqual('Count: 0');
     });
   });
+  
   describe('useInsertionEffect', () => {
     it('should warn when invoked during render', async () => {
       function Counter() {
@@ -809,13 +811,13 @@         }
 
         function FooAndBar() {
-          const {foo} = readContext(Context, 0b001);
-          const {bar} = readContext(Context, 0b010);
+          const {foo} = readContext(Context);
+          const {bar} = readContext(Context);
           return <Text text={`Foo: ${foo}, Bar: ${bar}`} />;
         }
 
         function Baz() {
-          const {baz} = readContext(Context, 0b100);
+          const {baz} = readContext(Context);
           return <Text text={'Baz: ' + baz} />;
         }
 
