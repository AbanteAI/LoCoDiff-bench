
index 7f71a6bd..6afbe5a4 100644
--- a/qdrant_lib_collection_tests_integration_collection_test.rs_expectedoutput.txt (expected):tmp/tmp2lcush2l_expected.txt	
+++ b/qdrant_lib_collection_tests_integration_collection_test.rs_extracted.txt (actual):tmp/tmph6i2938y_actual.txt	
@@ -1,4 +1,4 @@
-use std::collections::{HashMap, HashSet};
+use std::collections::HashMap;
 use std::fs::File;
 
 use ahash::AHashSet;
@@ -27,7 +27,7 @@ use segment::types::{
 use serde_json::Map;
 use tempfile::Builder;
 
-use crate::common::{N_SHARDS, load_local_collection, simple_collection_fixture};
+use crate::common::{load_local_collection, simple_collection_fixture, N_SHARDS};
 
 #[tokio::test(flavor = "multi_thread")]
 async fn test_collection_updater() {
@@ -682,11 +682,11 @@ async fn test_ordered_scroll_api_with_shards(shard_number: u32) {
             .points
             .iter()
             .map(|x| x.id)
-            .collect::<HashSet<_>>();
+            .collect::<AHashSet<_>>();
         let valid_asc_second_page_points = [10, 9, 8, 7, 6]
             .into_iter()
             .map(|x| x.into())
-            .collect::<HashSet<ExtendedPointId>>();
+            .collect::<AHashSet<ExtendedPointId>>();
         assert_eq!(asc_second_page.points.len(), 5);
         assert!(asc_second_page_points.is_subset(&valid_asc_second_page_points));
 
@@ -722,12 +722,12 @@ async fn test_ordered_scroll_api_with_shards(shard_number: u32) {
             .points
             .iter()
             .map(|x| x.id)
-            .collect::<HashSet<_>>();
+            .collect::<AHashSet<_>>();
 
         let valid_desc_second_page_points = [5, 6, 7, 8, 9]
             .into_iter()
             .map(|x| x.into())
-            .collect::<HashSet<ExtendedPointId>>();
+            .collect::<AHashSet<ExtendedPointId>>();
 
         assert_eq!(desc_second_page.points.len(), 4);
         assert!(
