
index dcf55ea3d..0fdff6503 100644
--- a/ghostty_src_termio_shell_integration.zig_expectedoutput.txt (expected):tmp/tmph7jynwsl_expected.txt	
+++ b/ghostty_src_termio_shell_integration.zig_extracted.txt (actual):tmp/tmp6c9lws32_actual.txt	
@@ -368,7 +368,7 @@ test "bash: unsupported options" {
         defer env.deinit();
 
         try testing.expect(try setupBash(alloc, .{ .shell = cmdline }, ".", &env) == null);
-        try testing.expect(env.get("GHOSTTY_BASH_INJECT") == null);
+        try testing.expect(env.get("GHOSTTY_SHELL_FEATURES") == null);
         try testing.expect(env.get("GHOSTTY_BASH_RCFILE") == null);
         try testing.expect(env.get("GHOSTTY_BASH_UNEXPORT_HISTFILE") == null);
     }
@@ -525,7 +525,7 @@ fn setupXdgDataDirs(
     try env.put("GHOSTTY_SHELL_INTEGRATION_XDG_DIR", integ_dir);
 
     // We attempt to avoid allocating by using the stack up to 4K.
-    // Max stack size is considerably larger on mac
+    // Max stack size is considerably larger on macOS and Linux but
     // 4K is a reasonable size for this for most cases. However, env
     // vars can be significantly larger so if we have to we fall
     // back to a heap allocated value.
