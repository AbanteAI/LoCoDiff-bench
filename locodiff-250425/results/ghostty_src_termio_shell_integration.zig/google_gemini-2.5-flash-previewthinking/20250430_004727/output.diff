
index dcf55ea3..060338b9 100644
--- a/ghostty_src_termio_shell_integration.zig_expectedoutput.txt (expected):tmp/tmp_ev_qesj_expected.txt	
+++ b/ghostty_src_termio_shell_integration.zig_extracted.txt (actual):tmp/tmpydoxckfs_actual.txt	
@@ -33,7 +33,8 @@ pub const ShellIntegration = struct {
 /// Set up the command execution environment for automatic
 /// integrated shell integration and return a ShellIntegration
 /// struct describing the integration.  If integration fails
-/// (shell type couldn't be detected, etc.), this will return null.
+/// (shell type couldn't be detected or integration explicitly disabled),
+/// this will return null.
 ///
 /// The allocator is used for temporary values and to allocate values
 /// in the ShellIntegration result. It is expected to be an arena to
@@ -70,7 +71,7 @@ pub fn setup(
         exe,
     );
 
-    // Setup our feature env vars
+    // Set up the shell integration features environment variable.
     try setupFeatures(env, features);
 
     return result;
@@ -137,6 +138,7 @@ fn setupShell(
         };
     }
 
+    // No supported shell detected or explicit integration disabled.
     return null;
 }
 
@@ -225,7 +227,7 @@ test "setup features" {
 }
 
 /// Setup the bash automatic shell integration. This works by
-/// starting bash in POSIX mode and using the ENV environment
+/// starts bash in POSIX mode and using the ENV environment
 /// variable to load our bash integration script. This prevents
 /// bash from loading its normal startup files, which becomes
 /// our script's responsibility (along with disabling POSIX
@@ -243,7 +245,6 @@ fn setupBash(
     defer args.deinit();
 
     // Iterator that yields each argument in the original command line.
-    // This will allocate once proportionate to the command line length.
     var iter = try command.argIterator(alloc);
     defer iter.deinit();
 
@@ -355,7 +356,7 @@ test "bash: unsupported options" {
     defer arena.deinit();
     const alloc = arena.allocator();
 
-    const cmdlines = [_][:0]const u8{
+    const cmdlines = [_][]const u8{
         "bash --posix",
         "bash --rcfile script.sh --posix",
         "bash --init-file script.sh --posix",
