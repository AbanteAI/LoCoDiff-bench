--- ghostty_src_os_flatpak.zig_expectedoutput.txt (expected)+++ ghostty_src_os_flatpak.zig_extracted.txt (actual)@@ -9,24 +9,10 @@ 
 /// Returns true if we're running in a Flatpak environment.
 pub fn isFlatpak() bool {
-    // If we're not on Linux then we'll make this comptime false.
     if (comptime builtin.os.tag != .linux) return false;
     return if (std.fs.accessAbsolute("/.flatpak-info", .{})) true else |_| false;
 }
 
-/// A struct to help execute commands on the host via the
-/// org.freedesktop.Flatpak.Development DBus module. This uses GIO/GLib
-/// under the hood.
-///
-/// This always spawns its own thread and maintains its own GLib event loop.
-/// This makes it easy for the command to behave synchronously similar to
-/// std.process.Child.
-///
-/// There are lots of chances for low-hanging improvements here (automatic
-/// pipes, /dev/null, etc.) but this was purpose built for my needs so
-/// it doesn't have all of those.
-///
-/// Requires GIO, GLib to be available and linked.
 pub const FlatpakHostCommand = struct {
     const fd_t = posix.fd_t;
     const EnvMap = std.process.EnvMap;
@@ -420,10 +406,10 @@         self.updateState(.{
             .started = .{
                 .pid = pid,
+                .loop_xev = null,
+                .completion = null,
                 .subscription = subscription_id,
                 .loop = loop,
-                .completion = null,
-                .loop_xev = null,
             },
         });
     }
