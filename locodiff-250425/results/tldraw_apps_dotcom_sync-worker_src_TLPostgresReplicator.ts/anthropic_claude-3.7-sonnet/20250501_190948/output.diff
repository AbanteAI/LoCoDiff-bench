
index 039baf10..a9b291a3 100644
--- a/tldraw_apps_dotcom_sync-worker_src_TLPostgresReplicator.ts_expectedoutput.txt (expected):tmp/tmptl0pn1vd_expected.txt	
+++ b/tldraw_apps_dotcom_sync-worker_src_TLPostgresReplicator.ts_extracted.txt (actual):tmp/tmpe8tiqzca_actual.txt	
@@ -1,10 +1,8 @@
-import { DB, TlaFile, TlaFileState, TlaRow, TlaUser, ZTable } from '@tldraw/dotcom-shared'
+import { ROOM_PREFIX, TlaFile, ZTable } from '@tldraw/dotcom-shared'
 import {
 	ExecutionQueue,
 	assert,
-	assertExists,
 	exhaustiveSwitchError,
-	groupBy,
 	promiseWithResolve,
 	sleep,
 	stringEnum,
@@ -805,15 +803,6 @@ export class TLPostgresReplicator extends DurableObject<Environment> {
 		}
 	}
 
-	reportActiveUsers() {
-		try {
-			const { count } = this.sqlite.exec('SELECT COUNT(*) as count FROM active_user').one()
-			this.logEvent({ type: 'active_users', count: count as number })
-		} catch (e) {
-			console.error('Error in reportActiveUsers', e)
-		}
-	}
-
 	private getResumeType(
 		lsn: string,
 		userId: string,
@@ -966,6 +955,15 @@ export class TLPostgresReplicator extends DurableObject<Environment> {
 		}
 	}
 
+	reportActiveUsers() {
+		try {
+			const { count } = this.sqlite.exec('SELECT COUNT(*) as count FROM active_user').one()
+			this.logEvent({ type: 'active_users', count: count as number })
+		} catch (e) {
+			console.error('Error in reportActiveUsers', e)
+		}
+	}
+
 	private writeEvent(eventData: EventData) {
 		writeDataPoint(this.sentry, this.measure, this.env, 'replicator', eventData)
 	}
