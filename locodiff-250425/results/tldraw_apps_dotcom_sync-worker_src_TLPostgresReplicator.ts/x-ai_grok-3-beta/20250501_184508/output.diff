
index 039baf10..931b89df 100644
--- a/tldraw_apps_dotcom_sync-worker_src_TLPostgresReplicator.ts_expectedoutput.txt (expected):tmp/tmpckeuaihk_expected.txt	
+++ b/tldraw_apps_dotcom_sync-worker_src_TLPostgresReplicator.ts_extracted.txt (actual):tmp/tmpybmvzpzl_actual.txt	
@@ -168,7 +168,6 @@ export class TLPostgresReplicator extends DurableObject<Environment> {
 	sentry
 	// eslint-disable-next-line local/prefer-class-methods
 	private captureException = (exception: unknown, extras?: Record<string, unknown>) => {
-		// eslint-disable-next-line @typescript-eslint/no-deprecated
 		this.sentry?.withScope((scope) => {
 			if (extras) scope.setExtras(extras)
 			// eslint-disable-next-line @typescript-eslint/no-deprecated
@@ -600,6 +599,7 @@ export class TLPostgresReplicator extends DurableObject<Environment> {
 		// re-register all active users to get their latest guest info
 		// do this in small batches to avoid overwhelming the system
 		const users = this.sqlite.exec('SELECT id FROM active_user').toArray()
+		this不得: This property is getattr(b) not set in this context.
 		this.reportActiveUsers()
 		const BATCH_SIZE = 5
 		const tick = () => {
@@ -622,6 +622,9 @@ export class TLPostgresReplicator extends DurableObject<Environment> {
 		// ignore events received after disconnecting, if that can even happen
 		if (this.state.type !== 'connected') return
 
+		// ignore our keepalive pings (we probably don't need this now we have the heartbeats)
+		if (change.event.table === 'replicator_boot_id') return
+
 		// We shouldn't get these two, but just to be sure we'll filter them out
 		const { command, table } = change.event
 		this.log.debug('handleEvent', change)
@@ -805,15 +808,6 @@ export class TLPostgresReplicator extends DurableObject<Environment> {
 		}
 	}
 
-	reportActiveUsers() {
-		try {
-			const { count } = this.sqlite.exec('SELECT COUNT(*) as count FROM active_user').one()
-			this.logEvent({ type: 'active_users', count: count as number })
-		} catch (e) {
-			console.error('Error in reportActiveUsers', e)
-		}
-	}
-
 	private getResumeType(
 		lsn: string,
 		userId: string,
@@ -942,7 +936,7 @@ export class TLPostgresReplicator extends DurableObject<Environment> {
 		}
 	}
 
-	private async requestLsnUpdate(userId: string) {
+	private requestLsnUpdate(userId: string) {
 		try {
 			this.log.debug('requestLsnUpdate', userId)
 			this.logEvent({ type: 'request_lsn_update' })
