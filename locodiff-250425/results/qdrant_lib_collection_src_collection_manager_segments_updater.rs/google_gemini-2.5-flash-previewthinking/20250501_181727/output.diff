
index 3c0816e9..81a7cdeb 100644
--- a/qdrant_lib_collection_src_collection_manager_segments_updater.rs_expectedoutput.txt (expected):tmp/tmp5zhhlhm1_expected.txt	
+++ b/qdrant_lib_collection_src_collection_manager_segments_updater.rs_extracted.txt (actual):tmp/tmpgxfut_ob_actual.txt	
@@ -1,7 +1,5 @@
 //! A collection of functions for updating points and payloads stored in segments
 
-use std::sync::atomic::AtomicBool;
-
 use ahash::{AHashMap, AHashSet};
 use common::counter::hardware_counter::HardwareCounterCell;
 use itertools::iproduct;
@@ -15,6 +13,7 @@ use segment::types::{
     Filter, Payload, PayloadFieldSchema, PayloadKeyType, PayloadKeyTypeRef, PointIdType,
     SeqNumberType, VectorNameBuf,
 };
+use std::sync::atomic::AtomicBool;
 
 use crate::collection_manager::holders::segment_holder::SegmentHolder;
 use crate::operations::FieldIndexOperations;
@@ -206,9 +205,15 @@ pub(crate) fn set_payload(
                 None => old_payload.merge(payload),
             },
             |segment| {
-                segment.get_indexed_fields().keys().all(|indexed_path| {
-                    !indexed_path.is_affected_by_value_set(&payload.0, key.as_ref())
-                })
+                iproduct!(segment.get_indexed_fields().keys(), payload.0.keys(), key.as_ref()).all(
+                    |(indexed_path, path_head, key_path)| {
+                        !indexed_path.is_affected_by_value_set_by_key(path_head, key_path)
+                    },
+                ) && key.is_some()
+                    || (indexed_fields
+                        .keys()
+                        .all(|indexed_path| !indexed_path.is_affected_by_value_set(&payload.0, key.as_ref()))
+                        && key.is_none())
             },
             hw_counter,
         )?;
@@ -325,7 +330,6 @@ pub(crate) fn clear_payload(
     Ok(total_updated_points)
 }
 
-/// Clear Payloads from all segments matching the given filter
 pub(crate) fn clear_payload_by_filter(
     segments: &SegmentHolder,
     op_num: SeqNumberType,
