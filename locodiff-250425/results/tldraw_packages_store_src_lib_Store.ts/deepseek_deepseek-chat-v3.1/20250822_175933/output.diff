
index 489e95479..2786f35eb 100644
--- a/tldraw_packages_store_src_lib_Store.ts_expectedoutput.txt (expected):tmp/tmpiczs4jbs_expected.txt	
+++ b/tldraw_packages_store_src_lib_Store.ts_extracted.txt (actual):tmp/tmpqxqi8pds_actual.txt	
@@ -103,7 +103,7 @@ export type StoreValidators<R extends UnknownRecord> = {
 export interface StoreError {
 	error: Error
 	phase: 'initialize' | 'createRecord' | 'updateRecord' | 'tests'
-	recordBefore?: unknown
+	recordBefore?: undefined
 	recordAfter: unknown
 	isExistingValidationIssue: boolean
 }
@@ -246,6 +246,10 @@ export class Store<R extends UnknownRecord = UnknownRecord, Props = unknown> {
 		}
 	}
 
+	dispose() {
+		this.cancelHistoryReactor()
+	}
+
 	public _flushHistory() {
 		// If we have accumulated history, flush it and update listeners
 		if (this.historyAccumulator.hasChanges()) {
@@ -280,10 +284,6 @@ export class Store<R extends UnknownRecord = UnknownRecord, Props = unknown> {
 		}
 	}
 
-	dispose() {
-		this.cancelHistoryReactor()
-	}
-
 	/**
 	 * Filters out non-document changes from a diff. Returns null if there are no changes left.
 	 * @param change - the records diff
@@ -671,10 +671,6 @@ export class Store<R extends UnknownRecord = UnknownRecord, Props = unknown> {
 			return fn()
 		}
 
-		if (this._isInAtomicOp) {
-			throw new Error('Cannot merge remote changes while in atomic operation')
-		}
-
 		try {
 			this.atomic(fn, true, true)
 		} finally {
