// Direct callbacks on Store class
onAfterCreate?: (record: R) => void
onAfterChange?: (prev: R, next: R) => void
onBeforeDelete?: (prev: R) => void
```

**Evolved to (Aug 2023 - May 2024):**
```typescript
// Callbacks with source tracking
onAfterCreate?: (record: R, source: 'remote' | 'user') => void
onBeforeChange?: (prev: R, next: R, source: 'remote' | 'user') => R
```

**Final architecture (May 2024+):**
```typescript
// Extracted to StoreSideEffects class
public readonly sideEffects = new StoreSideEffects<R>(this)
```

### 3. **Performance Optimizations**

**Computed Cache Evolution:**

Early version:
```typescript
createComputedCache = <T, V extends R = R>(
  name: string,
  derive: (record: V) => T | undefined
): ComputedCache<T, V>
```

Later added:
- `createSelectedComputedCache` (then removed)
- Options for equality checks
- Final version with `createCache` for more control

**Key Performance Changes:**
- Migrated from `throttledRaf` to `throttleToNextFrame` (March 2024)
- Introduced `AtomMap` to replace `Atom<Record<IdOf<R>, Atom<R>>>` (Feb 2025)
- Added record-level equality checks to prevent unnecessary recomputation

### 4. **Atomic Operations & Transaction Management**

**Evolution of atomic operations:**

Initial: Simple transact wrapper
```typescript
transact(() => { /* operations */ })
```

Evolved to support:
- Nested atomic operations
- Callback control
- Remote change merging
- Proper side effect batching

Final implementation:
```typescript
atomic<T>(fn: () => T, runCallbacks = true, isMergingRemoteChanges = false): T
```

### 5. **History & Change Tracking**

**Initial**: Basic history with simple accumulator
**Evolved**: 
- Added interceptors for history tracking
- Source tracking ('user' vs 'remote')
- Scope-based filtering (document/session/presence)
- Squashing optimizations

### 6. **Migration from Function Properties to Methods**

July 2024 saw a major refactor from:
```typescript
// Function properties
put = (records: R[]) => { }
```

To:
```typescript
// Methods
put(records: R[]) { }