--- ghostty_src_terminal_kitty_graphics_exec.zig_expectedoutput.txt (expected)+++ ghostty_src_terminal_kitty_graphics_exec.zig_extracted.txt (actual)@@ -91,6 +91,7 @@ 
     return null;
 }
+
 /// Execute a "query" command.
 ///
 /// This command is used to attempt to load an image and respond with
@@ -389,184 +390,4 @@         error.DimensionsRequired => r.message = "EINVAL: dimensions required",
         error.DimensionsTooLarge => r.message = "EINVAL: dimensions too large",
     }
-}
-
-test "kittygfx more chunks with q=1" {
-    const testing = std.testing;
-    const alloc = testing.allocator;
-
-    var t = try Terminal.init(alloc, .{ .rows = 5, .cols = 5 });
-    defer t.deinit(alloc);
-
-    // Initial chunk has q=1
-    {
-        const cmd = try command.Parser.parseString(
-            alloc,
-            "a=T,f=24,t=d,i=1,s=1,v=2,c=10,r=1,m=1,q=1;////",
-        );
-        defer cmd.deinit(alloc);
-        const resp = execute(alloc, &t, &cmd);
-        try testing.expect(resp == null);
-    }
-
-    // Subsequent chunk has no q but should respect initial
-    {
-        const cmd = try command.Parser.parseString(
-            alloc,
-            "m=0;////",
-        );
-        defer cmd.deinit(alloc);
-        const resp = execute(alloc, &t, &cmd);
-        try testing.expect(resp == null);
-    }
-}
-
-test "kittygfx more chunks with q=0" {
-    const testing = std.testing;
-    const alloc = testing.allocator;
-
-    var t = try Terminal.init(alloc, .{ .rows = 5, .cols = 5 });
-    defer t.deinit(alloc);
-
-    // Initial chunk has q=0
-    {
-        const cmd = try command.Parser.parseString(
-            alloc,
-            "a=t,f=24,t=d,s=1,v=2,c=10,r=1,m=1,i=1,q=0;////",
-        );
-        defer cmd.deinit(alloc);
-        const resp = execute(alloc, &t, &cmd);
-        try testing.expect(resp == null);
-    }
-
-    // Subsequent chunk has no q so should respond OK
-    {
-        const cmd = try command.Parser.parseString(
-            alloc,
-            "m=0;////",
-        );
-        defer cmd.deinit(alloc);
-        const resp = execute(alloc, &t, &cmd).?;
-        try testing.expect(resp.ok());
-    }
-}
-
-test "kittygfx more chunks with chunk increasing q" {
-    const testing = std.testing;
-    const alloc = testing.allocator;
-
-    var t = try Terminal.init(alloc, .{ .rows = 5, .cols = 5 });
-    defer t.deinit(alloc);
-
-    // Initial chunk has q=0
-    {
-        const cmd = try command.Parser.parseString(
-            alloc,
-            "a=t,f=24,t=d,s=1,v=2,c=10,r=1,m=1,i=1,q=0;////",
-        );
-        defer cmd.deinit(alloc);
-        const resp = execute(alloc, &t, &cmd);
-        try testing.expect(resp == null);
-    }
-
-    // Subsequent chunk sets q=1 so should not respond
-    {
-        const cmd = try command.Parser.parseString(
-            alloc,
-            "m=0,q=1;////",
-        );
-        defer cmd.deinit(alloc);
-        const resp = execute(alloc, &t, &cmd);
-        try testing.expect(resp == null);
-    }
-}
-
-test "kittygfx default format is rgba" {
-    const testing = std.testing;
-    const alloc = testing.allocator;
-
-    var t = try Terminal.init(alloc, .{ .rows = 5, .cols = 5 });
-    defer t.deinit(alloc);
-
-    const cmd = try command.Parser.parseString(
-        alloc,
-        "a=t,t=d,i=1,s=1,v=2,c=10,r=1;///////////",
-    );
-    defer cmd.deinit(alloc);
-    const resp = execute(alloc, &t, &cmd).?;
-    try testing.expect(resp.ok());
-
-    const storage = &t.screen.kitty_images;
-    const img = storage.imageById(1).?;
-    try testing.expectEqual(command.Transmission.Format.rgba, img.format);
-}
-
-test "kittygfx test valid u32 (expect invalid image ID)" {
-    const testing = std.testing;
-    const alloc = testing.allocator;
-
-    var t = try Terminal.init(alloc, .{ .rows = 5, .cols = 5 });
-    defer t.deinit(alloc);
-
-    const cmd = try command.Parser.parseString(
-        alloc,
-        "a=p,i=4294967295",
-    );
-    defer cmd.deinit(alloc);
-    const resp = execute(alloc, &t, &cmd).?;
-    try testing.expect(!resp.ok());
-    try testing.expectEqual(resp.message, "ENOENT: image not found");
-}
-
-test "kittygfx test valid i32 (expect invalid image ID)" {
-    const testing = std.testing;
-    const alloc = testing.allocator;
-
-    var t = try Terminal.init(alloc, .{ .rows = 5, .cols = 5 });
-    defer t.deinit(alloc);
-
-    const cmd = try command.Parser.parseString(
-        alloc,
-        "a=p,i=1,z=-2147483648",
-    );
-    defer cmd.deinit(alloc);
-    const resp = execute(alloc, &t, &cmd).?;
-    try testing.expect(!resp.ok());
-    try testing.expectEqual(resp.message, "ENOENT: image not found");
-}
-
-test "kittygfx no response with no image ID or number" {
-    const testing = std.testing;
-    const alloc = testing.allocator;
-
-    var t = try Terminal.init(alloc, .{ .rows = 5, .cols = 5 });
-    defer t.deinit(alloc);
-
-    {
-        const cmd = try command.Parser.parseString(
-            alloc,
-            "a=t,f=24,t=d,s=1,v=2,c=10,r=1,i=0,I=0;////////",
-        );
-        defer cmd.deinit(alloc);
-        const resp = execute(alloc, &t, &cmd);
-        try testing.expect(resp == null);
-    }
-}
-
-test "kittygfx no response with no image ID or number load and display" {
-    const testing = std.testing;
-    const alloc = testing.allocator;
-
-    var t = try Terminal.init(alloc, .{ .rows = 5, .cols = 5 });
-    defer t.deinit(alloc);
-
-    {
-        const cmd = try command.Parser.parseString(
-            alloc,
-            "a=T,f=24,t=d,s=1,v=2,c=10,r=1,i=0,I=0;////////",
-        );
-        defer cmd.deinit(alloc);
-        const resp = execute(alloc, &t, &cmd);
-        try testing.expect(resp == null);
-    }
 }