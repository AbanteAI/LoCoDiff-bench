
index ac4e9bf25..06df861c4 100644
--- a/ghostty_src_terminal_kitty_graphics_exec.zig_expectedoutput.txt (expected):tmp/tmpw29u34lb_expected.txt	
+++ b/ghostty_src_terminal_kitty_graphics_exec.zig_extracted.txt (actual):tmp/tmpf4b0ky89_actual.txt	
@@ -2,8 +2,6 @@ const std = @import("std");
 const assert = std.debug.assert;
 const Allocator = std.mem.Allocator;
 
-const renderer = @import("../../renderer.zig");
-const point = @import("../point.zig");
 const Terminal = @import("../Terminal.zig");
 const command = @import("graphics_command.zig");
 const image = @import("graphics_image.zig");
@@ -15,13 +13,6 @@ const ImageStorage = @import("graphics_storage.zig").ImageStorage;
 
 const log = std.log.scoped(.kitty_gfx);
 
-/// Execute a Kitty graphics command against the given terminal. This
-/// will never fail, but the response may indicate an error and the
-/// terminal state may not be updated to reflect the command. This will
-/// never put the terminal in an unrecoverable state, however.
-///
-/// The allocator must be the same allocator that was used to build
-/// the command.
 pub fn execute(
     alloc: Allocator,
     terminal: *Terminal,
@@ -91,6 +82,7 @@ pub fn execute(
 
     return null;
 }
+
 /// Execute a "query" command.
 ///
 /// This command is used to attempt to load an image and respond with
@@ -124,9 +116,6 @@ fn query(alloc: Allocator, cmd: *const Command) Response {
 }
 
 /// Transmit image data.
-///
-/// This loads the image, validates it, and puts it into the terminal
-/// screen storage. It does not display the image.
 fn transmit(
     alloc: Allocator,
     terminal: *Terminal,
