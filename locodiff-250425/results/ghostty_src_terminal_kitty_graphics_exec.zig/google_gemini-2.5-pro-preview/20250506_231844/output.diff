
index ac4e9bf2..37e5c118 100644
--- a/ghostty_src_terminal_kitty_graphics_exec.zig_expectedoutput.txt (expected):tmp/tmpyyiv013k_expected.txt	
+++ b/ghostty_src_terminal_kitty_graphics_exec.zig_extracted.txt (actual):tmp/tmpovyjqpo8_actual.txt	
@@ -307,23 +307,23 @@ fn loadAndAddImage(
     const storage = &terminal.screen.kitty_images;
 
     // Determine our image. This also handles chunking and early exit.
-    var loading: LoadingImage = if (storage.loading) |loading| loading: {
+    var loading: LoadingImage = if (storage.loading) |loading_val| loading_blk: {
         // Note: we do NOT want to call "cmd.toOwnedData" here because
         // we're _copying_ the data. We want the command data to be freed.
-        try loading.addData(alloc, cmd.data);
+        try loading_val.addData(alloc, cmd.data);
 
         // If we have more then we're done
-        if (t.more_chunks) return .{ .image = loading.image, .more = true };
+        if (t.more_chunks) return .{ .image = loading_val.image, .more = true };
 
         // We have no more chunks. We're going to be completing the
         // image so we want to destroy the pointer to the loading
         // image and copy it out.
         defer {
-            alloc.destroy(loading);
+            alloc.destroy(loading_val);
             storage.loading = null;
         }
 
-        break :loading loading.*;
+        break :loading_blk loading_val.*;
     } else try LoadingImage.init(alloc, cmd);
 
     // We only want to deinit on error. If we're chunking, then we don't
