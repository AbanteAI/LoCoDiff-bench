
index ac4e9bf2..bfecf0e8 100644
--- a/ghostty_src_terminal_kitty_graphics_exec.zig_expectedoutput.txt (expected):tmp/tmp058y7hyn_expected.txt	
+++ b/ghostty_src_terminal_kitty_graphics_exec.zig_extracted.txt (actual):tmp/tmpc8k13mf__actual.txt	
@@ -35,6 +35,12 @@ pub fn execute(
         return null;
     }
 
+    // Only Metal and OpenGL supports rendering the images, right now.
+    if (comptime renderer.Renderer != renderer.Metal and renderer.Renderer != renderer.OpenGL) {
+        log.warn("kitty graphics not supported on this renderer", .{});
+        return null;
+    }
+
     log.debug("executing kitty graphics command: quiet={} control={}", .{
         cmd.quiet,
         cmd.control,
@@ -45,6 +51,7 @@ pub fn execute(
     // this can change.
     var quiet = cmd.quiet;
 
+    var result: Response = undefined;
     const resp_: ?Response = switch (cmd.control) {
         .query => query(alloc, cmd),
         .display => display(alloc, terminal, cmd),
@@ -67,7 +74,8 @@ pub fn execute(
                 },
             };
 
-            break :resp transmit(alloc, terminal, cmd);
+            result = transmit(alloc, terminal, cmd);
+            break :resp result;
         },
 
         .transmit_animation_frame,
@@ -91,6 +99,7 @@ pub fn execute(
 
     return null;
 }
+
 /// Execute a "query" command.
 ///
 /// This command is used to attempt to load an image and respond with
@@ -187,6 +196,9 @@ fn display(
     if (d.image_id == 0 and d.image_number == 0) {
         return .{ .message = "EINVAL: image ID or number required" };
     }
+    if (d.image_id > 0 and d.image_number > 0) {
+        return .{ .message = "EINVAL: image ID and number are mutually exclusive" };
+    }
 
     // Build up our response
     var result: Response = .{
