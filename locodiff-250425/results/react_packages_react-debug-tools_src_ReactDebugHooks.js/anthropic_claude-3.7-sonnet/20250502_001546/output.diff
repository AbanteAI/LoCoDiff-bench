--- react_packages_react-debug-tools_src_ReactDebugHooks.js_expectedoutput.txt (expected)+++ react_packages_react-debug-tools_src_ReactDebugHooks.js_extracted.txt (actual)@@ -10,6 +10,7 @@ import type {
   Awaited,
   ReactContext,
+  ReactProviderType,
   StartTransitionOptions,
   Usable,
   Thenable,
@@ -27,16 +28,16 @@ import assign from 'shared/assign';
 import ReactSharedInternals from 'shared/ReactSharedInternals';
 import {
+  REACT_MEMO_CACHE_SENTINEL,
+  REACT_CONTEXT_TYPE,
+} from 'shared/ReactSymbols';
+import hasOwnProperty from 'shared/hasOwnProperty';
+import {
   FunctionComponent,
   SimpleMemoComponent,
   ContextProvider,
   ForwardRef,
 } from 'react-reconciler/src/ReactWorkTags';
-import {
-  REACT_MEMO_CACHE_SENTINEL,
-  REACT_CONTEXT_TYPE,
-} from 'shared/ReactSymbols';
-import hasOwnProperty from 'shared/hasOwnProperty';
 
 type CurrentDispatcherRef = typeof ReactSharedInternals;
 
@@ -64,6 +65,10 @@ type Hook = {
   memoizedState: any,
   next: Hook | null,
+};
+
+type TimeoutConfig = {
+  timeoutMs: number,
 };
 
 function getPrimitiveStackCache(): Map<string, Array<any>> {
@@ -540,7 +545,7 @@ 
   let data = memoCache.data[memoCache.index];
   if (data === undefined) {
-    data = memoCache.data[memoCache.index] = new Array(size);
+    data = new Array(size);
     for (let i = 0; i < size; i++) {
       data[i] = REACT_MEMO_CACHE_SENTINEL;
     }
