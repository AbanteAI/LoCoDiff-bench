
index 2048a82a3..9188b2643 100644
--- a/react_packages_react-debug-tools_src_ReactDebugHooks.js_expectedoutput.txt (expected):tmp/tmpsda2i0jw_expected.txt	
+++ b/react_packages_react-debug-tools_src_ReactDebugHooks.js_extracted.txt (actual):tmp/tmp7cfb9nn7_actual.txt	
@@ -61,11 +61,6 @@ type Dispatch<A> = A => void;
 
 let primitiveStackCache: null | Map<string, Array<any>> = null;
 
-type Hook = {
-  memoizedState: any,
-  next: Hook | null,
-};
-
 function getPrimitiveStackCache(): Map<string, Array<any>> {
   // This initializes a cache of all primitive hooks so that the top
   // most stack frames added by calling the primitive hook can be removed.
@@ -148,6 +143,11 @@ let currentFiber: null | Fiber = null;
 let currentHook: null | Hook = null;
 let currentContextDependency: null | ContextDependency<mixed> = null;
 
+type Hook = {
+  memoizedState: any,
+  next: Hook | null,
+};
+
 function nextHook(): null | Hook {
   const hook = currentHook;
   if (hook !== null) {
@@ -471,10 +471,7 @@ function useSyncExternalStore<T>(
   return value;
 }
 
-function useTransition(): [
-  boolean,
-  (callback: () => void, options?: StartTransitionOptions) => void,
-] {
+function useTransition(): [boolean, (() => void) => void] {
   // useTransition() composes multiple hooks internally.
   // Advance the current hook index the same number of times
   // so that subsequent hooks have the right memoized state.
