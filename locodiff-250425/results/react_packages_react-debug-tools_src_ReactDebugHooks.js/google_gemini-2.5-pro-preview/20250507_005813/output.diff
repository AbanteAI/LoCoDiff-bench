
index 2048a82a..778ef0d0 100644
--- a/react_packages_react-debug-tools_src_ReactDebugHooks.js_expectedoutput.txt (expected):tmp/tmp867ken96_expected.txt	
+++ b/react_packages_react-debug-tools_src_ReactDebugHooks.js_extracted.txt (actual):tmp/tmp00xpcubq_actual.txt	
@@ -84,7 +84,7 @@ function getPrimitiveStackCache(): Map<string, Array<any>> {
       }
       Dispatcher.useLayoutEffect(() => {});
       Dispatcher.useInsertionEffect(() => {});
-      Dispatcher.useEffect(() => {});
+      Dispatcher.useEffect(() => {}, []);
       Dispatcher.useImperativeHandle(undefined, () => null);
       Dispatcher.useDebugValue(null);
       Dispatcher.useCallback(() => {});
@@ -127,7 +127,6 @@ function getPrimitiveStackCache(): Map<string, Array<any>> {
       }
 
       Dispatcher.useId();
-
       if (typeof Dispatcher.useEffectEvent === 'function') {
         Dispatcher.useEffectEvent((args: empty) => {});
       }
@@ -137,7 +136,12 @@ function getPrimitiveStackCache(): Map<string, Array<any>> {
     }
     for (let i = 0; i < readHookLog.length; i++) {
       const hook = readHookLog[i];
-      cache.set(hook.primitive, ErrorStackParser.parse(hook.stackError));
+      cache.set(
+        // Older versions of React do not have sourcemaps.
+        // In those versions there was always a 1:1 mapping between wrapper and dispatcher method.
+        hook.dispatcherHookName || hook.primitive,
+        ErrorStackParser.parse(hook.stackError),
+      );
     }
     primitiveStackCache = cache;
   }
@@ -341,7 +345,7 @@ function useCacheRefresh(): () => void {
 
 function useLayoutEffect(
   create: () => (() => void) | void,
-  inputs: Array<mixed> | void | null,
+  deps: Array<mixed> | void | null,
 ): void {
   nextHook();
   hookLog.push({
@@ -887,7 +891,11 @@ function isReactWrapper(functionName: any, wrapperName: string) {
 
 function findPrimitiveIndex(hookStack: any, hook: HookLogEntry) {
   const stackCache = getPrimitiveStackCache();
-  const primitiveStack = stackCache.get(hook.primitive);
+  const primitiveStack = stackCache.get(
+    // Older versions of React do not have sourcemaps.
+    // In those versions there was always a 1:1 mapping between wrapper and dispatcher method.
+    hook.dispatcherHookName || hook.primitive,
+  );
   if (primitiveStack === undefined) {
     return -1;
   }
@@ -1080,12 +1088,11 @@ function buildTree(
       fileName: null,
       columnNumber: null,
     };
-    if (stack && stack.length >= 1) {
-      const stackFrame = stack[0];
-      hookSource.lineNumber = stackFrame.lineNumber;
-      hookSource.functionName = stackFrame.functionName;
-      hookSource.fileName = stackFrame.fileName;
-      hookSource.columnNumber = stackFrame.columnNumber;
+    if (primitiveFrame !== null) {
+      hookSource.lineNumber = primitiveFrame.lineNumber;
+      hookSource.functionName = primitiveFrame.functionName;
+      hookSource.fileName = primitiveFrame.fileName;
+      hookSource.columnNumber = primitiveFrame.columnNumber;
     }
 
     levelChild.hookSource = hookSource;
