
index 237415b4d..67f5683aa 100644
--- a/qdrant_lib_collection_src_collection_manager_optimizers_indexing_optimizer.rs_expectedoutput.txt (expected):tmp/tmpcx5oxjsx_expected.txt	
+++ b/qdrant_lib_collection_src_collection_manager_optimizers_indexing_optimizer.rs_extracted.txt (actual):tmp/tmpnj8mwpmr_actual.txt	
@@ -525,15 +525,16 @@ mod tests {
         )
         .unwrap();
 
-        let permit_cpu_count = num_rayon_threads(0);
-        let budget = ResourceBudget::new(permit_cpu_count, permit_cpu_count);
-        let permit = budget.try_acquire(0, permit_cpu_count).unwrap();
-
         // ------ Plain -> Mmap & Indexed payload
         let suggested_to_optimize =
             index_optimizer.check_condition(locked_holder.clone(), &excluded_ids);
         assert!(suggested_to_optimize.contains(&large_segment_id));
         eprintln!("suggested_to_optimize = {suggested_to_optimize:#?}");
+
+        let permit_cpu_count = num_rayon_threads(0);
+        let budget = ResourceBudget::new(permit_cpu_count, permit_cpu_count);
+        let permit = budget.try_acquire(0, permit_cpu_count).unwrap();
+
         index_optimizer
             .optimize(
                 locked_holder.clone(),
@@ -867,7 +868,7 @@ mod tests {
         let hnsw_config = HnswConfig {
             m: 16,
             ef_construct: 100,
-            full_scan_threshold: 10,
+            full_scan_threshold: 0,
             max_indexing_threads: 0,
             on_disk: None,
             payload_m: None,
@@ -881,7 +882,7 @@ mod tests {
                 dir.path().to_owned(),
                 temp_dir.path().to_owned(),
                 collection_params.clone(),
-                hnsw_config.clone(),
+                hnsw_config,
                 Default::default(),
             );
             let config_mismatch_optimizer = ConfigMismatchOptimizer::new(
@@ -889,7 +890,7 @@ mod tests {
                 dir.path().to_owned(),
                 temp_dir.path().to_owned(),
                 collection_params.clone(),
-                hnsw_config.clone(),
+                hnsw_config,
                 Default::default(),
             );
 
@@ -945,7 +946,7 @@ mod tests {
             dir.path().to_owned(),
             temp_dir.path().to_owned(),
             collection_params.clone(),
-            hnsw_config.clone(),
+            hnsw_config,
             Default::default(),
         );
         let config_mismatch_optimizer = ConfigMismatchOptimizer::new(
