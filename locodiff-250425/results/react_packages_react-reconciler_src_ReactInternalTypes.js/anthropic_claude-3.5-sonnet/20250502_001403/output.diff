
index 88a7524f..904370d6 100644
--- a/react_packages_react-reconciler_src_ReactInternalTypes.js_expectedoutput.txt (expected):tmp/tmp2c4j447h_expected.txt	
+++ b/react_packages_react-reconciler_src_ReactInternalTypes.js_extracted.txt (actual):tmp/tmpqavc5_no_actual.txt	
@@ -25,7 +25,7 @@ import type {Flags} from './ReactFiberFlags';
 import type {Lane, Lanes, LaneMap} from './ReactFiberLane';
 import type {RootTag} from './ReactRootTags';
 import type {
-  Container,
+  Container, 
   Instance,
   TimeoutHandle,
   NoTimeout,
@@ -39,9 +39,7 @@ import type {TracingMarkerInstance} from './ReactFiberTracingMarkerComponent';
 import type {ConcurrentUpdate} from './ReactFiberConcurrentUpdates';
 import type {ComponentStackNode} from 'react-server/src/ReactFizzComponentStack';
 import type {ThenableState} from './ReactFiberThenable';
-import type {ScheduledGesture} from './ReactFiberGestureScheduler';
 
-// Unwind Circular: moved from ReactFiberHooks.old
 export type HookType =
   | 'useState'
   | 'useReducer'
@@ -130,7 +128,6 @@ export type Fiber = {
   index: number,
 
   // The ref last used to attach this node.
-  // I'll avoid adding an owner field for prod and model that as functions.
   ref:
     | null
     | (((handle: mixed) => void) & {_stringRef: ?string, ...})
@@ -232,6 +229,11 @@ type BaseFiberRootProperties = {
   context: Object | null,
   pendingContext: Object | null,
 
+  // Used by useMutableSource hook to avoid tearing during hydration.
+  mutableSourceEagerHydrationData?: Array<
+    MutableSource<any> | MutableSourceVersion,
+  > | null,
+
   // Used to create a linked list that represent all the roots that have
   // pending work scheduled on them.
   next: FiberRoot | null,
@@ -257,13 +259,6 @@ type BaseFiberRootProperties = {
   pooledCache: Cache | null,
   pooledCacheLanes: Lanes,
 
-  // TODO: In Fizz, id generation is specific to each server config. Maybe we
-  // should do this in Fiber, too? Deferring this decision for now because
-  // there's no other place to store the prefix except for an internal field on
-  // the public createRoot object, which the fiber tree does not currently have
-  // a reference to.
-  identifierPrefix: string,
-
   onUncaughtError: (
     error: mixed,
     errorInfo: {+componentStack?: ?string},
@@ -342,7 +337,7 @@ export type TransitionTracingCallbacks = {
   onMarkerIncomplete?: (
     transitionName: string,
     marker: string,
-    startTime: number,
+    startTime: number, 
     deletions: Array<{
       type: string,
       name?: string | null,
