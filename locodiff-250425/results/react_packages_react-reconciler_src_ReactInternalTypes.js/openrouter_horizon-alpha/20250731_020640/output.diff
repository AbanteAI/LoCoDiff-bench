
index 88a7524f6..84a81b74b 100644
--- a/react_packages_react-reconciler_src_ReactInternalTypes.js_expectedoutput.txt (expected):tmp/tmpfawigbo1_expected.txt	
+++ b/react_packages_react-reconciler_src_ReactInternalTypes.js_extracted.txt (actual):tmp/tmp2idhaleh_actual.txt	
@@ -39,7 +39,6 @@ import type {TracingMarkerInstance} from './ReactFiberTracingMarkerComponent';
 import type {ConcurrentUpdate} from './ReactFiberConcurrentUpdates';
 import type {ComponentStackNode} from 'react-server/src/ReactFizzComponentStack';
 import type {ThenableState} from './ReactFiberThenable';
-import type {ScheduledGesture} from './ReactFiberGestureScheduler';
 
 // Unwind Circular: moved from ReactFiberHooks.old
 export type HookType =
@@ -220,18 +219,18 @@ type BaseFiberRootProperties = {
   current: Fiber,
 
   pingCache: WeakMap<Wakeable, Set<mixed>> | Map<Wakeable, Set<mixed>> | null,
-
   // Timeout handle returned by setTimeout. Used to cancel a pending timeout, if
   // it's superseded by a new one.
   timeoutHandle: TimeoutHandle | NoTimeout,
-  // When a root has a pending commit scheduled, calling this function will
-  // cancel it.
-  // TODO: Can this be consolidated with timeoutHandle?
-  cancelPendingCommit: null | (() => void),
   // Top context object, used by renderSubtreeIntoContainer
   context: Object | null,
   pendingContext: Object | null,
 
+  // Used by useMutableSource hook to avoid tearing during hydration.
+  mutableSourceEagerHydrationData?: Array<
+    MutableSource<any> | MutableSourceVersion,
+  > | null,
+
   // Used to create a linked list that represent all the roots that have
   // pending work scheduled on them.
   next: FiberRoot | null,
