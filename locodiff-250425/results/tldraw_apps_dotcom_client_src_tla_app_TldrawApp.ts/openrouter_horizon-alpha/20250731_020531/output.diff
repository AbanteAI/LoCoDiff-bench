
index 1724dd1c8..c97fca067 100644
--- a/tldraw_apps_dotcom_client_src_tla_app_TldrawApp.ts_expectedoutput.txt (expected):tmp/tmpgms60bug_expected.txt	
+++ b/tldraw_apps_dotcom_client_src_tla_app_TldrawApp.ts_extracted.txt (actual):tmp/tmp1gtedz3m_actual.txt	
@@ -13,9 +13,9 @@ import {
 	TlaSchema,
 	TlaUser,
 	UserPreferencesKeys,
-	Z_PROTOCOL_VERSION,
 	schema as zeroSchema,
 	ZErrorCode,
+	Z_PROTOCOL_VERSION,
 } from '@tldraw/dotcom-shared'
 import {
 	assert,
@@ -468,17 +468,12 @@ export class TldrawApp {
 		return
 	}
 
-	async slurpFile() {
-		return await this.createFile({
+	slurpFile() {
+		return this.createFile({
 			createSource: `${LOCAL_FILE_PREFIX}/${getScratchPersistenceKey()}`,
 		})
 	}
 
-	getFilePk(fileId: string) {
-		const file = this.getFile(fileId)
-		return { id: fileId, ownerId: file!.ownerId, publishedSlug: file!.publishedSlug }
-	}
-
 	toggleFileShared(fileId: string) {
 		const file = this.getUserOwnFiles().find((f) => f.id === fileId)
 		if (!file) throw Error('no file with id ' + fileId)
@@ -491,18 +486,12 @@ export class TldrawApp {
 		})
 	}
 
-	/**
-	 * Publish a file or re-publish changes.
-	 *
-	 * @param fileId - The file id to unpublish.
-	 * @returns A result indicating success or failure.
-	 */
-	publishFile(fileId: string) {
+	setFilePublished(fileId: string, value: boolean) {
 		const file = this.getUserOwnFiles().find((f) => f.id === fileId)
 		if (!file) throw Error(`No file with that id`)
-		if (file.ownerId !== this.userId) throw Error('user cannot publish that file')
+		if (file.ownerId !== this.userId) throw Error('user cannot edit that file')
+		if (value === file.published) return
 
-		// We're going to bake the name of the file, if it's undefined
 		const name = this.getFileName(file)
 
 		// Optimistic update
@@ -591,7 +580,7 @@ export class TldrawApp {
 			return
 		}
 		this.z.mutate.file.update({ id: fileId, shared: true, sharedLinkType })
-	}
+ 	}
 
 	updateUser(partial: Partial<TlaUser>) {
 		const user = this.getUser()
@@ -620,7 +609,6 @@ export class TldrawApp {
 				lastEditAt: null,
 				lastSessionState: null,
 				lastVisitAt: null,
-				isPinned: false,
 				// doesn't really matter what this is because it is
 				// overwritten by postgres
 				isFileOwner: this.isFileOwner(fileId),
