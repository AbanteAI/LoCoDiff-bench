
index 1f6f3a94e..20167a18f 100644
--- a/aider_scripts_issues.py_expectedoutput.txt (expected):tmp/tmpfw5d2qct_expected.txt	
+++ b/aider_scripts_issues.py_extracted.txt (actual):tmp/tmpaiqymea1_actual.txt	
@@ -22,9 +22,7 @@ def has_been_reopened(issue_number):
 # Load environment variables from .env file
 load_dotenv()
 
-BOT_SUFFIX = """
-
-Note: [A bot script](https://github.com/Aider-AI/aider/blob/aider_scripts_issues.py_extracted.txt (actual): [A bot script](https://github.com/Aider-AI/aider/blob/aider_scripts_issues.py_extracted.txt (actual):
     grouped_issues = defaultdict(list)
     pattern = r"Uncaught .+ in .+ line \d+"
     for issue in issues:
+        # Skip pull requests
+        if "pull_request" in issue:
+            continue
+
         if re.search(pattern, issue["title"]) and not has_been_reopened(issue["number"]):
             subject = issue["title"]
             grouped_issues[subject].append(issue)
@@ -240,7 +242,9 @@ def handle_stale_issues(all_issues, auto_yes):
 
             # Add stale label
             url = f"{GITHUB_API_URL}/repos/{REPO_OWNER}/{REPO_NAME}/issues/{issue['number']}"
-            response = requests.patch(url, headers=headers, json={"labels": ["question", "stale"]})
+            response = requests.patch(
+                url, headers=headers, json={"labels": list(set(labels + ["question", "stale"]))}
+            )
             response.raise_for_status()
 
             print(f"  Added stale label and comment to #{issue['number']}")
