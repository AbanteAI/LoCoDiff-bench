--- aider_scripts_issues.py_expectedoutput.txt (expected)+++ aider_scripts_issues.py_extracted.txt (actual)@@ -1,5 +1,4 @@ #!/usr/bin/env python3
-
 import argparse
 import os
 import re
@@ -12,7 +11,9 @@ 
 
 def has_been_reopened(issue_number):
-    timeline_url = f"{GITHUB_API_URL}/repos/{REPO_OWNER}/{REPO_NAME}/issues/{issue_number}/timeline"
+    timeline_url = (
+        f"{GITHUB_API_URL}/repos/{REPO_OWNER}/{REPO_NAME}/issues/{issue_number}/timeline"
+    )
     response = requests.get(timeline_url, headers=headers)
     response.raise_for_status()
     events = response.json()
@@ -22,9 +23,7 @@ # Load environment variables from .env file
 load_dotenv()
 
-BOT_SUFFIX = """
-
-Note: [A bot script](https://github.com/Aider-AI/aider/blob/main/scripts/issues.py) made these updates to the issue.
+BOT_SUFFIX = """Note: [A bot script](https://github.com/Aider-AI/aider/blob/main/scripts/issues.py) made these updates to the issue.
 """  # noqa
 
 DUPLICATE_COMMENT = (
@@ -32,17 +31,17 @@ 
 This looks like a duplicate of #{oldest_issue_number}. Please see the comments there for more information, and feel free to continue the discussion within that issue.
 
-I'm going to close this issue for now. But please let me know if you think this is actually a distinct issue and I will reopen this issue."""  # noqa
+I'm going to close this issue for now. But please let me know if you think this is actually a distinct issue and I will reopen this issue."""
     + BOT_SUFFIX
 )
 
 STALE_COMMENT = (
-    """I'm labeling this issue as stale because it has been open for 2 weeks with no activity. If there are no additional comments, I will close it in 7 days."""  # noqa
+    """I'm labeling this issue as stale because it has been open for 2 weeks with no activity. If there are no additional comments, I will close it in 7 days."""
     + BOT_SUFFIX
 )
 
 CLOSE_STALE_COMMENT = (
-    """I'm closing this issue because it has been stalled for 3 weeks with no activity. Feel free to add a comment here and we can re-open it. Or feel free to file a new issue at any time."""  # noqa
+    """I'm closing this issue because it has been stalled for 3 weeks with no activity. Feel free to add a comment here and we can re-open it. Or feel free to file a new issue at any time."""
     + BOT_SUFFIX
 )
 
@@ -50,14 +49,16 @@     """I'm closing this enhancement request since it has been marked as 'fixed' for over """
     """3 weeks. The requested feature should now be available in recent versions of aider.\n\n"""
     """If you find that this enhancement is still needed, please feel free to reopen this """
-    """issue or create a new one.""" + BOT_SUFFIX
+    """issue or create a new one."""
+    + BOT_SUFFIX
 )
 
 CLOSE_FIXED_BUG_COMMENT = (
     """I'm closing this bug report since it has been marked as 'fixed' for over """
     """3 weeks. This issue should be resolved in recent versions of aider.\n\n"""
     """If you find that this bug is still present, please feel free to reopen this """
-    """issue or create a new one with steps to reproduce.""" + BOT_SUFFIX
+    """issue or create a new one with steps to reproduce."""
+    + BOT_SUFFIX
 )
 
 # GitHub API configuration
@@ -69,7 +70,7 @@ headers = {"Authorization": f"token {TOKEN}", "Accept": "application/vnd.github.v3+json"}
 
 
-def get_issues(state="open"):
+def get_issues(state: str = "open"):
     issues = []
     page = 1
     per_page = 100
@@ -205,7 +206,7 @@     print("\nChecking for stale question issues...")
 
     for issue in all_issues:
-        # Skip if not open, not a question, already stale, or has been reopened
+        # Skip if not open, not a question, already stale, priority, or reopened
         labels = [label["name"] for label in issue["labels"]]
         if (
             issue["state"] != "open"
@@ -250,7 +251,7 @@     print("\nChecking for issues to close or unstale...")
 
     for issue in all_issues:
-        # Skip if not open, not stale, or is priority
+        # Skip if not open, not stale, or priority
         labels = [label["name"] for label in issue["labels"]]
         if issue["state"] != "open" or "stale" not in labels or "priority" in labels:
             continue
@@ -309,7 +310,9 @@             # Check if it's been 7 days since stale label
             days_stale = (datetime.now() - latest_stale).days
             if days_stale >= 7:
-                print(f"\nStale issue ready for closing #{issue['number']}: {issue['title']}")
+                print(
+                    f"\nStale issue ready for closing #{issue['number']}: {issue['title']}"
+                )
                 print(f"  No activity for {days_stale} days since stale label")
 
                 if not auto_yes:
@@ -319,7 +322,9 @@                         continue
 
                 # Add closing comment
-                comment_url = f"{GITHUB_API_URL}/repos/{REPO_OWNER}/{REPO_NAME}/issues/{issue['number']}/comments"  # noqa
+                comment_url = (
+                    f"{GITHUB_API_URL}/repos/{REPO_OWNER}/{REPO_NAME}/issues/{issue['number']}/comments"
+                )
                 response = requests.post(
                     comment_url, headers=headers, json={"body": CLOSE_STALE_COMMENT}
                 )
@@ -355,7 +360,6 @@         response.raise_for_status()
         events = response.json()
 
-        # Find the most recent fixed label addition
         fixed_events = [
             event
             for event in events
@@ -383,7 +387,9 @@             comment_url = (
                 f"{GITHUB_API_URL}/repos/{REPO_OWNER}/{REPO_NAME}/issues/{issue['number']}/comments"
             )
-            comment = CLOSE_FIXED_ENHANCEMENT_COMMENT if is_enhancement else CLOSE_FIXED_BUG_COMMENT
+            comment = (
+                CLOSE_FIXED_ENHANCEMENT_COMMENT if is_enhancement else CLOSE_FIXED_BUG_COMMENT
+            )
             response = requests.post(comment_url, headers=headers, json={"body": comment})
             response.raise_for_status()
 
@@ -421,11 +427,13 @@         )
 
         if not auto_yes:
+            # Confirmation prompt
             confirm = input("Do you want to comment and close duplicate issues? (y/n): ")
             if confirm.lower() != "y":
                 print("Skipping this group of issues.")
                 continue
 
+        # Comment and close duplicate issues
         for issue in issues:
             if issue["number"] != oldest_issue["number"]:
                 comment_and_close_duplicate(issue, oldest_issue)
