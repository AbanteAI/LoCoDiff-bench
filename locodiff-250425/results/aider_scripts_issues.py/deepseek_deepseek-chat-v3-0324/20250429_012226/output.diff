
index 1f6f3a94..bcaa723e 100644
--- a/aider_scripts_issues.py_expectedoutput.txt (expected):tmp/tmp4t3gc1yf_expected.txt	
+++ b/aider_scripts_issues.py_extracted.txt (actual):tmp/tmpd2dnpif9_actual.txt	
@@ -22,9 +22,7 @@ def has_been_reopened(issue_number):
 # Load environment variables from .env file
 load_dotenv()
 
-BOT_SUFFIX = """
-
-Note: [A bot script](https://github.com/Aider-AI/aider/blob/aider_scripts_issues.py_extracted.txt (actual): [A bot script](https://github.com/Aider-AI/aider/blob/aider_scripts_issues.py_extracted.txt (actual):
     response.raise_for_status()
 
     # Close issue
-    response = requests.patch(close_url, headers=headers, json={"state": "closed"})
+    response = requests.patch(close_url, headers=headers, json={"state": "closed"])
     response.raise_for_status()
 
     print(f"  - Commented and closed issue #{issue['number']}")
@@ -327,7 +325,7 @@ def handle_stale_closing(all_issues, auto_yes):
 
                 # Close the issue
                 url = f"{GITHUB_API_URL}/repos/{REPO_OWNER}/{REPO_NAME}/issues/{issue['number']}"
-                response = requests.patch(url, headers=headers, json={"state": "closed"})
+                response = requests.patch(url, headers=headers, json={"state": "closed"])
                 response.raise_for_status()
                 print(f"  Closed issue #{issue['number']}")
 
@@ -389,7 +387,7 @@ def handle_fixed_issues(all_issues, auto_yes):
 
             # Close the issue
             url = f"{GITHUB_API_URL}/repos/{REPO_OWNER}/{REPO_NAME}/issues/{issue['number']}"
-            response = requests.patch(url, headers=headers, json={"state": "closed"})
+            response = requests.patch(url, headers=headers, json={"state": "closed"])
             response.raise_for_status()
             print(f"  Closed issue #{issue['number']}")
 
