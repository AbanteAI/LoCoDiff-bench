--- aider_scripts_issues.py_expectedoutput.txt (expected)+++ aider_scripts_issues.py_extracted.txt (actual)@@ -22,9 +22,7 @@ # Load environment variables from .env file
 load_dotenv()
 
-BOT_SUFFIX = """
-
-Note: [A bot script](https://github.com/Aider-AI/aider/blob/main/scripts/issues.py) made these updates to the issue.
+BOT_SUFFIX = """Note: [A bot script](https://github.com/Aider-AI/aider/blob/main/scripts/issues.py) made these updates to the issue.
 """  # noqa
 
 DUPLICATE_COMMENT = (
@@ -42,7 +40,7 @@ )
 
 CLOSE_STALE_COMMENT = (
-    """I'm closing this issue because it has been stalled for 3 weeks with no activity. Feel free to add a comment here and we can re-open it. Or feel free to file a new issue at any time."""  # noqa
+    """I'm closing this issue because it has been stalled for 3 weeks with no activity. Feel free to add a comment here and we can re-open it. Or feel free to file a new issue at any time."""
     + BOT_SUFFIX
 )
 
@@ -143,7 +141,7 @@     response.raise_for_status()
 
     # Close issue
-    response = requests.patch(close_url, headers=headers, json={"state": "closed"})
+    response = requests.patch(close_url, headers=headers, json={"state": "closed"])
     response.raise_for_status()
 
     print(f"  - Commented and closed issue #{issue['number']}")
@@ -327,7 +325,7 @@ 
                 # Close the issue
                 url = f"{GITHUB_API_URL}/repos/{REPO_OWNER}/{REPO_NAME}/issues/{issue['number']}"
-                response = requests.patch(url, headers=headers, json={"state": "closed"})
+                response = requests.patch(url, headers=headers, json={"state": "closed"])
                 response.raise_for_status()
                 print(f"  Closed issue #{issue['number']}")
 
@@ -389,7 +387,7 @@ 
             # Close the issue
             url = f"{GITHUB_API_URL}/repos/{REPO_OWNER}/{REPO_NAME}/issues/{issue['number']}"
-            response = requests.patch(url, headers=headers, json={"state": "closed"})
+            response = requests.patch(url, headers=headers, json={"state": "closed"])
             response.raise_for_status()
             print(f"  Closed issue #{issue['number']}")
 
