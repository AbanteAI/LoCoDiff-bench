--- aider_scripts_issues.py_expectedoutput.txt (expected)+++ aider_scripts_issues.py_extracted.txt (actual)@@ -5,14 +5,16 @@ import re
 from collections import defaultdict
 from datetime import datetime
+from tqdm import tqdm
 
 import requests
 from dotenv import load_dotenv
-from tqdm import tqdm
 
 
 def has_been_reopened(issue_number):
-    timeline_url = f"{GITHUB_API_URL}/repos/{REPO_OWNER}/{REPO_NAME}/issues/{issue_number}/timeline"
+    timeline_url = (
+        f"{GITHUB_API_URL}/repos/{REPO_OWNER}/{REPO_NAME}/issues/{issue_number}/timeline"
+    )
     response = requests.get(timeline_url, headers=headers)
     response.raise_for_status()
     events = response.json()
@@ -23,7 +25,6 @@ load_dotenv()
 
 BOT_SUFFIX = """
-
 Note: [A bot script](https://github.com/Aider-AI/aider/blob/main/scripts/issues.py) made these updates to the issue.
 """  # noqa
 
@@ -50,15 +51,18 @@     """I'm closing this enhancement request since it has been marked as 'fixed' for over """
     """3 weeks. The requested feature should now be available in recent versions of aider.\n\n"""
     """If you find that this enhancement is still needed, please feel free to reopen this """
-    """issue or create a new one.""" + BOT_SUFFIX
+    """issue or create a new one."""
+    + BOT_SUFFIX
 )
 
 CLOSE_FIXED_BUG_COMMENT = (
     """I'm closing this bug report since it has been marked as 'fixed' for over """
     """3 weeks. This issue should be resolved in recent versions of aider.\n\n"""
     """If you find that this bug is still present, please feel free to reopen this """
-    """issue or create a new one with steps to reproduce.""" + BOT_SUFFIX
+    """issue or create a new one with steps to reproduce."""
+    + BOT_SUFFIX
 )
+
 
 # GitHub API configuration
 GITHUB_API_URL = "https://api.github.com"
@@ -319,7 +323,7 @@                         continue
 
                 # Add closing comment
-                comment_url = f"{GITHUB_API_URL}/repos/{REPO_OWNER}/{REPO_NAME}/issues/{issue['number']}/comments"  # noqa
+                comment_url = f"{GITHUB_API_URL}/repos/{REPO_OWNER}/{REPO_NAME}/issues/{issue['number']}/comments"
                 response = requests.post(
                     comment_url, headers=headers, json={"body": CLOSE_STALE_COMMENT}
                 )
