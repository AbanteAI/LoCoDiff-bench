
index 6abe1ca7..d4b22c26 100644
--- a/ghostty_src_terminal_kitty_graphics_image.zig_expectedoutput.txt (expected):tmp/tmpo5lxwcfz_expected.txt	
+++ b/ghostty_src_terminal_kitty_graphics_image.zig_extracted.txt (actual):tmp/tmp5qodeur8_actual.txt	
@@ -341,7 +341,7 @@ pub const LoadingImage = struct {
         const expected_len = img.width * img.height * bpp;
         const actual_len = self.data.items.len;
         if (actual_len != expected_len) {
-            std.log.warn(
+            log.warn(
                 "unexpected length image id={} width={} height={} bpp={} expected_len={} actual_len={}",
                 .{ img.id, img.width, img.height, bpp, expected_len, actual_len },
             );
@@ -488,6 +488,31 @@ pub const Image = struct {
         copy.data = "";
         return copy;
     }
+
+    /// Debug function to write the data to a file. This is useful for
+    /// capturing some test data for unit tests.
+    pub fn debugDump(self: Image) !void {
+        if (comptime builtin.mode != .Debug) @compileError("debugDump in non-debug");
+
+        var buf: [1024]u8 = undefined;
+        const filename = try std.fmt.bufPrint(
+            &buf,
+            "image-{s}-{s}-{d}x{d}-{}.data",
+            .{
+                @tagName(self.format),
+                @tagName(self.compression),
+                self.width,
+                self.height,
+                self.id,
+            },
+        );
+        const cwd = std.fs.cwd();
+        const f = try cwd.createFile(filename, .{});
+        defer f.close();
+
+        const writer = f.writer();
+        try writer.writeAll(self.data);
+    }
 };
 
 /// The rect taken up by some image placement, in grid cells. This will
@@ -535,7 +560,9 @@ test "image load with image too wide" {
     defer cmd.deinit(alloc);
     var loading = try LoadingImage.init(alloc, &cmd);
     defer loading.deinit(alloc);
-    try testing.expectError(error.DimensionsTooLarge, loading.complete(alloc));
+    var img = try loading.complete(alloc);
+    defer img.deinit(alloc);
+    try testing.expectError(error.DimensionsTooLarge, img.complete(alloc));
 }
 
 test "image load with image too tall" {
@@ -554,7 +581,9 @@ test "image load with image too tall" {
     defer cmd.deinit(alloc);
     var loading = try LoadingImage.init(alloc, &cmd);
     defer loading.deinit(alloc);
-    try testing.expectError(error.DimensionsTooLarge, loading.complete(alloc));
+    var img = try loading.complete(alloc);
+    defer img.deinit(alloc);
+    try testing.expectError(error.DimensionsTooLarge, img.complete(alloc));
 }
 
 test "image load: rgb, zlib compressed, direct" {
