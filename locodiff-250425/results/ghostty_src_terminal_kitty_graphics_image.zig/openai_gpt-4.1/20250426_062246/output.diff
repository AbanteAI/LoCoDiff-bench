--- ghostty_src_terminal_kitty_graphics_image.zig_expectedoutput.txt (expected)+++ ghostty_src_terminal_kitty_graphics_image.zig_extracted.txt (actual)@@ -498,13 +498,14 @@     bottom_right: PageList.Pin,
 };
 
+// TESTS
+
 // This specifically tests we ALLOW invalid RGB data because Kitty
 // documents that this should work.
 test "image load with invalid RGB data" {
     const testing = std.testing;
     const alloc = testing.allocator;
 
-    // <ESC>_Gi=31,s=1,v=1,a=q,t=d,f=24;AAAA<ESC>\
     var cmd: command.Command = .{
         .control = .{ .transmit = .{
             .format = .rgb,
@@ -521,7 +522,7 @@ 
 test "image load with image too wide" {
     const testing = std.testing;
-    const alloc = testing.allocator;
+    const alloc = std.testing.allocator;
 
     var cmd: command.Command = .{
         .control = .{ .transmit = .{
@@ -540,7 +541,7 @@ 
 test "image load with image too tall" {
     const testing = std.testing;
-    const alloc = testing.allocator;
+    const alloc = std.testing.allocator;
 
     var cmd: command.Command = .{
         .control = .{ .transmit = .{
@@ -559,7 +560,7 @@ 
 test "image load: rgb, zlib compressed, direct" {
     const testing = std.testing;
-    const alloc = testing.allocator;
+    const alloc = std.testing.allocator;
 
     var cmd: command.Command = .{
         .control = .{ .transmit = .{
@@ -587,7 +588,7 @@ 
 test "image load: rgb, not compressed, direct" {
     const testing = std.testing;
-    const alloc = testing.allocator;
+    const alloc = std.testing.allocator;
 
     var cmd: command.Command = .{
         .control = .{ .transmit = .{
@@ -615,7 +616,7 @@ 
 test "image load: rgb, zlib compressed, direct, chunked" {
     const testing = std.testing;
-    const alloc = testing.allocator;
+    const alloc = std.testing.allocator;
 
     const data = @embedFile("testdata/image-rgb-zlib_deflate-128x96-2147483647-raw.data");
 
@@ -652,7 +653,7 @@ 
 test "image load: rgb, zlib compressed, direct, chunked with zero initial chunk" {
     const testing = std.testing;
-    const alloc = testing.allocator;
+    const alloc = std.testing.allocator;
 
     const data = @embedFile("testdata/image-rgb-zlib_deflate-128x96-2147483647-raw.data");
 
@@ -688,7 +689,7 @@ 
 test "image load: temporary file without correct path" {
     const testing = std.testing;
-    const alloc = testing.allocator;
+    const alloc = std.testing.allocator;
 
     var tmp_dir = try internal_os.TempDir.init();
     defer tmp_dir.deinit();
@@ -721,7 +722,7 @@ 
 test "image load: rgb, not compressed, temporary file" {
     const testing = std.testing;
-    const alloc = testing.allocator;
+    const alloc = std.testing.allocator;
 
     var tmp_dir = try internal_os.TempDir.init();
     defer tmp_dir.deinit();
@@ -758,7 +759,7 @@ 
 test "image load: rgb, not compressed, regular file" {
     const testing = std.testing;
-    const alloc = testing.allocator;
+    const alloc = std.testing.allocator;
 
     var tmp_dir = try internal_os.TempDir.init();
     defer tmp_dir.deinit();
@@ -793,7 +794,7 @@ 
 test "image load: png, not compressed, regular file" {
     const testing = std.testing;
-    const alloc = testing.allocator;
+    const alloc = std.testing.allocator;
 
     var tmp_dir = try internal_os.TempDir.init();
     defer tmp_dir.deinit();
