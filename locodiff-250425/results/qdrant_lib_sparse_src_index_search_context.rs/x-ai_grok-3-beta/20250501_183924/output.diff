--- qdrant_lib_sparse_src_index_search_context.rs_expectedoutput.txt (expected)+++ qdrant_lib_sparse_src_index_search_context.rs_extracted.txt (actual)@@ -154,7 +154,7 @@         &mut self,
         batch_start_id: PointOffsetType,
         batch_last_id: PointOffsetType,
-        filter_condition: &F,
+        _filter_condition: &F,
     ) {
         // init batch scores
         let batch_len = batch_last_id - batch_start_id + 1;
@@ -181,7 +181,7 @@             if score != 0.0 && score > self.top_results.threshold() {
                 let real_id = batch_start_id + local_index as PointOffsetType;
                 // do not score if filter condition is not satisfied
-                if !filter_condition(real_id) {
+                if !_filter_condition(real_id) {
                     continue;
                 }
                 let score_point_offset = ScoredPointOffset {
@@ -192,7 +192,7 @@             }
         }
     }
-
+    
     /// Compute scores for the last posting list quickly
     fn process_last_posting_list<F: Fn(PointOffsetType) -> bool>(&mut self, filter_condition: &F) {
         debug_assert_eq!(self.postings_iterators.len(), 1);
