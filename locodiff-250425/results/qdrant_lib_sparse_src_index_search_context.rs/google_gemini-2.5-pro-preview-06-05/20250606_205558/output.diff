
index 8be5822c3..1ce303b32 100644
--- a/qdrant_lib_sparse_src_index_search_context.rs_expectedoutput.txt (expected):tmp/tmp6_ua2dcy_expected.txt	
+++ b/qdrant_lib_sparse_src_index_search_context.rs_extracted.txt (actual):tmp/tmp89jg0gcn_actual.txt	
@@ -1,4 +1,5 @@
-use std::cmp::{Ordering, max, min};
+use std::cmp::{max, min, Ordering};
+use std::mem::size_of;
 use std::sync::atomic::AtomicBool;
 use std::sync::atomic::Ordering::Relaxed;
 
@@ -8,7 +9,7 @@ use common::types::{PointOffsetType, ScoredPointOffset};
 
 use super::posting_list_common::PostingListIter;
 use crate::common::scores_memory_pool::PooledScoresHandle;
-use crate::common::sparse_vector::{RemappedSparseVector, score_vectors};
+use crate::common::sparse_vector::{score_vectors, RemappedSparseVector};
 use crate::common::types::{DimId, DimWeight};
 use crate::index::inverted_index::InvertedIndex;
 use crate::index::posting_list::PostingListIterator;
@@ -231,7 +232,6 @@ impl<'a, 'b, T: PostingListIter> SearchContext<'a, 'b, T> {
                 }
             }
         }
-
         min_record_id
     }
 
@@ -350,8 +350,8 @@ impl<'a, 'b, T: PostingListIter> SearchContext<'a, 'b, T> {
             }
         }
         // posting iterators exhausted, return result queue
-        let queue = std::mem::take(&mut self.top_results);
-        queue.into_vec()
+        let top = std::mem::take(&mut self.top_results);
+        top.into_vec()
     }
 
     /// Prune posting lists that cannot possibly contribute to the top results
