
index 9e0324e46..a33a11c67 100644
--- a/ghostty_src_font_discovery.zig_expectedoutput.txt (expected):tmp/tmpm8zb5j63_expected.txt	
+++ b/ghostty_src_font_discovery.zig_extracted.txt (actual):tmp/tmpgo9ich6t_actual.txt	
@@ -616,27 +616,12 @@ pub const CoreText = struct {
     fn score(desc: *const Descriptor, ct_desc: *const macos.text.FontDescriptor) Score {
         var score_acc: Score = .{};
 
-        // We always load the font if we can since some things can only be
-        // inspected on the font itself.
-        const font_: ?*macos.text.Font = macos.text.Font.createWithFontDescriptor(
-            ct_desc,
-            12,
-        ) catch null;
-        defer if (font_) |font| font.release();
-
-        // If we have a font, prefer the font with more glyphs.
-        if (font_) |font| {
-            const Type = @TypeOf(score_acc.glyph_count);
-            score_acc.glyph_count = std.math.cast(
-                Type,
-                font.getGlyphCount(),
-            ) orelse std.math.maxInt(Type);
-        }
-
         // If we're searching for a codepoint, prioritize fonts that
         // have that codepoint.
         if (desc.codepoint > 0) codepoint: {
-            const font = font_ orelse break :codepoint;
+            const font = macos.text.Font.createWithFontDescriptor(ct_desc, 12) catch
+                break :codepoint;
+            defer font.release();
 
             // Turn UTF-32 into UTF-16 for CT API
             var unichars: [2]u16 = undefined;
@@ -829,11 +814,4 @@ test "coretext codepoint" {
     var it = try ct.discover(alloc, .{ .codepoint = 'A', .size = 12 });
     defer it.deinit();
 
-    // The first result should have the codepoint. Later ones may not
-    // because fontconfig returns all fonts sorted.
-    const face = (try it.next()).?;
-    try testing.expect(face.hasCodepoint('A', null));
-
-    // Should have other codepoints too
-    try testing.expect(face.hasCodepoint('B', null));
-}
\ No newline at end of file
+    // The first result should have the code
\ No newline at end of file
