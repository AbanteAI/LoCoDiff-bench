
index 9e0324e46..dda66b9cc 100644
--- a/ghostty_src_font_discovery.zig_expectedoutput.txt (expected):tmp/tmpg7k9hnhh_expected.txt	
+++ b/ghostty_src_font_discovery.zig_extracted.txt (actual):tmp/tmpckx3hrdz_actual.txt	
@@ -792,48 +792,4 @@ test "fontconfig codepoint" {
 
     // The first result should have the codepoint. Later ones may not
     // because fontconfig returns all fonts sorted.
-    const face = (try it.next()).?;
-    try testing.expect(face.hasCodepoint('A', null));
-
-    // Should have other codepoints too
-    try testing.expect(face.hasCodepoint('B', null));
-}
-
-test "coretext" {
-    if (options.backend != .coretext and options.backend != .coretext_freetype)
-        return error.SkipZigTest;
-
-    const testing = std.testing;
-    const alloc = testing.allocator;
-
-    var ct = CoreText.init();
-    defer ct.deinit();
-    var it = try ct.discover(alloc, .{ .family = "Monaco", .size = 12 });
-    defer it.deinit();
-    var count: usize = 0;
-    while (try it.next()) |_| {
-        count += 1;
-    }
-    try testing.expect(count > 0);
-}
-
-test "coretext codepoint" {
-    if (options.backend != .coretext and options.backend != .coretext_freetype)
-        return error.SkipZigTest;
-
-    const testing = std.testing;
-    const alloc = testing.allocator;
-
-    var ct = CoreText.init();
-    defer ct.deinit();
-    var it = try ct.discover(alloc, .{ .codepoint = 'A', .size = 12 });
-    defer it.deinit();
-
-    // The first result should have the codepoint. Later ones may not
-    // because fontconfig returns all fonts sorted.
-    const face = (try it.next()).?;
-    try testing.expect(face.hasCodepoint('A', null));
-
-    // Should have other codepoints too
-    try testing.expect(face.hasCodepoint('B', null));
-}
\ No newline at end of file
+    const face = (try it.next()).
\ No newline at end of file
