
index 80b840774..48b593ea6 100644
--- a/aider_tests_basic_test_reasoning.py_expectedoutput.txt (expected):tmp/tmpqd4ft1jn_expected.txt	
+++ b/aider_tests_basic_test_reasoning.py_extracted.txt (actual):tmp/tmpbsl67dc__actual.txt	
@@ -138,10 +138,7 @@ class TestReasoning(unittest.TestCase):
         mock_hash.hexdigest.return_value = "mock_hash_digest"
 
         # Mock the model's send_completion to return the hash and completion
-        with (
-            patch.object(model, "send_completion", return_value=(mock_hash, chunks)),
-            patch.object(model, "token_count", return_value=10),
-        ):  # Mock token count to avoid serialization issues
+        with patch.object(model, "send_completion", return_value=(mock_hash, chunks)):
             # Set mdstream directly on the coder object
             coder.mdstream = mock_mdstream
 
@@ -323,7 +320,10 @@ class TestReasoning(unittest.TestCase):
         mock_hash.hexdigest.return_value = "mock_hash_digest"
 
         # Mock the model's send_completion to return the hash and completion
-        with patch.object(model, "send_completion", return_value=(mock_hash, chunks)):
+        with (
+            patch.object(model, "send_completion", return_value=(mock_hash, chunks)),
+            patch.object(model, "token_count", return_value=10),
+        ):
             # Set mdstream directly on the coder object
             coder.mdstream = mock_mdstream
 
