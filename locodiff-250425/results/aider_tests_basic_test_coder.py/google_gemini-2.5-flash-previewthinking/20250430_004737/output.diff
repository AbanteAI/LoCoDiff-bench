--- aider_tests_basic_test_coder.py_expectedoutput.txt (expected)+++ aider_tests_basic_test_coder.py_extracted.txt (actual)@@ -1,3 +1,4 @@+#!/usr/bin/env python
 import os
 import tempfile
 import unittest
@@ -203,6 +204,7 @@             mentioned = coder.get_file_mentions(f"Check {fname1} and {fname3}")
             self.assertEqual(mentioned, {str(fname3)})
 
+
     def test_check_for_file_mentions_read_only(self):
         with GitTemporaryDirectory():
             io = InputOutput(
@@ -266,6 +268,7 @@ 
             # Assert that file1.txt is in ignore_mentions
             self.assertIn("file1.txt", coder.ignore_mentions)
+
 
     def test_check_for_subdir_mention(self):
         with GitTemporaryDirectory():
@@ -945,7 +948,7 @@     def test_suggest_shell_commands(self):
         with GitTemporaryDirectory():
             io = InputOutput(yes=True)
-            coder = Coder.create(self.GPT35, "diff", io=io)
+            coder = Coder.create(self.GPT35, "diff", io=io, pretty=False)
 
             def mock_send(*args, **kwargs):
                 coder.partial_response_content = """Here's a shell command to run:
@@ -1181,6 +1184,7 @@             sanity_check_messages(coder.cur_messages)
             self.assertEqual(coder.cur_messages[-1]["role"], "assistant")
 
+
     def test_architect_coder_auto_accept_true(self):
         with GitTemporaryDirectory():
             io = InputOutput(yes=True)
@@ -1270,6 +1274,14 @@                 coder.auto_accept_architect = False
                 coder.verbose = False
                 coder.total_cost = 0
+                coder.cur_messages = []
+                coder.done_messages = []
+                coder.summarizer = MagicMock()
+                coder.summarizer.too_big.return_value = False
+                coder.cur_messages = []
+                coder.done_messages = []
+                coder.summarizer = MagicMock()
+                coder.summarizer.too_big.return_value = False
 
                 # Mock editor_coder creation and execution
                 mock_editor = MagicMock()
