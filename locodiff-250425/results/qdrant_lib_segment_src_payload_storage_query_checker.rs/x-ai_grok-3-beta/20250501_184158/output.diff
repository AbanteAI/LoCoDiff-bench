--- qdrant_lib_segment_src_payload_storage_query_checker.rs_expectedoutput.txt (expected)+++ qdrant_lib_segment_src_payload_storage_query_checker.rs_extracted.txt (actual)@@ -5,6 +5,7 @@ use std::ops::Deref;
 use std::sync::Arc;
 
+use ahash::AHashSet;
 use atomic_refcell::AtomicRefCell;
 use common::counter::hardware_counter::HardwareCounterCell;
 use common::types::PointOffsetType;
@@ -316,16 +317,16 @@             query,
             point_id,
             &IndexesMap::new(),
-            &HardwareCounterCell::new(),
+            &hw_counter,
         )
     }
 }
 
 #[cfg(test)]
 mod tests {
+    use ahash::AHashSet;
     use std::str::FromStr;
 
-    use ahash::AHashSet;
     use tempfile::Builder;
 
     use super::*;
@@ -483,7 +484,6 @@                     lte: None,
                 },
             )));
-        assert!(!payload_checker.check(0, &many_value_count_condition));
 
         let few_value_count_condition =
             Filter::new_must(Condition::Field(FieldCondition::new_values_count(
@@ -495,6 +495,8 @@                     lte: None,
                 },
             )));
+
+        assert!(!payload_checker.check(0, &many_value_count_condition));
         assert!(payload_checker.check(0, &few_value_count_condition));
 
         let in_berlin = Condition::Field(FieldCondition::new_geo_bounding_box(
