--- qdrant_lib_segment_src_payload_storage_query_checker.rs_expectedoutput.txt (expected)+++ qdrant_lib_segment_src_payload_storage_query_checker.rs_extracted.txt (actual)@@ -9,7 +9,7 @@ use common::counter::hardware_counter::HardwareCounterCell;
 use common::types::PointOffsetType;
 
-use crate::common::utils::{IndexesMap, check_is_empty, check_is_null};
+use crate::common::utils::{check_is_empty, check_is_null, IndexesMap};
 use crate::id_tracker::IdTrackerSS;
 use crate::index::field_index::FieldIndex;
 use crate::payload_storage::condition_checker::ValueChecker;
@@ -31,7 +31,7 @@     }
 }
 
-pub fn check_filter<F>(checker: &F, filter: &Filter) -> bool
+fn check_filter<F>(checker: &F, filter: &Filter) -> bool
 where
     F: Fn(&Condition) -> bool,
 {
@@ -62,14 +62,12 @@         Some(MinShould {
             conditions,
             min_count,
-        }) => {
-            conditions
-                .iter()
-                .filter(|cond| check(cond))
-                .take(*min_count)
-                .count()
-                == *min_count
-        }
+        }) => conditions
+            .iter()
+            .filter(|cond| check(cond))
+            .take(*min_count)
+            .count()
+            == *min_count,
     }
 }
 
@@ -102,10 +100,11 @@ where
     R: AsRef<Vec<FieldIndex>>,
 {
+    let nested_prefix = format!("{}.", nested_path);
     let nested_indexes: HashMap<_, _> = field_indexes
         .iter()
         .filter_map(|(key, indexes)| {
-            key.strip_prefix(nested_path)
+            key.strip_prefix(&nested_prefix)
                 .map(|key| (key, indexes.as_ref()))
         })
         .collect();
@@ -177,11 +176,11 @@     is_empty: &IsEmptyCondition,
     payload: &impl PayloadContainer,
 ) -> bool {
-    check_is_empty(payload.get_value(&is_empty.is_empty.key).iter().copied())
+    payload.get_value(&is_empty.is_empty.key).check_is_empty()
 }
 
 pub fn check_is_null_condition(is_null: &IsNullCondition, payload: &impl PayloadContainer) -> bool {
-    check_is_null(payload.get_value(&is_null.is_null.key).iter().copied())
+    payload.get_value(&is_null.is_null.key).check_is_null()
 }
 
 pub fn check_field_condition<R>(
@@ -329,13 +328,13 @@     use tempfile::Builder;
 
     use super::*;
-    use crate::common::rocksdb_wrapper::{DB_VECTOR_CF, open_db};
+    use crate::common::rocksdb_wrapper::{open_db, DB_VECTOR_CF};
+    use crate::id_tracker::simple_id_tracker::SimpleIdTracker;
     use crate::id_tracker::IdTracker;
-    use crate::id_tracker::simple_id_tracker::SimpleIdTracker;
     use crate::json_path::JsonPath;
     use crate::payload_json;
+    use crate::payload_storage::simple_payload_storage::SimplePayloadStorage;
     use crate::payload_storage::PayloadStorage;
-    use crate::payload_storage::simple_payload_storage::SimplePayloadStorage;
     use crate::types::{
         DateTimeWrapper, FieldCondition, GeoBoundingBox, GeoPoint, PayloadField, Range, ValuesCount,
     };
