
index 4e5c39ca7..7639fa86c 100644
--- a/qdrant_lib_segment_src_payload_storage_query_checker.rs_expectedoutput.txt (expected):tmp/tmpkeajn3up_expected.txt	
+++ b/qdrant_lib_segment_src_payload_storage_query_checker.rs_extracted.txt (actual):tmp/tmpp2gc_vpd_actual.txt	
@@ -278,7 +278,22 @@ impl ConditionChecker for SimpleConditionChecker {
                             s.payload_ptr(point_id).map(|x| x.into())
                         }
                         PayloadStorageEnum::SimplePayloadStorage(s) => {
-                            s.payload_ptr(point_id).map(|x| x.into())
+                            // Warn: Possible panic here
+                            // Currently, it is possible that `read_payload` fails with Err,
+                            // but it seems like a very rare possibility which might only happen
+                            // if something is wrong with disk or storage is corrupted.
+                            //
+                            // In both cases it means that service can't be of use any longer.
+                            // It is as good as dead. Therefore it is tolerable to just panic here.
+                            // Downside is - API user won't be notified of the failure.
+                            // It will just timeout.
+                            //
+                            // The alternative:
+                            // Rewrite condition checking code to support error reporting.
+                            // Which may lead to slowdown and assumes a lot of changes.
+                            s.read_payload(point_id, &hw_counter)
+                                .unwrap_or_else(|err| panic!("Payload storage is corrupted: {err}"))
+                                .map(|x| x.into())
                         }
                         PayloadStorageEnum::OnDiskPayloadStorage(s) => {
                             // Warn: Possible panic here
