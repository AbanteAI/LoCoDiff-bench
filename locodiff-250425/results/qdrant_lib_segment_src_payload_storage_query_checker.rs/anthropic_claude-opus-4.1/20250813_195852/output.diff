
index 4e5c39ca7..aa7292127 100644
--- a/qdrant_lib_segment_src_payload_storage_query_checker.rs_expectedoutput.txt (expected):tmp/tmpt905bw77_expected.txt	
+++ b/qdrant_lib_segment_src_payload_storage_query_checker.rs_extracted.txt (actual):tmp/tmp0x8_8mt__actual.txt	
@@ -644,23 +644,4 @@ mod tests {
         let query = Filter::new_must(shipped_in_february);
         assert!(payload_checker.check(0, &query));
 
-        let query = Filter::new_must(shipped_in_march);
-        assert!(!payload_checker.check(0, &query));
-
-        // id Filter
-        let ids: AHashSet<_> = vec![1, 2, 3].into_iter().map(|x| x.into()).collect();
-
-        let query = Filter::new_must_not(Condition::HasId(ids.into()));
-        assert!(!payload_checker.check(2, &query));
-
-        let ids: AHashSet<_> = vec![1, 2, 3].into_iter().map(|x| x.into()).collect();
-
-        let query = Filter::new_must_not(Condition::HasId(ids.into()));
-        assert!(payload_checker.check(10, &query));
-
-        let ids: AHashSet<_> = vec![1, 2, 3].into_iter().map(|x| x.into()).collect();
-
-        let query = Filter::new_must(Condition::HasId(ids.into()));
-        assert!(payload_checker.check(2, &query));
-    }
-}
\ No newline at end of file
+        let query = Filter::new_must(shipped_in_march);
\ No newline at end of file
