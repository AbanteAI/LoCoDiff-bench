--- tldraw_packages_validate_src_lib_validation.ts_expectedoutput.txt (expected)+++ tldraw_packages_validate_src_lib_validation.ts_extracted.txt (actual)@@ -679,17 +679,6 @@ 	return value as Record<string, unknown>
 })
 
-/**
- * Validate an object has a particular shape.
- *
- * @public
- */
-export function object<Shape extends object>(config: {
-	readonly [K in keyof Shape]: Validatable<Shape[K]>
-}): ObjectValidator<MakeUndefinedOptional<Shape>> {
-	return new ObjectValidator(config) as any
-}
-
 function isPlainObject(value: unknown): value is Record<string, unknown> {
 	return (
 		typeof value === 'object' &&
@@ -790,12 +779,14 @@  *
  * @public
  */
-export function jsonDict(): DictValidator<string, JsonValue> {
-	return dict(string, jsonValue)
-}
-
-/**
- * Validation that an option is a dict with particular keys and values.
+export function object<Shape extends object>(config: {
+	readonly [K in keyof Shape]: Validatable<Shape[K]>
+}): ObjectValidator<MakeUndefinedOptional<Shape>> {
+	return new ObjectValidator(config) as any
+}
+
+/**
+ * Validate an option is a dict with particular keys and values.
  *
  * @public
  */
@@ -849,7 +840,7 @@ 	return new UnionValidator(
 		key,
 		config,
-		(unknownValue, unknownVariant) => {
+		(_unknownValue, unknownVariant) => {
 			throw new ValidationError(
 				`Expected one of ${Object.keys(config)
 					.map((key) => JSON.stringify(key))
