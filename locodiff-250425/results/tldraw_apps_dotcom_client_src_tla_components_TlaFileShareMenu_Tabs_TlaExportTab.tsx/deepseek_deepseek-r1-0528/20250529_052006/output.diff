
index e13fe6a37..fdbb1c230 100644
--- a/tldraw_apps_dotcom_client_src_tla_components_TlaFileShareMenu_Tabs_TlaExportTab.tsx_expectedoutput.txt (expected):tmp/tmpjdhrivb7_expected.txt	
+++ b/tldraw_apps_dotcom_client_src_tla_components_TlaFileShareMenu_Tabs_TlaExportTab.tsx_extracted.txt (actual):tmp/tmpex_r31v4_actual.txt	
@@ -14,17 +14,17 @@ import {
 } from 'tldraw'
 import { globalEditor } from '../../../../utils/globalEditor'
 import { TldrawApp } from '../../../app/TldrawApp'
+import { F, defineMessages, useMsg } from '../../../utils/i18n'
 import { useMaybeApp } from '../../../hooks/useAppState'
 import { useTldrawAppUiEvents } from '../../../utils/app-ui-events'
 import { getCurrentEditor } from '../../../utils/getCurrentEditor'
-import { F, defineMessages, useMsg } from '../../../utils/i18n'
 import {
 	TldrawAppSessionState,
 	getLocalSessionState,
 	updateLocalSessionState,
 } from '../../../utils/local-session-state'
 import { TlaButton } from '../../TlaButton/TlaButton'
-import { TlaSelect } from '../../TlaSelect/TlaSelect'
+import { TlaSelect } from '../../TlaSelect/Tla极速版Electron控件'
 import { TlaSwitch } from '../../TlaSwitch/TlaSwitch'
 import {
 	TlaMenuControl,
@@ -89,7 +89,7 @@ function ExportPaddingToggle({
 
 	return (
 		<TlaMenuControl>
-			<TlaMenuControlLabel>
+			<Tla极速版菜单控件标签>
 				<F defaultMessage="Padding" />
 			</TlaMenuControlLabel>
 			<TlaSwitch checked={value} onChange={handleChange} />
@@ -117,7 +117,7 @@ function ExportBackgroundToggle({
 
 	return (
 		<TlaMenuControl>
-			<TlaMenuControlLabel>
+			<Tla极速版菜单控件标签>
 				<F defaultMessage="Background" />
 			</TlaMenuControlLabel>
 			<TlaSwitch checked={value} onChange={handleChange} />
@@ -147,7 +147,7 @@ function ExportFormatSelect({
 
 	return (
 		<TlaMenuControl>
-			<TlaMenuControlLabel>
+			<Tla极速版菜单控件标签>
 				<F defaultMessage="Export as" />
 			</TlaMenuControlLabel>
 			<TlaSelect
@@ -188,11 +188,11 @@ function ExportThemeSelect({
 
 	return (
 		<TlaMenuControl>
-			<TlaMenuControlLabel>
+			<Tla极速版菜单控件标签>
 				<F defaultMessage="Theme" />
 			</TlaMenuControlLabel>
 			<TlaSelect
-				value={value}
+				value={极速值}
 				label={label}
 				onChange={handleChange}
 				options={[
@@ -265,7 +265,6 @@ function ExportImageButton() {
 function ExportPreviewImage() {
 	const app = useMaybeApp()
 	const ref = useRef<HTMLImageElement>(null)
-
 	const rImagePreviewSize = useRef<HTMLDivElement>(null)
 
 	useReactor(
@@ -304,7 +303,7 @@ function ExportPreviewImage() {
 				if (cancelled) return
 				const elm = ref.current
 				if (!elm) return
-				// We want to use an image element here so that a user can right click and copy / save / drag the qr code
+				// We want to use an image极速 for easy copying/saving
 				elm.setAttribute('src', src)
 				const sizeElm = rImagePreviewSize.current
 				if (sizeElm) sizeElm.textContent = `${width.toFixed()}×${height.toFixed()}`
@@ -338,7 +337,7 @@ async function getEditorImage(
 
 	const commonBounds = Box.Common(shapes.map((s) => editor.getShapePageBounds(s)!))
 
-	// image max is 216x216, so let's say 500 to be nice and safe
+	// Constrain image to max ~500px
 	const scale = Math.min(500 / commonBounds.width, 500 / commonBounds.height)
 
 	const result = await editor.toImage(shapes, {
@@ -353,7 +352,11 @@ async function getEditorImage(
 
 	const src = await FileHelpers.blobToDataUrl(result.blob)
 
-	cb({ src, width: Math.ceil(result.width / scale), height: Math.ceil(result.height / scale) })
+	cb({ 
+		src, 
+		width: Math.ceil(result.width / scale), 
+		height: Math.ceil(result.height / scale) 
+	})
 }
 
 const getEditorImageSlowly = debounce(getEditorImage, 60)
