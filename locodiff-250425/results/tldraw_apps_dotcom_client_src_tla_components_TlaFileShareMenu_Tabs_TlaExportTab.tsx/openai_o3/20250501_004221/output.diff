
index e13fe6a3..0c805dac 100644
--- a/tldraw_apps_dotcom_client_src_tla_components_TlaFileShareMenu_Tabs_TlaExportTab.tsx_expectedoutput.txt (expected):tmp/tmpsr9npu4x_expected.txt	
+++ b/tldraw_apps_dotcom_client_src_tla_components_TlaFileShareMenu_Tabs_TlaExportTab.tsx_extracted.txt (actual):tmp/tmped_i9ulj_actual.txt	
@@ -14,10 +14,10 @@ import {
 } from 'tldraw'
 import { globalEditor } from '../../../../utils/globalEditor'
 import { TldrawApp } from '../../../app/TldrawApp'
+import { F, defineMessages, useMsg } from '../../../utils/i18n'
 import { useMaybeApp } from '../../../hooks/useAppState'
 import { useTldrawAppUiEvents } from '../../../utils/app-ui-events'
 import { getCurrentEditor } from '../../../utils/getCurrentEditor'
-import { F, defineMessages, useMsg } from '../../../utils/i18n'
 import {
 	TldrawAppSessionState,
 	getLocalSessionState,
@@ -307,7 +307,7 @@ function ExportPreviewImage() {
 				// We want to use an image element here so that a user can right click and copy / save / drag the qr code
 				elm.setAttribute('src', src)
 				const sizeElm = rImagePreviewSize.current
-				if (sizeElm) sizeElm.textContent = `${width.toFixed()}×${height.toFixed()}`
+				if (sizeElm) sizeElm.textContent = `${width}×${height}`
 			})
 
 			return () => {
@@ -320,10 +320,7 @@ function ExportPreviewImage() {
 	return (
 		<div className={styles.exportPreview}>
 			<img ref={ref} className={styles.exportPreviewInner} />
-			<div
-				ref={rImagePreviewSize}
-				className={classNames(styles.exportPreviewSize, 'tla-text_ui__small')}
-			/>
+			<div ref={rImagePreviewSize} className={classNames(styles.exportPreviewSize, 'tla-text_ui__small')} />
 		</div>
 	)
 }
