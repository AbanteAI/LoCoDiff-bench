
index d55d5dc5b..380b47cd0 100644
--- a/react_packages_react-devtools-shared_src_devtools_views_DevTools.js_expectedoutput.txt (expected):tmp/tmp39rsnfvk_expected.txt	
+++ b/react_packages_react-devtools-shared_src_devtools_views_DevTools.js_extracted.txt (actual):tmp/tmpyt2j75sc_actual.txt	
@@ -73,6 +73,12 @@ export type Props = {
   canViewElementSourceFunction?: ?CanViewElementSource,
   defaultTab?: TabID,
   enabledInspectedElementContextMenu?: boolean,
+  fetchFileWithCaching?: ?FetchFileWithCaching,
+  // TODO (Webpack 5) Hopefully we can remove this prop after the Webpack 5 migration.
+  hookNamesModuleLoaderFunction?: ?HookNamesModuleLoaderFunction,
+  overrideTab?: TabID,
+  componentsPortalContainer?: Element,
+  profilerPortalContainer?: Element,
   showTabBar?: boolean,
   store: Store,
   warnIfLegacyBackendDetected?: boolean,
@@ -85,25 +91,6 @@ export type Props = {
   hideToggleSuspenseAction?: boolean,
   hideLogAction?: boolean,
   hideViewSourceAction?: boolean,
-
-  // This property is used only by the web extension target.
-  // The built-in tab UI is hidden in that case, in favor of the browser's own panel tabs.
-  // This is done to save space within the app.
-  // Because of this, the extension needs to be able to change which tab is active/rendered.
-  overrideTab?: TabID,
-
-  // To avoid potential multi-root trickiness, the web extension uses portals to render tabs.
-  // The root <DevTools> app is rendered in the top-level extension window,
-  // but individual tabs (e.g. Components, Profiling) can be rendered into portals within their browser panels.
-  componentsPortalContainer?: Element,
-  profilerPortalContainer?: Element,
-
-  // Loads and parses source maps for function components
-  // and extracts hook "names" based on the variables the hook return values get assigned to.
-  // Not every DevTools build can load source maps, so this property is optional.
-  fetchFileWithCaching?: ?FetchFileWithCaching,
-  // TODO (Webpack 5) Hopefully we can remove this prop after the Webpack 5 migration.
-  hookNamesModuleLoaderFunction?: ?HookNamesModuleLoaderFunction,
 };
 
 const componentsTab = {
@@ -125,8 +112,8 @@ export default function DevTools({
   bridge,
   browserTheme = 'light',
   canViewElementSourceFunction,
-  componentsPortalContainer,
   defaultTab = 'components',
+  componentsPortalContainer,
   enabledInspectedElementContextMenu = false,
   fetchFileWithCaching,
   hookNamesModuleLoaderFunction,
@@ -303,9 +290,7 @@ export default function DevTools({
                                     className={styles.TabContent}
                                     hidden={tab !== 'components'}>
                                     <Components
-                                      portalContainer={
-                                        componentsPortalContainer
-                                      }
+                                      portalContainer={componentsPortalContainer}
                                     />
                                   </div>
                                   <div
