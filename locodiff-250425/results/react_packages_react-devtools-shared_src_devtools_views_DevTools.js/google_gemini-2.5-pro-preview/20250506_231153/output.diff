
index d55d5dc5..7df28cba 100644
--- a/react_packages_react-devtools-shared_src_devtools_views_DevTools.js_expectedoutput.txt (expected):tmp/tmpcichl7q1_expected.txt	
+++ b/react_packages_react-devtools-shared_src_devtools_views_DevTools.js_extracted.txt (actual):tmp/tmp_r3v4r_x_actual.txt	
@@ -13,7 +13,13 @@ import '@reach/menu-button/styles.css';
 import '@reach/tooltip/styles.css';
 
 import * as React from 'react';
-import {useCallback, useEffect, useLayoutEffect, useMemo, useRef} from 'react';
+import {
+  useCallback,
+  useEffect,
+  useLayoutEffect,
+  useMemo,
+  useRef,
+} from 'react';
 import Store from '../store';
 import {
   BridgeContext,
@@ -46,11 +52,11 @@ import styles from './DevTools.css';
 
 import './root.css';
 
+import type {Source} from 'react-devtools-shared/src/shared/types';
 import type {FetchFileWithCaching} from './Components/FetchFileWithCachingContext';
 import type {HookNamesModuleLoaderFunction} from 'react-devtools-shared/src/devtools/views/Components/HookNamesModuleLoaderContext';
 import type {FrontendBridge} from 'react-devtools-shared/src/bridge';
 import type {BrowserTheme} from 'react-devtools-shared/src/frontend/types';
-import type {Source} from 'react-devtools-shared/src/shared/types';
 
 export type TabID = 'components' | 'profiler';
 
@@ -242,7 +248,7 @@ export default function DevTools({
     return () => {
       ownerWindow.removeEventListener('keydown', handleKeyDown);
     };
-  }, [showTabBar]);
+  }, [showTabBar, selectTab]);
 
   useLayoutEffect(() => {
     return () => {
