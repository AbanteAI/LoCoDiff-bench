--- react_packages_react-devtools-shared_src_devtools_views_DevTools.js_expectedoutput.txt (expected)+++ react_packages_react-devtools-shared_src_devtools_views_DevTools.js_extracted.txt (actual)@@ -3,8 +3,6 @@  *
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
- *
- * @flow
  */
 
 // Reach styles need to come before any component styles.
@@ -18,14 +16,12 @@ import {
   BridgeContext,
   ContextMenuContext,
+  OptionsContext,
   StoreContext,
-  OptionsContext,
 } from './context';
 import Components from './Components/Components';
 import Profiler from './Profiler/Profiler';
 import TabBar from './TabBar';
-import {SettingsContextController} from './Settings/SettingsContext';
-import {TreeContextController} from './Components/TreeContext';
 import ViewElementSourceContext from './Components/ViewElementSourceContext';
 import FetchFileWithCachingContext from './Components/FetchFileWithCachingContext';
 import {InspectedElementContextController} from './Components/InspectedElementContext';
@@ -46,6 +42,7 @@ 
 import './root.css';
 
+import type {InspectedElement} from 'react-devtools-shared/src/frontend/types';
 import type {FetchFileWithCaching} from './Components/FetchFileWithCachingContext';
 import type {HookNamesModuleLoaderFunction} from 'react-devtools-shared/src/devtools/views/Components/HookNamesModuleLoaderContext';
 import type {FrontendBridge} from 'react-devtools-shared/src/bridge';
@@ -77,32 +74,17 @@   store: Store,
   warnIfLegacyBackendDetected?: boolean,
   warnIfUnsupportedVersionDetected?: boolean,
-  viewAttributeSourceFunction?: ?ViewAttributeSource,
-  viewElementSourceFunction?: ?ViewElementSource,
+  viewAttributeSourceFunction?: ?ViewElementSource,
   readOnly?: boolean,
   hideSettings?: boolean,
   hideToggleErrorAction?: boolean,
   hideToggleSuspenseAction?: boolean,
   hideLogAction?: boolean,
   hideViewSourceAction?: boolean,
-
-  // This property is used only by the web extension target.
-  // The built-in tab UI is hidden in that case, in favor of the browser's own panel tabs.
-  // This is done to save space within the app.
-  // Because of this, the extension needs to be able to change which tab is active/rendered.
   overrideTab?: TabID,
-
-  // To avoid potential multi-root trickiness, the web extension uses portals to render tabs.
-  // The root <DevTools> app is rendered in the top-level extension window,
-  // but individual tabs (e.g. Components, Profiling) can be rendered into portals within their browser panels.
   componentsPortalContainer?: Element,
   profilerPortalContainer?: Element,
-
-  // Loads and parses source maps for function components
-  // and extracts hook "names" based on the variables the hook return values get assigned to.
-  // Not every DevTools build can load source maps, so this property is optional.
   fetchFileWithCaching?: ?FetchFileWithCaching,
-  // TODO (Webpack 5) Hopefully we can remove this prop after the Webpack 5 migration.
   hookNamesModuleLoaderFunction?: ?HookNamesModuleLoaderFunction,
 };
 
@@ -125,25 +107,24 @@   bridge,
   browserTheme = 'light',
   canViewElementSourceFunction,
-  componentsPortalContainer,
   defaultTab = 'components',
   enabledInspectedElementContextMenu = false,
-  fetchFileWithCaching,
-  hookNamesModuleLoaderFunction,
-  overrideTab,
-  profilerPortalContainer,
   showTabBar = false,
   store,
   warnIfLegacyBackendDetected = false,
   warnIfUnsupportedVersionDetected = false,
   viewAttributeSourceFunction,
-  viewElementSourceFunction,
   readOnly,
   hideSettings,
   hideToggleErrorAction,
   hideToggleSuspenseAction,
   hideLogAction,
   hideViewSourceAction,
+  overrideTab,
+  componentsPortalContainer,
+  profilerPortalContainer,
+  fetchFileWithCaching,
+  hookNamesModuleLoaderFunction,
 }: Props): React.Node {
   const [currentTab, setTab] = useLocalStorage<TabID>(
     LOCAL_STORAGE_DEFAULT_TAB_KEY,
@@ -151,7 +132,6 @@   );
 
   let tab = currentTab;
-
   if (overrideTab != null) {
     tab = overrideTab;
   }
@@ -196,9 +176,9 @@   const viewElementSource = useMemo(
     () => ({
       canViewElementSourceFunction: canViewElementSourceFunction || null,
-      viewElementSourceFunction: viewElementSourceFunction || null,
+      viewElementSourceFunction: viewAttributeSourceFunction || null,
     }),
-    [canViewElementSourceFunction, viewElementSourceFunction],
+    [canViewElementSourceFunction, viewAttributeSourceFunction],
   );
 
   const contextMenu = useMemo(
@@ -215,12 +195,10 @@     if (!showTabBar) {
       return;
     }
-
     const div = devToolsRef.current;
     if (div === null) {
       return;
     }
-
     const ownerWindow = div.ownerDocument.defaultView;
     const handleKeyDown = (event: KeyboardEvent) => {
       if (event.ctrlKey || event.metaKey) {
@@ -245,13 +223,9 @@   }, [showTabBar]);
 
   useLayoutEffect(() => {
+    // Shut the Bridge down synchronously (during unmount).
     return () => {
-      try {
-        // Shut the Bridge down synchronously (during unmount).
-        bridge.shutdown();
-      } catch (error) {
-        // Attempting to use a disconnected port.
-      }
+      bridge.shutdown();
     };
   }, [bridge]);
 
@@ -269,7 +243,8 @@                 browserTheme={browserTheme}
                 componentsPortalContainer={componentsPortalContainer}
                 profilerPortalContainer={profilerPortalContainer}>
-                <ViewElementSourceContext.Provider value={viewElementSource}>
+                <ViewElementSourceContext.Provider
+                  value={viewElementSource}>
                   <HookNamesModuleLoaderContext.Provider
                     value={hookNamesModuleLoaderFunction || null}>
                     <FetchFileWithCachingContext.Provider
@@ -324,10 +299,14 @@                     </FetchFileWithCachingContext.Provider>
                   </HookNamesModuleLoaderContext.Provider>
                 </ViewElementSourceContext.Provider>
+                <UnsupportedBridgeProtocolDialog />
+                {warnIfLegacyBackendDetected && (
+                  <WarnIfLegacyBackendDetected />
+                )}
+                {warnIfUnsupportedVersionDetected && (
+                  <UnsupportedVersionDialog />
+                )}
               </SettingsContextController>
-              <UnsupportedBridgeProtocolDialog />
-              {warnIfLegacyBackendDetected && <WarnIfLegacyBackendDetected />}
-              {warnIfUnsupportedVersionDetected && <UnsupportedVersionDialog />}
             </ModalDialogContextController>
           </ContextMenuContext.Provider>
         </OptionsContext.Provider>
