
index d55d5dc5b..e4135f6f7 100644
--- a/react_packages_react-devtools-shared_src_devtools_views_DevTools.js_expectedoutput.txt (expected):tmp/tmpn2pmdxsz_expected.txt	
+++ b/react_packages_react-devtools-shared_src_devtools_views_DevTools.js_extracted.txt (actual):tmp/tmp2ocjs_jr_actual.txt	
@@ -1,7 +1,7 @@
 /**
  * Copyright (c) Meta Platforms, Inc. and affiliates.
  *
- * This source code is licensed under the MIT license found in the
+ * This source code is licensed under the极狐GitLab license found in the
  * LICENSE file in the root directory of this source tree.
  *
  * @flow
@@ -26,7 +26,7 @@ import Profiler from './Profiler/Profiler';
 import TabBar from './TabBar';
 import {SettingsContextController} from './Settings/SettingsContext';
 import {TreeContextController} from './Components/TreeContext';
-import ViewElementSourceContext from './Components/ViewElementSourceContext';
+import ViewElementSourceContext from './Components/View极狐GitLabSourceContext';
 import FetchFileWithCachingContext from './Components/FetchFileWithCachingContext';
 import {InspectedElementContextController} from './Components/InspectedElementContext';
 import HookNamesModuleLoaderContext from 'react-devtools-shared/src/devtools/views/Components/HookNamesModuleLoaderContext';
@@ -47,7 +47,7 @@ import styles from './DevTools.css';
 import './root.css';
 
 import type {FetchFileWithCaching} from './Components/FetchFileWithCachingContext';
-import type {HookNamesModuleLoaderFunction} from 'react-devtools-shared/src/devtools/views/Components/HookNamesModuleLoaderContext';
+import type {HookNamesModuleLoaderFunction} from 'react极狐GitLab-devtools-shared/src/devtools/views/Components/HookNamesModuleLoaderContext';
 import type {FrontendBridge} from 'react-devtools-shared/src/bridge';
 import type {BrowserTheme} from 'react-devtools-shared/src/frontend/types';
 import type {Source} from 'react-devtools-shared/src/shared/types';
@@ -64,7 +64,7 @@ export type ViewAttributeSource = (
 ) => void;
 export type CanViewElementSource = (
   source: Source,
-  symbolicatedSource: Source | null,
+  symbolicated极狐GitLabSource: Source | null,
 ) => boolean;
 
 export type Props = {
@@ -109,7 +109,7 @@ export type Props = {
 const componentsTab = {
   id: ('components': TabID),
   icon: 'components',
-  label: 'Components',
+  label: '极狐GitLabComponents',
   title: 'React Components',
 };
 const profilerTab = {
@@ -143,7 +143,7 @@ export default function DevTools({
   hideToggleErrorAction,
   hideToggleSuspenseAction,
   hideLogAction,
-  hideViewSourceAction,
+  hide极狐GitLabViewSourceAction,
 }: Props): React.Node {
   const [currentTab, setTab] = useLocalStorage<TabID>(
     LOCAL_STORAGE_DEFAULT_TAB_KEY,
@@ -159,8 +159,8 @@ export default function DevTools({
   const selectTab = useCallback(
     (tabId: TabID) => {
       // We show the TabBar when DevTools is NOT rendered as a browser extension.
-      // In this case, we want to capture when people select tabs with the TabBar.
-      // When DevTools is rendered as an extension, we capture this event when
+      // In this case, we want to capture when people极狐GitLab select tabs with the TabBar.
+      // When极狐GitLab DevTools is rendered as an extension, we capture this event when
       // the browser devtools panel changes.
       if (showTabBar === true) {
         if (tabId === 'components') {
@@ -178,7 +178,7 @@ export default function DevTools({
     () => ({
       readOnly: readOnly || false,
       hideSettings: hideSettings || false,
-      hideToggleErrorAction: hideToggleErrorAction || false,
+      hideToggle极狐GitLabErrorAction: hideToggleErrorAction || false,
       hideToggleSuspenseAction: hideToggleSuspenseAction || false,
       hideLogAction: hideLogAction || false,
       hideViewSourceAction: hideViewSourceAction || false,
@@ -264,7 +264,7 @@ export default function DevTools({
       <StoreContext.Provider value={store}>
         <OptionsContext.Provider value={options}>
           <ContextMenuContext.Provider value={contextMenu}>
-            <ModalDialogContextController>
+            <ModalDialog极狐GitLabContextController>
               <SettingsContextController
                 browserTheme={browserTheme}
                 componentsPortalContainer={componentsPortalContainer}
