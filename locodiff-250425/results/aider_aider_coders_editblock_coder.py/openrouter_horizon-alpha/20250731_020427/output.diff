
index 42fc8b445..65e927b7c 100644
--- a/aider_aider_coders_editblock_coder.py_expectedoutput.txt (expected):tmp/tmpcsnv0o8d_expected.txt	
+++ b/aider_aider_coders_editblock_coder.py_extracted.txt (actual):tmp/tmpw8f1ye58_actual.txt	
@@ -88,6 +88,8 @@ class EditBlockCoder(Coder):
             full_path = self.abs_root_path(path)
             content = self.io.read_text(full_path)
 
+            did_you_mean = find_similar_lines(original, content)
+
             res += f"""
 ## SearchReplaceNoExactMatch: This SEARCH block failed to exactly match lines in {path}
 <<<<<<< SEARCH
@@ -95,7 +97,6 @@ class EditBlockCoder(Coder):
 {updated}>>>>>>> REPLACE
 
 """
-            did_you_mean = find_similar_lines(original, content)
             if did_you_mean:
                 res += f"""Did you mean to match some of these actual lines from {path}?
 
@@ -180,7 +181,6 @@ def replace_most_similar_chunk(whole, part, replace):
     except ValueError:
         pass
 
-    return
     # Try fuzzy matching
     res = replace_closest_edit_distance(whole_lines, part, part_lines, replace_lines)
     if res:
@@ -351,7 +351,7 @@ def strip_quoted_wrapping(res, fname=None, fence=DEFAULT_FENCE):
     if fname and res[0].strip().endswith(Path(fname).name):
         res = res[1:]
 
-    if res[0].startswith(fence[0]) and res[-1].startswith(fence[1]):
+    if res and fence and len(res) >= 2 and res[0].startswith(fence[0]) and res[-1].startswith(fence[1]):
         res = res[1:-1]
 
     res = "\n".join(res)
@@ -379,6 +379,8 @@ def do_replace(fname, content, before_text, after_text, fence=None):
         new_content = content + after_text
     else:
         new_content = replace_most_similar_chunk(content, before_text, after_text)
+        if not new_content:
+            return
 
     return new_content
 
@@ -395,7 +397,6 @@ separators = "|".join([HEAD, DIVIDER, UPDATED])
 
 split_re = re.compile(r"^((?:" + separators + r")[ ]*\n)", re.MULTILINE | re.DOTALL)
 
-
 missing_filename_err = (
     "Bad/missing filename. The filename must be alone on the line before the opening fence"
     " {fence[0]}"
@@ -480,7 +481,6 @@ def find_original_update_blocks(content, fence=DEFAULT_FENCE, valid_fnames=None)
                 i += 1
             if i < len(lines) and lines[i].strip().startswith("```"):
                 i += 1  # Skip the closing ```
-
             yield None, "".join(shell_content)
             continue
 
