--- aider_aider_coders_editblock_coder.py_expectedoutput.txt (expected)+++ aider_aider_coders_editblock_coder.py_extracted.txt (actual)@@ -77,7 +77,7 @@             return updated_edits
 
         if not failed:
-            return
+            return passed
 
         blocks = "block" if len(failed) == 1 else "blocks"
 
@@ -95,16 +95,6 @@ {updated}>>>>>>> REPLACE
 
 """
-            did_you_mean = find_similar_lines(original, content)
-            if did_you_mean:
-                res += f"""Did you mean to match some of these actual lines from {path}?
-
-{self.fence[0]}
-{did_you_mean}
-{self.fence[1]}
-
-"""
-
             if updated in content and updated:
                 res += f"""Are you sure you need this SEARCH/REPLACE block?
 The REPLACE lines are already in {path}!
@@ -181,10 +171,6 @@         pass
 
     return
-    # Try fuzzy matching
-    res = replace_closest_edit_distance(whole_lines, part, part_lines, replace_lines)
-    if res:
-        return res
 
 
 def try_dotdotdots(whole, part, replace):
@@ -254,6 +240,11 @@         num_leading = min(leading)
         part_lines = [p[num_leading:] if p.strip() else p for p in part_lines]
         replace_lines = [p[num_leading:] if p.strip() else p for p in replace_lines]
+
+    # TODO: this logic needs to be fixed
+    # if the max outdent still leaves space
+    if all((not pline or pline[0].isspace()) for pline in part_lines):
+        return
 
     # can we find an exact match not including the leading whitespace
     num_part_lines = len(part_lines)
@@ -452,16 +443,16 @@         shell_starts = [
             "```bash",
             "```sh",
-            "```shell",
+            "```shell",  # Unix-like shells
             "```cmd",
-            "```batch",
+            "```batch",  # Windows Command Prompt
             "```powershell",
-            "```ps1",
-            "```zsh",
-            "```fish",
-            "```ksh",
+            "```ps1",  # Windows PowerShell
+            "```zsh",  # Z shell
+            "```fish",  # Friendly Interactive Shell
+            "```ksh",  # Korn Shell
             "```csh",
-            "```tcsh",
+            "```tcsh",  # C Shell and TENEX C Shell
         ]
 
         # Check if the next line or the one after that is an editblock
