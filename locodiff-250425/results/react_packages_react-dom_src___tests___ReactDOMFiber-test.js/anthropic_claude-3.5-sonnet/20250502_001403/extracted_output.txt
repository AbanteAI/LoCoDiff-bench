const root = ReactDOMClient.createRoot(container);
await act(() => {
  root.render(<Component />); 
});
```

2. Key test areas include:
- Rendering different value types (strings, numbers, bigints)
- Portal functionality and event handling 
- Fragment components
- SVG/HTML namespace handling
- Legacy context API (with deprecation warnings)
- Event listener validation and handling
- Selection restoration across windows

3. The test setup includes:
```js there 
let React;
let ReactDOM;
let PropTypes;
let ReactDOMClient;
let Scheduler;
let assertConsoleErrorDev;
let assertLog;
```

4. Tests handle async rendering using `act()`:
```js
await act(async () => {
  root.render(<Component />);
});
```

5. Error handling has evolved to use reportError and not rethrow directly from React

6. Tests validate console warnings using assertConsoleErrorDev eg:
```js
assertConsoleErrorDev([
  'Expected `onClick` listener to be a function...'
]);