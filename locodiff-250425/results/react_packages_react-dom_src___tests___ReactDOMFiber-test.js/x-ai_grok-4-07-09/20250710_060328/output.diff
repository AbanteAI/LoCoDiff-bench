
index 1236bbe37..f90200045 100644
--- a/react_packages_react-dom_src___tests___ReactDOMFiber-test.js_expectedoutput.txt (expected):tmp/tmp1wut4gju_expected.txt	
+++ b/react_packages_react-dom_src___tests___ReactDOMFiber-test.js_extracted.txt (actual):tmp/tmpk9q0sdru_actual.txt	
@@ -41,7 +41,6 @@ describe('ReactDOMFiber', () => {
     PropTypes = require('prop-types');
     ReactDOMClient = require('react-dom/client');
     Scheduler = require('scheduler');
-    act = require('internal-test-utils').act;
     ({assertConsoleErrorDev, assertLog} = require('internal-test-utils'));
 
     container = document.createElement('div');
@@ -702,7 +701,7 @@ describe('ReactDOMFiber', () => {
           {usePortal(
             <div {...expectHTML}>
               <math {...expectMath}>
-                <BrokenRender />)
+                <BrokenRender />
               </math>
             </div>,
           )}
@@ -717,7 +716,7 @@ describe('ReactDOMFiber', () => {
     const portalContainer = document.createElement('div');
 
     class Component extends React.Component {
-      static contextTypes = {
+      static contextType = {
         foo: PropTypes.string.isRequired,
       };
 
@@ -749,8 +748,9 @@ describe('ReactDOMFiber', () => {
       'Parent uses the legacy childContextTypes API which will soon be removed. ' +
         'Use React.createContext() instead. (https://react.dev/link/legacy-context)\n' +
         '    in Parent (at **)',
-      'Component uses the legacy contextTypes API which will soon be removed. ' +
+      'Component uses the legacy contextType API which will soon be removed. ' +
         'Use React.createContext() with static contextType instead. (https://react.dev/link/legacy-context)\n' +
+        '    in Component (at **)\n' +
         '    in Parent (at **)',
     ]);
     expect(container.innerHTML).toBe('');
@@ -1021,7 +1021,7 @@ describe('ReactDOMFiber', () => {
     class Click extends React.Component {
       constructor() {
         super();
-        node.click();
+        click();
       }
       render() {
         return null;
