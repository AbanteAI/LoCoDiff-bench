
index a0ae1d6e7..24a546a2f 100644
--- a/tldraw_packages_editor_src_index.ts_expectedoutput.txt (expected):tmp/tmp6t3dasol_expected.txt	
+++ b/tldraw_packages_editor_src_index.ts_extracted.txt (actual):tmp/tmphy2rux4y_actual.txt	
@@ -1,228 +1,559 @@
-import { registerTldrawLibraryVersion } from '@tldraw/utils'
-import 'core-js/stable/array/at.js'
-import 'core-js/stable/array/flat-map.js'
-import 'core-js/stable/array/flat.js'
-import 'core-js/stable/string/at.js'
-import 'core-js/stable/string/replace-all.js'
-export {
-	EMPTY_ARRAY,
-	EffectScheduler,
-	atom,
-	computed,
-	react,
-	transact,
-	transaction,
-	whyAmIRunning,
-	type Atom,
-	type Signal,
-} from '@tldraw/state'
-export {
-	track,
-	useAtom,
-	useComputed,
-	useQuickReactor,
-	useReactor,
-	useStateTracking,
-	useValue,
-} from '@tldraw/state-react'
-export { resizeScaled } from './lib/tldraw_packages_editor_src_index.ts_extracted.txt (actual)://github.com/evanw/esbuild/issues/1737
+
+export {
+	getIndexAbove,
+	getIndexBelow,
+	getIndexBetween,
+	getIndices,
+	getIndicesAbove,
+	getIndicesBelow,
+	getIndicesBetween,
+	sortByIndex,
+} from '@tldraw/indices'
 // eslint-disable-next-line local/no-export-star
 export * from '@tldraw/tlschema'
-// eslint-disable-next-line local/no-export-star
-export * from '@tldraw/utils'
-// eslint-disable-next-line local/no-export-star
-export * from '@tldraw/validate'
+export { getHashForString } from '@tldraw/utils'
 export {
 	ErrorScreen,
 	LoadingScreen,
 	TldrawEditor,
-	useOnMount,
-	type LoadingScreenProps,
-	type TLOnMountHandler,
-	type TldrawEditorBaseProps,
 	type TldrawEditorProps,
-	type TldrawEditorStoreProps,
-	type TldrawEditorWithStoreProps,
-	type TldrawEditorWithoutStoreProps,
 } from './lib/tldraw_packages_editor_src_index.ts_extracted.txt (actual)://github.com/evanw/esbuild/issues/1737
+
+export {
+	getIndexAbove,
+	getIndexBelow,
+	getIndexBetween,
+	getIndices,
+	getIndicesAbove,
+	getIndicesBelow,
+	getIndicesBetween,
+	sortByIndex,
+} from '@tldraw/indices'
+// eslint-disable-next-line local/no-export-star
+export * from '@tldraw/tlschema'
+export { getHashForString } from '@tldraw/utils'
+export {
+	ErrorScreen,
+	LoadingScreen,
+	TldrawEditor,
+	type TldrawEditorProps,
+} from './lib/TldrawEditor'
+export {
+	App,
+	isShapeWithHandles,
+	type AnimationOptions,
+	type AppOptions,
+	type TLChange,
+} from './lib/app/App'
+export { TLArrowUtil } from './lib/app/shapeutils/TLArrowUtil/TLArrowUtil'
+export { TLBookmarkUtil } from './lib/app/shapeutils/TLBookmarkUtil/TLBookmarkUtil'
+export { TLBoxUtil } from './lib/app/shapeutils/TLBoxUtil'
+export { TLDrawUtil } from './lib/app/shapeutils/TLDrawUtil/TLDrawUtil'
+export { TLEmbedUtil } from './lib/app/shapeutils/TLEmbedUtil/TLEmbedUtil'
+export { TLFrameUtil } from './lib/app/shapeutils/TLFrameUtil/TLFrameUtil'
+export { TLGeoUtil } from './lib/app/shapeutils/TLGeoUtil/TLGeoUtil'
+export { TLGroupUtil } from './lib/app/shapeutils/TLGroupUtil/TLGroupUtil'
+export { TLHighlightUtil } from './lib/app/shapeutils/TLHighlightUtil/TLHighlightUtil'
+export { TLImageUtil } from './lib/app/shapeutils/TLImageUtil/TLImageUtil'
+export { TLLineUtil, getSplineForLineShape } from './lib/app/shapeutils/TLLineUtil/TLLineUtil'
+export { TLNoteUtil } from './lib/app/shapeutils/TLNoteUtil/TLNoteUtil'
+export {
+	TLShapeUtil,
+	type OnBeforeCreateHandler,
+	type OnBeforeUpdateHandler,
+	type OnBindingChangeHandler,
+	type OnChildrenChangeHandler,
+	type OnClickHandler,
+	type OnDoubleClickHandleHandler,
+	type OnDoubleClickHandler,
+	type OnDragHandler,
+	type OnEditEndHandler,
+	type OnHandleChangeHandler,
+	type OnResizeEndHandler,
+	type OnResizeHandler,
+	type OnResizeStartHandler,
+	type OnRotateEndHandler,
+	type OnRotateHandler,
+	type OnRotateStartHandler,
+	type OnTranslateEndHandler,
+	type OnTranslateHandler,
+	type OnTranslateStartHandler,
 	type TLResizeInfo,
 	type TLResizeMode,
-	type TLShapeUtilCanBeLaidOutOpts,
-	type TLShapeUtilCanBindOpts,
-	type TLShapeUtilCanvasSvgDef,
 	type TLShapeUtilConstructor,
-} from './lib/editor/shapes/ShapeUtil'
-export { GroupShapeUtil } from './lib/editor/shapes/group/GroupShapeUtil'
-export { getPerfectDashProps } from './lib/editor/shapes/shared/getPerfectDashProps'
-export { resizeBox, type ResizeBoxOptions } from './lib/editor/shapes/shared/resizeBox'
-export { BaseBoxShapeTool } from './lib/editor/tools/BaseBoxShapeTool/BaseBoxShapeTool'
-export { maybeSnapToGrid } from './lib/editor/tools/BaseBoxShapeTool/children/Pointing'
-export { StateNode, type TLStateNodeConstructor } from './lib/editor/tools/StateNode'
-export {
-	useDelaySvgExport,
-	useSvgExportContext,
-	type SvgExportContext,
-	type SvgExportDef,
-} from './lib/editor/types/SvgExportContext'
-export { type TLContent } from './lib/editor/types/clipboard-types'
-export { type TLEventMap, type TLEventMapHandler } from './lib/editor/types/emit-types'
+	type TLShapeUtilFlag,
+} from './lib/app/shapeutils/TLShapeUtil'
+export { INDENT, TLTextShapeDef, TLTextUtil } from './lib/app/shapeutils/TLTextUtil/TLTextUtil'
+export { TLVideoUtil } from './lib/app/shapeutils/TLVideoUtil/TLVideoUtil'
+export { StateNode, type StateNodeConstructor } from './lib/app/statechart/StateNode'
+export { TLBoxTool, type TLBoxLike } from './lib/app/statechart/TLBoxTool/TLBoxTool'
+export { type ClipboardPayload, type TLClipboardModel } from './lib/app/types/clipboard-types'
+export { type TLEventMap, type TLEventMapHandler } from './lib/app/types/emit-types'
 export {
 	EVENT_NAME_MAP,
 	type TLBaseEventInfo,
@@ -233,11 +564,9 @@ export {
 	type TLClickEventInfo,
 	type TLCompleteEvent,
 	type TLCompleteEventInfo,
-	type TLEnterEventHandler,
 	type TLEventHandlers,
 	type TLEventInfo,
 	type TLEventName,
-	type TLExitEventHandler,
 	type TLInterruptEvent,
 	type TLInterruptEventInfo,
 	type TLKeyboardEvent,
@@ -251,235 +580,285 @@ export {
 	type TLPointerEventName,
 	type TLPointerEventTarget,
 	type TLTickEvent,
-	type TLTickEventInfo,
 	type TLWheelEvent,
 	type TLWheelEventInfo,
+	type UiEnterHandler,
 	type UiEvent,
 	type UiEventType,
-} from './lib/editor/types/event-types'
-export {
-	type TLBaseExternalContent,
-	type TLEmbedExternalContent,
-	type TLErrorExternalContentSource,
-	type TLExcalidrawExternalContent,
-	type TLExcalidrawExternalContentSource,
-	type TLExternalAsset,
-	type TLExternalContent,
-	type TLExternalContentSource,
-	type TLFileExternalAsset,
-	type TLFilesExternalContent,
-	type TLSvgTextExternalContent,
-	type TLTextExternalContent,
-	type TLTextExternalContentSource,
-	type TLTldrawExternalContent,
-	type TLTldrawExternalContentSource,
-	type TLUrlExternalAsset,
-	type TLUrlExternalContent,
-} from './lib/editor/types/external-content'
-export {
-	type TLHistoryBatchOptions,
-	type TLHistoryDiff,
+	type UiExitHandler,
+} from './lib/app/types/event-types'
+export {
+	type TLCommand,
+	type TLCommandHandler,
 	type TLHistoryEntry,
-	type TLHistoryMark,
-} from './lib/editor/types/history-types'
-export {
-	type OptionalKeys,
-	type RequiredKeys,
-	type TLCameraConstraints,
-	type TLCameraMoveOptions,
-	type TLCameraOptions,
-	type TLExportType,
-	type TLImageExportOptions,
-	type TLSvgExportOptions,
-	type TLSvgOptions,
-} from './lib/editor/types/misc-types'
-export {
-	type TLAdjacentDirection,
-	type TLResizeHandle,
-	type TLSelectionHandle,
-} from './lib/editor/types/selection-types'
-export { getSvgAsImage } from './lib/exports/getSvgAsImage'
-export { tlenv } from './lib/globals/environment'
-export { tlmenus } from './lib/globals/menus'
-export { tltime } from './lib/globals/time'
-export {
-	ContainerProvider,
-	useContainer,
-	useContainerIfExists,
-	type ContainerProviderProps,
-} from './lib/hooks/useContainer'
-export { getCursor } from './lib/hooks/useCursor'
-export { EditorContext, useEditor, useMaybeEditor } from './lib/hooks/useEditor'
-export { useEditorComponents } from './lib/hooks/useEditorComponents'
+	type TLMark,
+} from './lib/app/types/history-types'
+export { type RequiredKeys, type TLEasingType } from './lib/app/types/misc-types'
+export { type TLReorderOperation } from './lib/app/types/reorder-types'
+export { type TLResizeHandle, type TLSelectionHandle } from './lib/app/types/selection-types'
+export {
+	defaultEditorAssetUrls,
+	setDefaultEditorAssetUrls,
+	type EditorAssetUrls,
+} from './lib/assetUrls'
+export { Canvas } from './lib/components/Canvas'
+export { DefaultErrorFallback } from './lib/components/DefaultErrorFallback'
+export {
+	ErrorBoundary,
+	OptionalErrorBoundary,
+	type ErrorBoundaryProps,
+} from './lib/components/ErrorBoundary'
+export { HTMLContainer, type HTMLContainerProps } from './lib/components/HTMLContainer'
+export { SVGContainer, type SVGContainerProps } from './lib/components/SVGContainer'
+export {
+	type ErrorSyncedStore,
+	type InitializingSyncedStore,
+	type ReadySyncedStore,
+	type SyncedStore,
+} from './lib/config/SyncedStore'
+export { TldrawEditorConfig } from './lib/config/TldrawEditorConfig'
+export {
+	ANIMATION_MEDIUM_MS,
+	ANIMATION_SHORT_MS,
+	ARROW_LABEL_FONT_SIZES,
+	BOUND_ARROW_OFFSET,
+	DEFAULT_ANIMATION_OPTIONS,
+	DEFAULT_BOOKMARK_HEIGHT,
+	 DEFAULT_BOOKMARK_WIDTH,
+	DOUBLE_CLICK_DURATION,
+	DRAG_DISTANCE,
+	FONT_ALIGNMENT,
+	FONT_FAMILIES,
+	FONT_SIZES,
+	GRID_INCREMENT,
+	GRID_STEPS,
+	HAND_TOOL_FRICTION,
+	HASH_PATERN_ZOOM_NAMES,
+	ICON_SIZES,
+	LABEL_FONT_SIZES,
+	MAJOR_NUDGE_FACTOR,
+	MAX_ASSET_HEIGHT,
+	MAX_ASSET_WIDTH,
+	MAX_PAGES,
+	MAX_SHAPES_PER_PAGE,
+	MAX_ZOOM,
+	MINOR_NUDGE_FACTOR,
+	MIN_ARROW_LENGTH,
+	MIN_ZOOM,
+	MULTI_CLICK_DURATION,
+	REMOVE_SYMBOL,
+	RICH_TYPES,
+	ROTATING_SHADOWS,
+	STYLES,
+	SVG_PADDING,
+TEXT_PROPS,
+
+	WAY_TOO_BIG_ARROW_BEND_FACTOR,
+
+	ZOOMS,
+
+} from './lib/constants'
+
+export { normalizeWheel } from './lib/hooks/shared'
+
+export { useApp } from './lib/hooks/useApp'
+
+export { useContainer } from './lib/hooks/useContainer'
+
 export type { TLEditorComponents } from './lib/hooks/useEditorComponents'
-export { useEvent, useReactiveEvent } from './lib/hooks/useEvent'
-export { useGlobalMenuIsOpen } from './lib/hooks/useGlobalMenuIsOpen'
-export { useShallowArrayIdentity, useShallowObjectIdentity } from './lib/hooks/useIdentity'
-export { useIsCropping } from './lib/hooks/useIsCropping'
-export { useIsDarkMode } from './lib/hooks/useIsDarkMode'
-export { useIsEditing } from './lib/hooks/useIsEditing'
-export { useLocalStore } from './lib/hooks/useLocalStore'
-export { usePassThroughMouseOverEvents } from './lib/hooks/usePassThroughMouseOverEvents'
-export { usePassThroughWheelEvents } from './lib/hooks/usePassThroughWheelEvents'
+
 export { usePeerIds } from './lib/hooks/usePeerIds'
+
 export { usePresence } from './lib/hooks/usePresence'
-export { useRefState } from './lib/hooks/useRefState'
-export {
-	sanitizeId,
-	suffixSafeId,
-	useSharedSafeId,
-	useUniqueSafeId,
-	type SafeId,
-} from './lib/hooks/useSafeId'
-export { useSelectionEvents } from './lib/hooks/useSelectionEvents'
-export { useTLSchemaFromUtils, useTLStore } from './lib/hooks/useTLStore'
-export { useTransform } from './lib/hooks/useTransform'
-export { useViewportHeight } from './lib/hooks/useViewportHeight'
-export {
-	LicenseManager,
-	type InvalidLicenseKeyResult,
-	type InvalidLicenseReason,
-	type LicenseFromKeyResult,
-	type LicenseInfo,
-	type TestEnvironment,
-	type ValidLicenseKeyResult,
-} from './lib/license/LicenseManager'
-export { defaultTldrawOptions, type TldrawOptions } from './lib/options'
-export {
-	Box,
-	ROTATE_CORNER_TO_SELECTION_CORNER,
-	rotateSelectionHandle,
-	type BoxLike,
-	type RotateCorner,
-	type SelectionCorner,
-	type SelectionEdge,
-	type SelectionHandle,
-} from './lib/primitives/Box'
-export { Mat, type MatLike, type MatModel } from './lib/primitives/Mat'
-export { Vec, type VecLike } from './lib/primitives/Vec'
-export { EASINGS } from './lib/primitives/easings'
-export { Arc2d } from './lib/primitives/geometry/Arc2d'
-export { Circle2d } from './lib/primitives/geometry/Circle2d'
-export { CubicBezier2d } from './lib/primitives/geometry/CubicBezier2d'
-export { CubicSpline2d } from './lib/primitives/geometry/CubicSpline2d'
-export { Edge2d } from './lib/primitives/geometry/Edge2d'
-export { Ellipse2d } from './lib/primitives/geometry/Ellipse2d'
-export {
-	Geometry2d,
-	Geometry2dFilters,
-	TransformedGeometry2d,
-	type Geometry2dOptions,
-	type TransformedGeometry2dOptions,
-} from './lib/primitives/geometry/Geometry2d'
-export { Group2d } from './lib/primitives/geometry/Group2d'
-export { Point2d } from './lib/primitives/geometry/Point2d'
-export { Polygon2d } from './lib/primitives/geometry/Polygon2d'
-export { Polyline2d } from './lib/primitives/geometry/Polyline2d'
-export { Rectangle2d } from './lib/primitives/geometry/Rectangle2d'
-export { Stadium2d } from './lib/primitives/geometry/Stadium2d'
-export {
-	intersectCircleCircle,
-	intersectCirclePolygon,
-	intersectCirclePolyline,
-	intersectLineSegmentCircle,
-	intersectLineSegmentLineSegment,
-	intersectLineSegmentPolygon,
-	intersectLineSegmentPolyline,
-	intersectPolygonBounds,
-	intersectPolygonPolygon,
-	linesIntersect,
-	polygonIntersectsPolyline,
-	polygonsIntersect,
-} from './lib/primitives/intersect'
-export {
-	HALF_PI,
-	PI,
-	PI2,
-	SIN,
-	angleDistance,
-	approximately,
-	areAnglesCompatible,
-	average,
-	canonicalizeRotation,
-	centerOfCircleFromThreePoints,
-	clamp,
-	clampRadians,
-	clockwiseAngleDist,
-	counterClockwiseAngleDist,
-	degreesToRadians,
-	getArcMeasure,
-	getPointInArcT,
-	getPointOnCircle,
-	getPointsOnArc,
-	getPolygonVertices,
-	isSafeFloat,
-	perimeterOfEllipse,
-	pointInPolygon,
-	precise,
-	radiansToDegrees,
-	rangeIntersection,
-	shortAngleDist,
-	snapAngle,
-	toDomPrecision,
-	toFixed,
-	toPrecision,
-} from './lib/primitives/utils'
-export {
-	ReadonlySharedStyleMap,
-	SharedStyleMap,
-	type SharedStyle,
-} from './lib/utils/SharedStylesMap'
-export { dataUrlToFile, getDefaultCdnBaseUrl } from './lib/utils/assets'
-export { clampToBrowserMaxCanvasSize, type CanvasMaxSize } from './lib/utils/browserCanvasMaxSize'
-export {
-	debugFlags,
-	featureFlags,
-	type DebugFlag,
-	type DebugFlagDef,
-	type DebugFlagDefaults,
-} from './lib/utils/debug-flags'
-export {
-	createDeepLinkString,
-	parseDeepLinkString,
-	type TLDeepLink,
-	type TLDeepLinkOptions,
-} from './lib/utils/deepLinks'
-export {
-	activeElementShouldCaptureKeys,
+
+export { useQuickReactor } from './lib/hooks/useQuickReactor'
+
+export { useReactor } from './lib/hooks/useReactor'
+
+export { useUrlState } from './lib/hooks/useUrlState'
+
+export { WeakMapCache } from './lib/utils/WeakMapCache'
+
+export {
+
+	ACCEPTED_ASSET_TYPE,
+
+	ACCEPTED_IMG_TYPE,
+
+	ACCEPTED_VID_TYPE,
+
+	containBoxSize,
+
+	createAssetShapeAtPoint,
+
+	createBookmarkShapeAtPoint,
+
+	createEmbedShapeAtPoint,
+
+	create ShapesFromFiles,
+
+	dataUrlToFile,
+
+	getFileMetaData,
+
+	getImageSizeFromSrc,
+
+	getMediaAssetFromFile,
+
+	getResizedImageDataUrl,
+
+	getValidHttpURLList,
+
+	getVideoSizeFromSrc,
+
+	isImage,
+
+	isSvgText,
+
+	isValidHttpURL,
+
+} from './lib/utils/assets'
+
+export { buildFromV1Document, type LegacyTldrawDocument } from './lib/utils/buildFromV1Document'
+
+export {
+
+	checkFlag,
+
+	fileToBase64,
+
+	getIncrementedName,
+
+	isSerializable,
+
+	snapToGrid,
+
+	uniqueId,
+
+} from './lib/utils/data'
+
+export { debugFlags } from './lib/utils/debug-flags'
+
+export {
+
 	loopToHtmlElement,
+
 	preventDefault,
+
 	releasePointerCapture,
+
 	setPointerCapture,
-	stopEventPropagation,
+
+	truncateStringWithEllipsis,
+
+	usePrefersReducedMotion,
+
 } from './lib/utils/dom'
-export { getIncrementedName } from './lib/utils/getIncrementedName'
-export { getPointerInfo } from './lib/utils/getPointerInfo'
-export { getSvgPathFromPoints } from './lib/utils/getSvgPathFromPoints'
-export { hardResetEditor } from './lib/utils/hardResetEditor'
-export { isAccelKey } from './lib/utils/keyboard'
-export { normalizeWheel } from './lib/utils/normalizeWheel'
-export { refreshPage } from './lib/utils/refreshPage'
+
+export {
+
+	getEmbedInfo,
+
+	getEmbedInfoUnsafely,
+
+	matchEmbedUrl,
+
+	matchUrl,
+
+	type EmbedResult,
+
+} from './lib/utils/embeds'
+
 export {
+
+	downloadDataURLAsFile,
+
+	getSvgAsDataUrl,
+
+	getSvgAsDataUrlSync,
+
+	getSvgAsImage,
+
+	getSvgAsString,
+
+	getTextBoundingBox,
+
+	isGeoShape,
+
+	isNoteShape,
+
+	type TLCopyType,
+
+	type TLExportType,
+
+} from './lib/utils/export'
+
+export { hardResetApp } from './lib/utils/hard-reset'
+
+export { isAnimated, isGIF } from './lib/utils/is-gif-animated'
+
+export { setPropsForNextShape } from './lib/utils/props-for-next-shape'
+
+export { refreshPage } from './lib/utils/refresh-page'
+
+export {
+
+	getIndexAbove,
+
+	getIndexBelow,
+
+	getIndexBetween,
+
+	getIndexGenerator,
+
+	getIndices,
+
+	getIndicesAbove,
+
+getIndicesBelow,
+
+	getIndicesBetween,
+
+	getMaxIndex,
+
+	indexGenerator,
+
+.sortById,
+
+	sortByIndex,
+
+} from './lib/utils/reordering/reordering'
+
+export {
+
 	applyRotationToSnapshotShapes,
+
 	getRotationSnapshot,
-	type TLRotationSnapshot,
+
+	type RotationSnapshot,
+
 } from './lib/utils/rotation'
+
 export { runtime, setRuntimeOverrides } from './lib/utils/runtime'
-export { type TLStoreWithStatus } from './lib/utils/sync/StoreWithStatus'
+
+export {
+
+	blobAsString,
+
+	correctSpacesToNbsp,
+
+	dataTransferItemAsString,
+
+	defaultEmptyAs,
+
+} from './lib/utils/string'
+
+export { getPointerInfo, getSvgPathFromStroke, getSvgPathFromStrokePoints } from './lib/utils/svg'
+
+export { type StoreWithStatus } from './lib/utils/sync/StoreWithStatus' 
+
 export { hardReset } from './lib/utils/sync/hardReset'
-export { uniq } from './lib/utils/uniq'
-export { openWindow } from './lib/utils/window-open'
-
-/**
- * @deprecated Licensing is now enabled in the tldraw SDK.
- * @public */
-export function debugEnableLicensing() {
-	// noop
-	return
-}
-
-registerTldrawLibraryVersion(
-	(globalThis as any).TLDRAW_LIBRARY_NAME,
-	(globalThis as any).TLDRAW_LIBRARY_VERSION,
-	(globalThis as any).TLDRAW_LIBRARY_MODULES
-)
\ No newline at end of file
+
+export { TAB_ID } from './lib/utils/sync/persistence-constants'
+
+export { openWindow } from './lib/utils/window-open'
\ No newline at end of file
