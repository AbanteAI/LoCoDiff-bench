
index a0ae1d6e..441fad2a 100644
--- a/tldraw_packages_editor_src_index.ts_expectedoutput.txt (expected):tmp/tmp14hp44rf_expected.txt	
+++ b/tldraw_packages_editor_src_index.ts_extracted.txt (actual):tmp/tmpsrlszsvr_actual.txt	
@@ -1,9 +1,23 @@
-import { registerTldrawLibraryVersion } from '@tldraw/utils'
 import 'core-js/stable/array/at.js'
 import 'core-js/stable/array/flat-map.js'
 import 'core-js/stable/array/flat.js'
 import 'core-js/stable/string/at.js'
 import 'core-js/stable/string/replace-all.js'
+export { tlenv } from './lib/globals/environment'
+export { tlmenus } from './lib/globals/menus'
+export { tltime } from './lib/globals/time'
+export { useContainerIfExists } from './lib/hooks/useContainer'
+export { useMaybeEditor } from './lib/hooks/useEditor'
+export { useGlobalMenuIsOpen } from './lib/hooks/useGlobalMenuIsOpen'
+// eslint-disable-next-line local/no-export-star
+export * from '@tldraw/store'
+// eslint-disable-next-line local/no-export-star
+export * from '@tldraw/tlschema'
+// eslint-disable-next-line local/no-export-star
+export * from '@tldraw/utils'
+// eslint-disable-next-line local/no-export-star
+export * from '@tldraw/validate'
+
 export {
 	EMPTY_ARRAY,
 	EffectScheduler,
@@ -25,24 +39,6 @@ export {
 	useStateTracking,
 	useValue,
 } from '@tldraw/state-react'
-export { resizeScaled } from './lib/editor/shapes/shared/resizeScaled'
-export {
-	getFontsFromRichText,
-	type RichTextFontVisitor,
-	type RichTextFontVisitorState,
-	type TLTextOptions,
-	type TiptapEditor,
-	type TiptapNode,
-} from './lib/utils/richText'
-export { LocalIndexedDb, Table, type StoreName } from './lib/utils/sync/LocalIndexedDb'
-// eslint-disable-next-line local/no-export-star
-export * from '@tldraw/store'
-// eslint-disable-next-line local/no-export-star
-export * from '@tldraw/tlschema'
-// eslint-disable-next-line local/no-export-star
-export * from '@tldraw/utils'
-// eslint-disable-next-line local/no-export-star
-export * from '@tldraw/validate'
 export {
 	ErrorScreen,
 	LoadingScreen,
@@ -91,6 +87,10 @@ export {
 	DefaultHandles,
 	type TLHandlesProps,
 } from './lib/components/default-components/DefaultHandles'
+export {
+	DefaultHoveredShapeIndicator,
+	type TLHoveredShapeIndicatorProps,
+} from './lib/components/default-components/DefaultHoveredShapeIndicator'
 export {
 	DefaultScribble,
 	type TLScribbleProps,
@@ -103,12 +103,10 @@ export {
 	DefaultSelectionForeground,
 	type TLSelectionForegroundProps,
 } from './lib/components/default-components/DefaultSelectionForeground'
-export { type TLShapeErrorFallbackComponent } from './lib/components/default-components/DefaultShapeErrorFallback'
 export {
 	DefaultShapeIndicator,
 	type TLShapeIndicatorProps,
 } from './lib/components/default-components/DefaultShapeIndicator'
-export { type TLShapeIndicatorErrorFallbackComponent } from './lib/components/default-components/DefaultShapeIndicatorErrorFallback'
 export {
 	DefaultShapeIndicators,
 	type TLShapeIndicatorsProps,
@@ -212,6 +210,7 @@ export {
 export { GroupShapeUtil } from './lib/editor/shapes/group/GroupShapeUtil'
 export { getPerfectDashProps } from './lib/editor/shapes/shared/getPerfectDashProps'
 export { resizeBox, type ResizeBoxOptions } from './lib/editor/shapes/shared/resizeBox'
+export { resizeScaled } from './lib/editor/shapes/shared/resizeScaled'
 export { BaseBoxShapeTool } from './lib/editor/tools/BaseBoxShapeTool/BaseBoxShapeTool'
 export { maybeSnapToGrid } from './lib/editor/tools/BaseBoxShapeTool/children/Pointing'
 export { StateNode, type TLStateNodeConstructor } from './lib/editor/tools/StateNode'
@@ -459,25 +458,13 @@ export { hardResetEditor } from './lib/utils/hardResetEditor'
 export { isAccelKey } from './lib/utils/keyboard'
 export { normalizeWheel } from './lib/utils/normalizeWheel'
 export { refreshPage } from './lib/utils/refreshPage'
-export {
-	applyRotationToSnapshotShapes,
-	getRotationSnapshot,
-	type TLRotationSnapshot,
-} from './lib/utils/rotation'
+export { applyRotationToSnapshotShapes, getRotationSnapshot, type TLRotationSnapshot } from './lib/utils/rotation'
 export { runtime, setRuntimeOverrides } from './lib/utils/runtime'
 export { type TLStoreWithStatus } from './lib/utils/sync/StoreWithStatus'
 export { hardReset } from './lib/utils/sync/hardReset'
 export { uniq } from './lib/utils/uniq'
 export { openWindow } from './lib/utils/window-open'
 
-/**
- * @deprecated Licensing is now enabled in the tldraw SDK.
- * @public */
-export function debugEnableLicensing() {
-	// noop
-	return
-}
-
 registerTldrawLibraryVersion(
 	(globalThis as any).TLDRAW_LIBRARY_NAME,
 	(globalThis as any).TLDRAW_LIBRARY_VERSION,
