
index a0ae1d6e7..b62807b4a 100644
--- a/tldraw_packages_editor_src_index.ts_expectedoutput.txt (expected):tmp/tmpvuh14csc_expected.txt	
+++ b/tldraw_packages_editor_src_index.ts_extracted.txt (actual):tmp/tmpo5vh5nk1_actual.txt	
@@ -1,9 +1,12 @@
-import { registerTldrawLibraryVersion } from '@tldraw/utils'
+// Important! don't move this tlschema re-export to lib/tldraw_packages_editor_src_index.ts_extracted.txt (actual)://github.com/evanw/esbuild/issues/1737
+
 import 'core-js/stable/array/at.js'
 import 'core-js/stable/array/flat-map.js'
 import 'core-js/stable/array/flat.js'
 import 'core-js/stable/string/at.js'
 import 'core-js/stable/string/replace-all.js'
+
 export {
 	EMPTY_ARRAY,
 	EffectScheduler,
@@ -35,13 +38,9 @@ export {
 	type TiptapNode,
 } from './lib/utils/richText'
 export { LocalIndexedDb, Table, type StoreName } from './lib/utils/sync/LocalIndexedDb'
-// eslint-disable-next-line local/no-export-star
 export * from '@tldraw/store'
-// eslint-disable-next-line local/no-export-star
 export * from '@tldraw/tlschema'
-// eslint-disable-next-line local/no-export-star
 export * from '@tldraw/utils'
-// eslint-disable-next-line local/no-export-star
 export * from '@tldraw/validate'
 export {
 	ErrorScreen,
@@ -155,13 +154,7 @@ export { createTLUser, useTldrawUser, type TLUser } from './lib/config/createTLU
 export { type TLAnyBindingUtilConstructor } from './lib/config/defaultBindings'
 export { coreShapes, type TLAnyShapeUtilConstructor } from './lib/config/defaultShapes'
 export { DEFAULT_ANIMATION_OPTIONS, DEFAULT_CAMERA_OPTIONS, SIDES } from './lib/constants'
-export {
-	Editor,
-	type TLEditorOptions,
-	type TLEditorRunOptions,
-	type TLRenderingShape,
-	type TLResizeShapeOptions,
-} from './lib/editor/Editor'
+export { Editor, type TLEditorOptions, type TLEditorRunOptions, type TLRenderingShape, type TLResizeShapeOptions } from './lib/editor/Editor'
 export {
 	BindingUtil,
 	type BindingOnChangeOptions,
@@ -229,257 +222,4 @@ export {
 	type TLCLickEventName,
 	type TLCancelEvent,
 	type TLCancelEventInfo,
-	type TLClickEvent,
-	type TLClickEventInfo,
-	type TLCompleteEvent,
-	type TLCompleteEventInfo,
-	type TLEnterEventHandler,
-	type TLEventHandlers,
-	type TLEventInfo,
-	type TLEventName,
-	type TLExitEventHandler,
-	type TLInterruptEvent,
-	type TLInterruptEventInfo,
-	type TLKeyboardEvent,
-	type TLKeyboardEventInfo,
-	type TLKeyboardEventName,
-	type TLPinchEvent,
-	type TLPinchEventInfo,
-	type TLPinchEventName,
-	type TLPointerEvent,
-	type TLPointerEventInfo,
-	type TLPointerEventName,
-	type TLPointerEventTarget,
-	type TLTickEvent,
-	type TLTickEventInfo,
-	type TLWheelEvent,
-	type TLWheelEventInfo,
-	type UiEvent,
-	type UiEventType,
-} from './lib/editor/types/event-types'
-export {
-	type TLBaseExternalContent,
-	type TLEmbedExternalContent,
-	type TLErrorExternalContentSource,
-	type TLExcalidrawExternalContent,
-	type TLExcalidrawExternalContentSource,
-	type TLExternalAsset,
-	type TLExternalContent,
-	type TLExternalContentSource,
-	type TLFileExternalAsset,
-	type TLFilesExternalContent,
-	type TLSvgTextExternalContent,
-	type TLTextExternalContent,
-	type TLTextExternalContentSource,
-	type TLTldrawExternalContent,
-	type TLTldrawExternalContentSource,
-	type TLUrlExternalAsset,
-	type TLUrlExternalContent,
-} from './lib/editor/types/external-content'
-export {
-	type TLHistoryBatchOptions,
-	type TLHistoryDiff,
-	type TLHistoryEntry,
-	type TLHistoryMark,
-} from './lib/editor/types/history-types'
-export {
-	type OptionalKeys,
-	type RequiredKeys,
-	type TLCameraConstraints,
-	type TLCameraMoveOptions,
-	type TLCameraOptions,
-	type TLExportType,
-	type TLImageExportOptions,
-	type TLSvgExportOptions,
-	type TLSvgOptions,
-} from './lib/editor/types/misc-types'
-export {
-	type TLAdjacentDirection,
-	type TLResizeHandle,
-	type TLSelectionHandle,
-} from './lib/editor/types/selection-types'
-export { getSvgAsImage } from './lib/exports/getSvgAsImage'
-export { tlenv } from './lib/globals/environment'
-export { tlmenus } from './lib/globals/menus'
-export { tltime } from './lib/globals/time'
-export {
-	ContainerProvider,
-	useContainer,
-	useContainerIfExists,
-	type ContainerProviderProps,
-} from './lib/hooks/useContainer'
-export { getCursor } from './lib/hooks/useCursor'
-export { EditorContext, useEditor, useMaybeEditor } from './lib/hooks/useEditor'
-export { useEditorComponents } from './lib/hooks/useEditorComponents'
-export type { TLEditorComponents } from './lib/hooks/useEditorComponents'
-export { useEvent, useReactiveEvent } from './lib/hooks/useEvent'
-export { useGlobalMenuIsOpen } from './lib/hooks/useGlobalMenuIsOpen'
-export { useShallowArrayIdentity, useShallowObjectIdentity } from './lib/hooks/useIdentity'
-export { useIsCropping } from './lib/hooks/useIsCropping'
-export { useIsDarkMode } from './lib/hooks/useIsDarkMode'
-export { useIsEditing } from './lib/hooks/useIsEditing'
-export { useLocalStore } from './lib/hooks/useLocalStore'
-export { usePassThroughMouseOverEvents } from './lib/hooks/usePassThroughMouseOverEvents'
-export { usePassThroughWheelEvents } from './lib/hooks/usePassThroughWheelEvents'
-export { usePeerIds } from './lib/hooks/usePeerIds'
-export { usePresence } from './lib/hooks/usePresence'
-export { useRefState } from './lib/hooks/useRefState'
-export {
-	sanitizeId,
-	suffixSafeId,
-	useSharedSafeId,
-	useUniqueSafeId,
-	type SafeId,
-} from './lib/hooks/useSafeId'
-export { useSelectionEvents } from './lib/hooks/useSelectionEvents'
-export { useTLSchemaFromUtils, useTLStore } from './lib/hooks/useTLStore'
-export { useTransform } from './lib/hooks/useTransform'
-export { useViewportHeight } from './lib/hooks/useViewportHeight'
-export {
-	LicenseManager,
-	type InvalidLicenseKeyResult,
-	type InvalidLicenseReason,
-	type LicenseFromKeyResult,
-	type LicenseInfo,
-	type TestEnvironment,
-	type ValidLicenseKeyResult,
-} from './lib/license/LicenseManager'
-export { defaultTldrawOptions, type TldrawOptions } from './lib/options'
-export {
-	Box,
-	ROTATE_CORNER_TO_SELECTION_CORNER,
-	rotateSelectionHandle,
-	type BoxLike,
-	type RotateCorner,
-	type SelectionCorner,
-	type SelectionEdge,
-	type SelectionHandle,
-} from './lib/primitives/Box'
-export { Mat, type MatLike, type MatModel } from './lib/primitives/Mat'
-export { Vec, type VecLike } from './lib/primitives/Vec'
-export { EASINGS } from './lib/primitives/easings'
-export { Arc2d } from './lib/primitives/geometry/Arc2d'
-export { Circle2d } from './lib/primitives/geometry/Circle2d'
-export { CubicBezier2d } from './lib/primitives/geometry/CubicBezier2d'
-export { CubicSpline2d } from './lib/primitives/geometry/CubicSpline2d'
-export { Edge2d } from './lib/primitives/geometry/Edge2d'
-export { Ellipse2d } from './lib/primitives/geometry/Ellipse2d'
-export {
-	Geometry2d,
-	Geometry2dFilters,
-	TransformedGeometry2d,
-	type Geometry2dOptions,
-	type TransformedGeometry2dOptions,
-} from './lib/primitives/geometry/Geometry2d'
-export { Group2d } from './lib/primitives/geometry/Group2d'
-export { Point2d } from './lib/primitives/geometry/Point2d'
-export { Polygon2d } from './lib/primitives/geometry/Polygon2d'
-export { Polyline2d } from './lib/primitives/geometry/Polyline2d'
-export { Rectangle2d } from './lib/primitives/geometry/Rectangle2d'
-export { Stadium2d } from './lib/primitives/geometry/Stadium2d'
-export {
-	intersectCircleCircle,
-	intersectCirclePolygon,
-	intersectCirclePolyline,
-	intersectLineSegmentCircle,
-	intersectLineSegmentLineSegment,
-	intersectLineSegmentPolygon,
-	intersectLineSegmentPolyline,
-	intersectPolygonBounds,
-	intersectPolygonPolygon,
-	linesIntersect,
-	polygonIntersectsPolyline,
-	polygonsIntersect,
-} from './lib/primitives/intersect'
-export {
-	HALF_PI,
-	PI,
-	PI2,
-	SIN,
-	angleDistance,
-	approximately,
-	areAnglesCompatible,
-	average,
-	canonicalizeRotation,
-	centerOfCircleFromThreePoints,
-	clamp,
-	clampRadians,
-	clockwiseAngleDist,
-	counterClockwiseAngleDist,
-	degreesToRadians,
-	getArcMeasure,
-	getPointInArcT,
-	getPointOnCircle,
-	getPointsOnArc,
-	getPolygonVertices,
-	isSafeFloat,
-	perimeterOfEllipse,
-	pointInPolygon,
-	precise,
-	radiansToDegrees,
-	rangeIntersection,
-	shortAngleDist,
-	snapAngle,
-	toDomPrecision,
-	toFixed,
-	toPrecision,
-} from './lib/primitives/utils'
-export {
-	ReadonlySharedStyleMap,
-	SharedStyleMap,
-	type SharedStyle,
-} from './lib/utils/SharedStylesMap'
-export { dataUrlToFile, getDefaultCdnBaseUrl } from './lib/utils/assets'
-export { clampToBrowserMaxCanvasSize, type CanvasMaxSize } from './lib/utils/browserCanvasMaxSize'
-export {
-	debugFlags,
-	featureFlags,
-	type DebugFlag,
-	type DebugFlagDef,
-	type DebugFlagDefaults,
-} from './lib/utils/debug-flags'
-export {
-	createDeepLinkString,
-	parseDeepLinkString,
-	type TLDeepLink,
-	type TLDeepLinkOptions,
-} from './lib/utils/deepLinks'
-export {
-	activeElementShouldCaptureKeys,
-	loopToHtmlElement,
-	preventDefault,
-	releasePointerCapture,
-	setPointerCapture,
-	stopEventPropagation,
-} from './lib/utils/dom'
-export { getIncrementedName } from './lib/utils/getIncrementedName'
-export { getPointerInfo } from './lib/utils/getPointerInfo'
-export { getSvgPathFromPoints } from './lib/utils/getSvgPathFromPoints'
-export { hardResetEditor } from './lib/utils/hardResetEditor'
-export { isAccelKey } from './lib/utils/keyboard'
-export { normalizeWheel } from './lib/utils/normalizeWheel'
-export { refreshPage } from './lib/utils/refreshPage'
-export {
-	applyRotationToSnapshotShapes,
-	getRotationSnapshot,
-	type TLRotationSnapshot,
-} from './lib/utils/rotation'
-export { runtime, setRuntimeOverrides } from './lib/utils/runtime'
-export { type TLStoreWithStatus } from './lib/utils/sync/StoreWithStatus'
-export { hardReset } from './lib/utils/sync/hardReset'
-export { uniq } from './lib/utils/uniq'
-export { openWindow } from './lib/utils/window-open'
-
-/**
- * @deprecated Licensing is now enabled in the tldraw SDK.
- * @public */
-export function debugEnableLicensing() {
-	// noop
-	return
-}
-
-registerTldrawLibraryVersion(
-	(globalThis as any).TLDRAW_LIBRARY_NAME,
-	(globalThis as any).TLDRAW_LIBRARY_VERSION,
-	(globalThis as any).TLDRAW_LIBRARY_MODULES
-)
\ No newline at end of file
+	type TLClickEven
\ No newline at end of file
