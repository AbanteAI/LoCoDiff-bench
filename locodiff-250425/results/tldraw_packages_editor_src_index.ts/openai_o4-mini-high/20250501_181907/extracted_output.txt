import 'core-js/stable/array/at.js'
import 'core-js/stable/array/flat-map.js'
import 'core-js/stable/array/flat.js'
import 'core-js/stable/string/at.js'
import 'core-js/stable/string/replace-all.js'

// eslint-disable-next-line local/no-export-star
export * from '@tldraw/store'
// eslint-disable-next-line local/no-export-star
export * from '@tldraw/tlschema'
// eslint-disable-next-line local/no-export-star
export * from '@tldraw/utils'
// eslint-disable-next-line local/no-export-star
export * from '@tldraw/validate'

export {
  EMPTY_ARRAY,
  atom,
  computed,
  react,
  transact,
  transaction,
  useComputed,
  useQuickReactor,
  useReactor,
  useValue,
  whyAmIRunning,
  type Atom,
  type Signal,
} from '@tldraw/state'
export {
  track,
  useComputed,
  useQuickReactor,
  useReactor,
  useStateTracking,
  useValue,
} from '@tldraw/state-react'

export {
  ErrorScreen,
  LoadingScreen,
  TldrawEditor,
  type LoadingScreenProps,
  type TLOnMountHandler,
  type TldrawEditorBaseProps,
  type TldrawEditorProps,
  type TldrawEditorStoreProps,
  type TldrawEditorWithStoreProps,
  type TldrawEditorWithoutStoreProps,
} from './lib/TldrawEditor'
export {
  ContainerProvider,
  useContainer,
  useContainerIfExists,
  type ContainerProviderProps,
} from './lib/hooks/useContainer'
export {
  getCursor,
} from './lib/hooks/useCursor'
export {
  useEditor,
  useMaybeEditor,
  EditorContext,
} from './lib/hooks/useEditor'
export {
  useEditorComponents,
  type TLEditorComponents,
} from './lib/hooks/useEditorComponents'
export {
  useEvent,
  useReactiveEvent,
} from './lib/hooks/useEvent'
export {
  useShallowArrayIdentity,
  useShallowObjectIdentity,
} from './lib/hooks/useIdentity'
export {
  useIsCropping,
} from './lib/hooks/useIsCropping'
export {
  useIsDarkMode,
} from './lib/hooks/useIsDarkMode'
export {
  useIsEditing,
} from './lib/hooks/useIsEditing'
export {
  useLocalStore,
} from './lib/hooks/useLocalStore'
export {
  usePeerIds,
} from './lib/hooks/usePeerIds'
export {
  usePresence,
} from './lib/hooks/usePresence'
export {
  useRefState,
} from './lib/hooks/useRefState'
export {
  sanitizeId,
  suffixSafeId,
  useSharedSafeId,
  useUniqueSafeId,
  type SafeId,
} from './lib/hooks/useSafeId'
export {
  useSelectionEvents,
} from './lib/hooks/useSelectionEvents'
export {
  useTLSchemaFromUtils,
  useTLStore,
} from './lib/hooks/useTLStore'
export {
  useTransform,
} from './lib/hooks/useTransform'
export {
  usePassThroughWheelEvents,
} from './lib/hooks/usePassThroughWheelEvents'
export {
  usePassThroughMouseOverEvents,
} from './lib/hooks/usePassThroughMouseOverEvents'
export {
  useViewportHeight,
} from './lib/hooks/useViewportHeight'

export { tlenv } from './lib/globals/environment'
export { tlmenus } from './lib/globals/menus'
export { tltime } from './lib/globals/time'

export {
  ClickManager,
  type TLClickState,
} from './lib/editor/managers/ClickManager'
export {
  EdgeScrollManager,
} from './lib/editor/managers/EdgeScrollManager'
export {
  HistoryManager,
} from './lib/editor/managers/HistoryManager'
export {
  ScribbleManager,
  type ScribbleItem,
} from './lib/editor/managers/ScribbleManager'
export {
  FontManager,
  type TLFontFace,
  type TLFontFaceSource,
} from './lib/editor/managers/FontManager'
export {
  TextManager,
  type TLMeasureTextSpanOpts,
} from './lib/editor/managers/TextManager'
export {
  UserPreferencesManager,
} from './lib/editor/managers/UserPreferencesManager'

export {
  BoundsSnaps,
  type BoundsSnapGeometry,
  type BoundsSnapPoint,
} from './lib/editor/managers/SnapManager/BoundsSnaps'
export {
  HandleSnaps,
  type HandleSnapGeometry,
} from './lib/editor/managers/SnapManager/HandleSnaps'
export {
  SnapManager,
  type GapsSnapIndicator,
  type PointsSnapIndicator,
  type SnapIndicator,
  type SnapData,
} from './lib/editor/managers/SnapManager/SnapManager'

export {
  TldrawEditorConfig,
} from './lib/config/TldrawEditorConfig'
export {
  createTLStore,
  inlineBase64AssetStore,
  type TLStoreBaseOptions,
  type TLStoreEventInfo,
  type TLStoreOptions,
  type TLStoreSchemaOptions,
} from './lib/config/createTLStore'
export {
  createTLUser,
  useTldrawUser,
  type TLUser,
} from './lib/config/createTLUser'
export {
  userTypeValidator,
} from './lib/config/TLUserPreferences'
export {
  USER_COLORS,
  getUserPreferences,
  getFreshUserPreferences,
  setUserPreferences,
  defaultUserPreferences,
  type TLUserPreferences,
} from './lib/config/TLUserPreferences'
export {
  defineShape,
  type TLShapeInfo,
} from './lib/config/defineShape'
export {
  coreShapes,
  type TLAnyShapeUtilConstructor,
} from './lib/config/defaultShapes'
export {
  DEFAULT_ANIMATION_OPTIONS,
  DEFAULT_CAMERA_OPTIONS,
  SIDES,
} from './lib/constants'

export {
  Editor,
  type TLEditorOptions,
  type TLEditorRunOptions,
  type TLResizeShapeOptions,
} from './lib/editor/Editor'
export {
  BindingUtil,
  type BindingOnChangeOptions,
  type BindingOnCreateOptions,
  type BindingOnDeleteOptions,
  type BindingOnShapeChangeOptions,
  type BindingOnShapeDeleteOptions,
  type BindingOnUnbindOptions,
  type TLBindingUtilConstructor,
} from './lib/editor/bindings/BindingUtil'
export {
  getSnapshot,
  loadSnapshot,
  type TLEditorSnapshot,
  type TLLoadSnapshotOptions,
} from './lib/config/TLEditorSnapshot'
export {
  TAB_ID,
  createSessionStateSnapshotSignal,
  extractSessionStateFromLegacySnapshot,
  loadSessionStateSnapshotIntoStore,
  type TLSessionStateSnapshot,
  type TLLoadSessionStateSnapshotOptions,
} from './lib/config/TLSessionStateSnapshot'

export {
  type SideEffectManager,
  type TLAfterChangeHandler,
  type TLAfterCreateHandler,
  type TLAfterDeleteHandler,
  type TLBeforeChangeHandler,
  type TLBeforeCreateHandler,
  type TLBeforeDeleteHandler,
  type TLBatchCompleteHandler,
  type TLOperationCompleteHandler,
} from './lib/editor/managers/SideEffectManager'
export {
  HistoryManager as History,
} from './lib/editor/managers/HistoryManager'

export { DefaultErrorFallback } from './lib/components/default-components/DefaultErrorFallback'
export {
  ErrorBoundary,
  OptionalErrorBoundary,
  type TLErrorBoundaryProps,
} from './lib/components/ErrorBoundary'
export { HTMLContainer, type HTMLContainerProps } from './lib/components/HTMLContainer'
export { SVGContainer, type SVGContainerProps } from './lib/components/SVGContainer'
export {
  DefaultBackground,
  type TLBackgroundComponent,
} from './lib/components/default-components/DefaultBackground'
export {
  DefaultBrush,
  type TLBrushProps,
} from './lib/components/default-components/DefaultBrush'
export {
  DefaultCanvas,
  type TLCanvasComponentProps,
} from './lib/components/default-components/DefaultCanvas'
export {
  DefaultCollaboratorHint,
  type TLCollaboratorHintProps,
} from './lib/components/default-components/DefaultCollaboratorHint'
export {
  DefaultCursor,
  type TLCursorProps,
} from './lib/components/default-components/DefaultCursor'
export {
  DefaultGrid,
  type TLGridProps,
} from './lib/components/default-components/DefaultGrid'
export {
  DefaultHandle,
  type TLHandleProps,
} from './lib/components/default-components/DefaultHandle'
export {
  DefaultHandles,
  type TLHandlesProps,
} from './lib/components/default-components/DefaultHandles'
export {
  DefaultHoverIndicator,
  type TLHoverIndicatorProps,
} from './lib/components/default-components/DefaultHoverIndicator'
export {
  DefaultShapeIndicator,
  type TLShapeIndicatorProps,
} from './lib/components/default-components/DefaultShapeIndicator'
export {
  DefaultShapeIndicators,
  type TLShapeIndicatorsProps,
} from './lib/components/default-components/DefaultShapeIndicators'
export {
  DefaultSnapIndicator,
  type TLSnapIndicatorProps,
} from './lib/components/default-components/DefaultSnapIndicator'
export {
  DefaultSpinner,
  type TLSpinnerProps,
} from './lib/components/default-components/DefaultSpinner'
export {
  DefaultSvgDefs,
  type TLSvgDefsProps,
} from './lib/components/default-components/DefaultSvgDefs'
export {
  MenuClickCapture,
} from './lib/components/MenuClickCapture'

export {
  getSvgAsImage,
} from './lib/exports/getSvgAsImage'

export { dataUrlToFile, getDefaultCdnBaseUrl } from './lib/utils/assets'
export { clampToBrowserMaxCanvasSize, type CanvasMaxSize } from './lib/utils/browserCanvasMaxSize'
export {
  loopToHtmlElement,
  preventDefault,
  releasePointerCapture,
  setPointerCapture,
  stopEventPropagation,
  activeElementShouldCaptureKeys,
} from './lib/utils/dom'
export {
  getIncrementedName,
} from './lib/utils/getIncrementedName'
export {
  getPointerInfo,
} from './lib/utils/getPointerInfo'
export {
  getSvgPathFromPoints,
} from './lib/utils/getSvgPathFromPoints'
export {
  hardResetEditor as hardReset,
} from './lib/utils/hardReset'
export {
  normalizeWheel,
} from './lib/utils/normalizeWheel'
export {
  refreshPage,
} from './lib/utils/refreshPage'
export {
  openWindow,
} from './lib/utils/window-open'

export {
  getSnapshot,
  loadSnapshot,
  type TLEditorSnapshot,
  type TLLoadSnapshotOptions,
} from './lib/config/TLEditorSnapshot'

export {
  Geometry2d,
  Geometry2dFilters,
  TransformedGeometry2d,
  type Geometry2dOptions,
  type TransformedGeometry2dOptions,
} from './lib/primitives/geometry/Geometry2d'
export {
  Group2d,
} from './lib/primitives/geometry/Group2d'
export {
  Point2d,
} from './lib/primitives/geometry/Point2d'