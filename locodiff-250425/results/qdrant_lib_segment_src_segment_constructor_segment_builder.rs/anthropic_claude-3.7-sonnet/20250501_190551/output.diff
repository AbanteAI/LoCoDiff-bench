
index 70dd22b4..6733b970 100644
--- a/qdrant_lib_segment_src_segment_constructor_segment_builder.rs_expectedoutput.txt (expected):tmp/tmppz1zbiq8_expected.txt	
+++ b/qdrant_lib_segment_src_segment_constructor_segment_builder.rs_extracted.txt (actual):tmp/tmpfhs_qnp1_actual.txt	
@@ -1,4 +1,4 @@
-use std::cmp;
+use core::cmp;
 use std::collections::HashMap;
 use std::hash::{Hash, Hasher};
 use std::ops::Deref;
@@ -427,7 +427,7 @@ impl SegmentBuilder {
                     self.payload_storage.set(
                         new_internal_id,
                         &other_payload,
-                        &HardwareCounterCell::disposable(),
+                        &hw_counter,
                     )?;
                 }
             }
@@ -485,14 +485,6 @@ impl SegmentBuilder {
             id_tracker.versions_flusher()()?;
             let id_tracker_arc = Arc::new(AtomicRefCell::new(id_tracker));
 
-            let mut quantized_vectors = Self::update_quantization(
-                &segment_config,
-                &vector_data,
-                temp_dir.path(),
-                &permit,
-                stopped,
-            )?;
-
             let mut vector_storages_arc = HashMap::new();
             let mut old_indices = HashMap::new();
 
@@ -543,6 +535,14 @@ impl SegmentBuilder {
             payload_index.flusher()()?;
             let payload_index_arc = Arc::new(AtomicRefCell::new(payload_index));
 
+            let mut quantized_vectors = Self::update_quantization(
+                &segment_config,
+                &vector_data,
+                temp_dir.path(),
+                &permit,
+                stopped,
+            )?;
+
             // Try to lock GPU device.
             #[cfg(feature = "gpu")]
             let gpu_devices_manager = crate::index::hnsw_index::gpu::GPU_DEVICES_MANAGER.read();
