
index 1529ad14..c8b08913 100644
--- a/tldraw_packages_tldraw_src_lib_shapes_line_LineShapeUtil.tsx_expectedoutput.txt (expected):tmp/tmpaldpxlkb_expected.txt	
+++ b/tldraw_packages_tldraw_src_lib_shapes_line_LineShapeUtil.tsx_extracted.txt (actual):tmp/tmp7hzlardt_actual.txt	
@@ -79,25 +79,36 @@ export class LineShapeUtil extends ShapeUtil<TLLineShape> {
 			const spline = getGeometryForLineShape(shape)
 
 			const points = linePointsToArray(shape)
-			const results: TLHandle[] = points.map((point) => ({
-				...point,
-				id: point.index,
-				type: 'vertex',
-				canSnap: true,
-			}))
-
-			for (let i = 0; i < points.length - 1; i++) {
-				const index = getIndexBetween(points[i].index, points[i + 1].index)
-				const segment = spline.segments[i]
-				const point = segment.midPoint()
+			const results: TLHandle[] = []
+
+			let index = ZERO_INDEX_KEY
+
+			for (let i = 0; i < points.length; i++) {
+				const handle = points[i]
 				results.push({
+					...handle,
 					id: index,
-					type: 'create',
 					index,
-					x: point.x,
-					y: point.y,
+					type: 'vertex',
+					canBind: false,
 					canSnap: true,
 				})
+				index = getIndexAbove(index)
+
+				if (i < points.length - 1) {
+					const segment = spline.segments[i]
+					const point = segment.midPoint()
+					results.push({
+						id: index,
+						type: 'create',
+						index,
+						x: point.x,
+						y: point.y,
+						canSnap: true,
+						canBind: false,
+					})
+					index = getIndexAbove(index)
+				}
 			}
 
 			return results.sort(sortByIndex)
@@ -228,6 +239,7 @@ export class LineShapeUtil extends ShapeUtil<TLLineShape> {
 			},
 		}
 	}
+
 	override getInterpolatedProps(
 		startShape: TLLineShape,
 		endShape: TLLineShape,
