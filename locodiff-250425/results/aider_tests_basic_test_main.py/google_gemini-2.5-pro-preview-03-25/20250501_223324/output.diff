
index 2510736c..5b7b06eb 100644
--- a/aider_tests_basic_test_main.py_expectedoutput.txt (expected):tmp/tmpx4t_ulh6_expected.txt	
+++ b/aider_tests_basic_test_main.py_extracted.txt (actual):tmp/tmphnlnwq8e_actual.txt	
@@ -874,6 +874,7 @@ class TestMain(TestCase):
             # Manually check the git config file to confirm include directive
             git_config_path = git_dir / ".git" / "config"
             git_config_content = git_config_path.read_text()
+            self.assertIn("[include]", git_config_content)
 
             # Run aider and verify it doesn't change the git config
             main(["--yes", "--exit"], input=DummyInput(), output=DummyOutput())
@@ -1160,6 +1161,24 @@ class TestMain(TestCase):
                 # Method should not be called because model doesn't support it and flag is on
                 mock_set_thinking.assert_not_called()
 
+            # When flag is off, setting should be applied regardless of support
+            with patch("aider.models.Model.set_reasoning_effort") as mock_set_reasoning:
+                main(
+                    [
+                        "--model",
+                        "gpt-3.5-turbo",
+                        "--reasoning-effort",
+                        "3",
+                        "--no-check-model-accepts-settings",
+                        "--yes",
+                        "--exit",
+                    ],
+                    input=DummyInput(),
+                    output=DummyOutput(),
+                )
+                # Method should be called because flag is off
+                mock_set_reasoning.assert_called_once_with("3")
+
     def test_list_models_with_direct_resource_patch(self):
         # Test that models from resources/model-metadata.json are included in list-models output
         with GitTemporaryDirectory():
@@ -1195,24 +1214,6 @@ class TestMain(TestCase):
                     # Check that the resource model appears in the output
                     self.assertIn("resource-provider/special-model", output)
 
-            # When flag is off, setting should be applied regardless of support
-            with patch("aider.models.Model.set_reasoning_effort") as mock_set_reasoning:
-                main(
-                    [
-                        "--model",
-                        "gpt-3.5-turbo",
-                        "--reasoning-effort",
-                        "3",
-                        "--no-check-model-accepts-settings",
-                        "--yes",
-                        "--exit",
-                    ],
-                    input=DummyInput(),
-                    output=DummyOutput(),
-                )
-                # Method should be called because flag is off
-                mock_set_reasoning.assert_called_once_with("3")
-
     def test_model_accepts_settings_attribute(self):
         with GitTemporaryDirectory():
             # Test with a model where we override the accepts_settings attribute
