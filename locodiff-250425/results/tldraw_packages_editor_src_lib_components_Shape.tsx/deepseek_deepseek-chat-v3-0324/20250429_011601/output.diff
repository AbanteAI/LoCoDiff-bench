
index 2c7cd615..e466250c 100644
--- a/tldraw_packages_editor_src_lib_components_Shape.tsx_expectedoutput.txt (expected):tmp/tmpgd783q8b_expected.txt	
+++ b/tldraw_packages_editor_src_lib_components_Shape.tsx_extracted.txt (actual):tmp/tmp7a2ypoc7_actual.txt	
@@ -30,7 +30,7 @@ export const Shape = memo(function Shape({
 }: {
 	id: TLShapeId
 	shape: TLShape
-	util: ShapeUtil
+	util: ShapeUtil<TLShape>
 	index: number
 	backgroundIndex: number
 	opacity: number
@@ -103,7 +103,6 @@ export const Shape = memo(function Shape({
 		[editor]
 	)
 
-	// This stuff changes pretty infrequently, so we can change them together
 	useLayoutEffect(() => {
 		const container = containerRef.current
 		const bgContainer = bgContainerRef.current
@@ -178,8 +177,6 @@ export const InnerShape = memo(
 		return useStateTracking(
 			'InnerShape:' + shape.type,
 			() =>
-				// always fetch the latest shape from the store even if the props/meta have not changed, to avoid
-				// calling the render method with stale data.
 				util.component(util.editor.store.unsafeGetWithoutCapture(shape.id) as T),
 			[util, shape.id]
 		)
@@ -201,8 +198,6 @@ export const InnerShapeBackground = memo(
 		return useStateTracking(
 			'InnerShape:' + shape.type,
 			() =>
-				// always fetch the latest shape from the store even if the props/meta have not changed, to avoid
-				// calling the render method with stale data.
 				util.backgroundComponent?.(util.editor.store.unsafeGetWithoutCapture(shape.id) as T),
 			[util, shape.id]
 		)
