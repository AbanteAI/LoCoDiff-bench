--- tldraw_packages_editor_src_lib_components_Shape.tsx_expectedoutput.txt (expected)+++ tldraw_packages_editor_src_lib_components_Shape.tsx_extracted.txt (actual)@@ -6,6 +6,7 @@ import { useEditor } from '../hooks/useEditor'
 import { useEditorComponents } from '../hooks/useEditorComponents'
 import { Mat } from '../primitives/Mat'
+import { toDomPrecision } from '../primitives/utils'
 import { setStyleProperty } from '../utils/dom'
 import { OptionalErrorBoundary } from './ErrorBoundary'
 
@@ -39,15 +40,15 @@ 
 	const { ShapeErrorFallback } = useEditorComponents()
 
-	const containerRef = useRef<HTMLDivElement>(null)
-	const bgContainerRef = useRef<HTMLDivElement>(null)
-
 	useEffect(() => {
 		return react('load fonts', () => {
 			const fonts = editor.fonts.getShapeFontFaces(id)
 			editor.fonts.requestFonts(fonts)
 		})
 	}, [editor, id])
+
+	const containerRef = useRef<HTMLDivElement>(null)
+	const bgContainerRef = useRef<HTMLDivElement>(null)
 
 	const memoizedStuffRef = useRef({
 		transform: '',
@@ -99,6 +100,8 @@ 				prev.width = width
 				prev.height = height
 			}
+			memoizedStuffRef.current.x = bounds.x
+			memoizedStuffRef.current.y = bounds.y
 		},
 		[editor]
 	)
@@ -133,6 +136,7 @@ 		},
 		[editor]
 	)
+
 	const annotateError = useCallback(
 		(error: any) => editor.annotateError(error, { origin: 'shape', willCrashApp: false }),
 		[editor]
