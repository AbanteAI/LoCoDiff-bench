--- react_packages_react-devtools-shared_src___tests___storeComponentFilters-test.js_expectedoutput.txt (expected)+++ react_packages_react-devtools-shared_src___tests___storeComponentFilters-test.js_extracted.txt (actual)@@ -131,6 +131,31 @@           ▾ <div>
             ▾ <FunctionComponent>
                 <div>
+    `);
+  });
+
+  // @reactVersion >= 16.0
+  it('should ignore invalid ElementTypeRoot filter', async () => {
+    const Component = () => <div>Hi</div>;
+
+    await actAsync(async () => render(<Component />));
+    expect(store).toMatchInlineSnapshot(`
+      [root]
+        ▾ <Component>
+            <div>
+    `);
+
+    await actAsync(
+      async () =>
+        (store.componentFilters = [
+          utils.createElementTypeFilter(Types.ElementTypeRoot),
+        ]),
+    );
+
+    expect(store).toMatchInlineSnapshot(`
+      [root]
+        ▾ <Component>
+            <div>
     `);
   });
 
@@ -301,30 +326,6 @@     }
   });
 
-  it('should ignore invalid ElementTypeRoot filter', async () => {
-    const Component = () => <div>Hi</div>;
-
-    await actAsync(async () => render(<Component />));
-    expect(store).toMatchInlineSnapshot(`
-      [root]
-        ▾ <Component>
-            <div>
-    `);
-
-    await actAsync(
-      async () =>
-        (store.componentFilters = [
-          utils.createElementTypeFilter(Types.ElementTypeRoot),
-        ]),
-    );
-
-    expect(store).toMatchInlineSnapshot(`
-      [root]
-        ▾ <Component>
-            <div>
-    `);
-  });
-
   // @reactVersion >= 16.2
   it('should filter by display name', async () => {
     const Text = ({label}) => label;
@@ -365,8 +366,7 @@     `);
 
     await actAsync(
-      async () =>
-        (store.componentFilters = [utils.createDisplayNameFilter('Ba')]),
+      async () => (store.componentFilters = [utils.createDisplayNameFilter('Ba')]),
     );
     expect(store).toMatchInlineSnapshot(`
       [root]
@@ -377,8 +377,7 @@     `);
 
     await actAsync(
-      async () =>
-        (store.componentFilters = [utils.createDisplayNameFilter('B.z')]),
+      async () => (store.componentFilters = [utils.createDisplayNameFilter('B.z')]),
     );
     expect(store).toMatchInlineSnapshot(`
       [root]
@@ -414,7 +413,13 @@         ]),
     );
 
-    expect(store).toMatchInlineSnapshot(`[root]`);
+    // TODO: Filtering should work on component location.
+    // expect(store).toMatchInlineSnapshot(`[root]`);
+    expect(store).toMatchInlineSnapshot(`
+      [root]
+        ▾ <Component>
+            <div>
+    `);
 
     await actAsync(
       async () =>
@@ -576,13 +581,15 @@           ]),
       );
       utils.withErrorsOrWarningsIgnored(['test-only:'], () => {
-        legacyRender(
-          <React.Fragment>
-            <ComponentWithError />
-            <ComponentWithWarning />
-            <ComponentWithWarningAndError />
-          </React.Fragment>,
-        );
+        utils.act(() => {
+          legacyRender(
+            <React.Fragment>
+              <ComponentWithError />
+              <ComponentWithWarning />
+              <ComponentWithWarningAndError />
+            </React.Fragment>,
+          );
+        }, false);
       });
 
       expect(store).toMatchInlineSnapshot(``);
