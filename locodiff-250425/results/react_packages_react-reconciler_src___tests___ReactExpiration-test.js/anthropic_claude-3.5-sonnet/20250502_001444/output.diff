--- react_packages_react-reconciler_src___tests___ReactExpiration-test.js_expectedoutput.txt (expected)+++ react_packages_react-reconciler_src___tests___ReactExpiration-test.js_extracted.txt (actual)@@ -258,10 +258,8 @@   );
 
   it('cannot update at the same expiration time that is already rendering', async () => {
-    const store = {text: 'initial'};
-    const subscribers = [];
     class Connected extends React.Component {
-      state = {text: store.text};
+      state = {text: 'initial'};
       componentDidMount() {
         subscribers.push(this);
         Scheduler.log(`${this.state.text} [${this.props.label}] [commit]`);
@@ -285,6 +283,8 @@         </>
       );
     }
+
+    const subscribers = [];
 
     // Initial mount
     React.startTransition(() => {
@@ -440,7 +440,7 @@     let updateSyncPri;
     let updateNormalPri;
     function App() {
-      const [highPri, setHighPri] = useState(0);
+      const [syncPri, setHighPri] = useState(0);
       const [normalPri, setNormalPri] = useState(0);
       updateSyncPri = () => {
         ReactNoop.flushSync(() => {
@@ -450,7 +450,7 @@       updateNormalPri = () => setNormalPri(n => n + 1);
       return (
         <>
-          <Text text={'Sync pri: ' + highPri} />
+          <Text text={'Sync pri: ' + syncPri} />
           {', '}
           <Text text={'Normal pri: ' + normalPri} />
         </>
@@ -542,7 +542,6 @@       await waitFor(['Sync pri: 0']);
       updateSyncPri();
     });
-    // Same thing should happen as last time
     assertLog([
       // Interrupt idle update to render sync update
       'Sync pri: 1',
