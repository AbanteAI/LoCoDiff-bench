
index 1e234a3f7..496d810e3 100644
--- a/qdrant_lib_segment_tests_integration_sparse_vector_index_search_tests.rs_expectedoutput.txt (expected):tmp/tmpkhgvt7mc_expected.txt	
+++ b/qdrant_lib_segment_tests_integration_sparse_vector_index_search_tests.rs_extracted.txt (actual):tmp/tmp29bpeas5_actual.txt	
@@ -7,8 +7,8 @@ use common::counter::hardware_counter::HardwareCounterCell;
 use common::types::{PointOffsetType, TelemetryDetail};
 use io::storage_version::VERSION_FILE;
 use itertools::Itertools;
-use rand::SeedableRng;
 use rand::rngs::StdRng;
+use rand::SeedableRng;
 use segment::common::operation_error::OperationResult;
 use segment::data_types::named_vectors::NamedVectors;
 use segment::data_types::vectors::{QueryVector, VectorInternal};
@@ -143,7 +143,7 @@ fn sparse_vector_index_ram_filter_search() {
 #[test]
 fn sparse_vector_index_fallback_plain_search() {
     // very high full scan threshold to force fallback to plain search
-    compare_sparse_vectors_search_with_without_filter(NUM_VECTORS + 1);
+    compare_sparse_vectors_search_with_without_filter(LARGE_FULL_SCAN_THRESHOLD);
 }
 
 /// Checks that the sparse vector index is consistent with the underlying storage
