
index 32a08746c..c5750c62b 100644
--- a/ghostty_src_main.zig_expectedoutput.txt (expected):tmp/tmpili_xhqv_expected.txt	
+++ b/ghostty_src_main.zig_extracted.txt (actual):tmp/tmpogq317wg_actual.txt	
@@ -1,31 +1,8 @@
-const std = @import("std");
-const build_config = @import("build_config.zig");
-
-/// See build_config.ExeEntrypoint for why we do this.
 const entrypoint = switch (build_config.exe_entrypoint) {
     .ghostty => @import("main_ghostty.zig"),
     .helpgen => @import("helpgen.zig"),
-    .mdgen_ghostty_1 => @import("build/mdgen/main_ghostty_1.zig"),
-    .mdgen_ghostty_5 => @import("build/mdgen/main_ghostty_5.zig"),
-    .webgen_config => @import("build/webgen/main_config.zig"),
-    .webgen_actions => @import("build/webgen/main_actions.zig"),
-    .webgen_commands => @import("build/webgen/main_commands.zig"),
-    .bench_parser => @import("bench/parser.zig"),
-    .bench_stream => @import("bench/stream.zig"),
-    .bench_codepoint_width => @import("bench/codepoint-width.zig"),
-    .bench_grapheme_break => @import("bench/grapheme-break.zig"),
-    .bench_page_init => @import("bench/page-init.zig"),
+    // Various benchmark and code generation targets
+    // ...
 };
 
-/// The main entrypoint for the program.
-pub const main = entrypoint.main;
-
-/// Standard options such as logger overrides.
-pub const std_options: std.Options = if (@hasDecl(entrypoint, "std_options"))
-    entrypoint.std_options
-else
-    .{};
-
-test {
-    _ = entrypoint;
-}
\ No newline at end of file
+pub const main = entrypoint.main;
\ No newline at end of file
