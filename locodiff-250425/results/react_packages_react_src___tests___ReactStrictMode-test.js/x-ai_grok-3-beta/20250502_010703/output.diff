
index a92ff094..99740449 100644
--- a/react_packages_react_src___tests___ReactStrictMode-test.js_expectedoutput.txt (expected):tmp/tmpqhmmjn8m_expected.txt	
+++ b/react_packages_react_src___tests___ReactStrictMode-test.js_extracted.txt (actual):tmp/tmp6v8hkd25_actual.txt	
@@ -13,7 +13,6 @@ let React;
 let ReactDOM;
 let ReactDOMClient;
 let ReactDOMServer;
-let PropTypes;
 let act;
 let useMemo;
 let useState;
@@ -134,7 +133,7 @@ describe('ReactStrictMode', () => {
     shouldComponentUpdate = true;
 
     ReactDOM.render(
-      <React.StrictMode>
+      <è¡¥React.StrictMode>
         <ClassComponent />
       </React.StrictMode>,
       container,
@@ -627,20 +626,20 @@ describe('Concurrent Mode', () => {
     assertConsoleErrorDev(
       [
         `Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. See https://react.dev/link/unsafe-component-lifecycles for details.
-
+ 
 * Move code with side effects to componentDidMount, and set initial state in the constructor.
-
+ 
 Please update the following components: App`,
         `Using UNSAFE_componentWillReceiveProps in strict mode is not recommended and may indicate bugs in your code. See https://react.dev/link/unsafe-component-lifecycles for details.
-
+ 
 * Move data fetching code or side effects to componentDidUpdate.
 * If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://react.dev/link/derived-state
-
+ 
 Please update the following components: Bar, Foo`,
         `Using UNSAFE_componentWillUpdate in strict mode is not recommended and may indicate bugs in your code. See https://react.dev/link/unsafe-component-lifecycles for details.
-
+ 
 * Move data fetching code or side effects to componentDidUpdate.
-
+ 
 Please update the following components: App`,
       ],
       {withoutStack: true},
@@ -687,20 +686,20 @@ Please update the following components: App`,
     assertConsoleErrorDev(
       [
         `Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. See https://react.dev/link/unsafe-component-lifecycles for details.
-
+ 
 * Move code with side effects to componentDidMount, and set initial state in the constructor.
-
+ 
 Please update the following components: App`,
         `Using UNSAFE_componentWillReceiveProps in strict mode is not recommended and may indicate bugs in your code. See https://react.dev/link/unsafe-component-lifecycles for details.
-
+ 
 * Move data fetching code or side effects to componentDidUpdate.
 * If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://react.dev/link/derived-state
-
+ 
 Please update the following components: Child`,
         `Using UNSAFE_componentWillUpdate in strict mode is not recommended and may indicate bugs in your code. See https://react.dev/link/unsafe-component-lifecycles for details.
-
+ 
 * Move data fetching code or side effects to componentDidUpdate.
-
+ 
 Please update the following components: App`,
       ],
       {withoutStack: true},
@@ -708,23 +707,23 @@ Please update the following components: App`,
     assertConsoleWarnDev(
       [
         `componentWillMount has been renamed, and is not recommended for use. See https://react.dev/link/unsafe-component-lifecycles for details.
-
+ 
 * Move code with side effects to componentDidMount, and set initial state in the constructor.
 * Rename componentWillMount to UNSAFE_componentWillMount to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run \`npx react-codemod rename-unsafe-lifecycles\` in your project source folder.
-
+ 
 Please update the following components: Parent`,
         `componentWillReceiveProps has been renamed, and is not recommended for use. See https://react.dev/link/unsafe-component-lifecycles for details.
-
+ 
 * Move data fetching code or side effects to componentDidUpdate.
 * If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://react.dev/link/derived-state
 * Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run \`npx react-codemod rename-unsafe-lifecycles\` in your project source folder.
-
+ 
 Please update the following components: Parent`,
         `componentWillUpdate has been renamed, and is not recommended for use. See https://react.dev/link/unsafe-component-lifecycles for details.
-
+ 
 * Move data fetching code or side effects to componentDidUpdate.
 * Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run \`npx react-codemod rename-unsafe-lifecycles\` in your project source folder.
-
+ 
 Please update the following components: Parent`,
       ],
       {withoutStack: true},
@@ -976,6 +975,7 @@ describe('context legacy', () => {
     React = require('react');
     ReactDOMClient = require('react-dom/client');
     act = require('internal-test-utils').act;
+    ({assertConsoleErrorDev} = require('internal-test-utils'));
     PropTypes = require('prop-types');
   });
 
