
index 37fc273c9..a102f1f08 100644
--- a/aider_scripts_blame.py_expectedoutput.txt (expected):tmp/tmp5yee3sd6_expected.txt	
+++ b/aider_scripts_blame.py_extracted.txt (actual):tmp/tmp_0u19ho__actual.txt	
@@ -4,6 +4,7 @@ import argparse
 import os
 import subprocess
 import sys
+import tempfile
 from collections import defaultdict
 from datetime import datetime
 from operator import itemgetter
@@ -149,9 +150,7 @@ def main():
             " successive tags"
         ),
     )
-    parser.add_argument(
-        "--output", help="Output file to save the YAML results", type=str, default=None
-    )
+    parser.add_argument("--output", help="Output file to save the YAML results", type=str, default=None)
     args = parser.parse_args()
 
     if not args.start_tag:
@@ -261,14 +260,10 @@ def get_counts_for_file(start_tag, end_tag, authors, fname):
             line_counts[author] += 1
 
         return dict(line_counts)
-    except subprocess.CalledProcessError as e:
-        if "no such path" in str(e).lower():
-            # File doesn't exist in this revision range, which is okay
-            return None
-        else:
-            # Some other error occurred
-            print(f"Warning: Unable to blame file {fname}. Error: {e}", file=sys.stderr)
-            return None
+    except subprocess.CalledProcessError:
+        # print(f"Warning: Unable to blame file {fname}. It may have been added after {start_tag} "
+        #       f"or removed before {end_tag or 'HEAD'}.", file=sys.stderr)
+        return None
 
 
 def get_all_tags_since(start_tag):
