
index f9932b8c..34b95d5d 100644
--- a/react_packages_react-reconciler_src_ReactFiberHydrationContext.js_expectedoutput.txt (expected):tmp/tmp626lnh4l_expected.txt	
+++ b/react_packages_react-reconciler_src_ReactFiberHydrationContext.js_extracted.txt (actual):tmp/tmpzle0dssx_actual.txt	
@@ -483,7 +483,7 @@ function tryToClaimNextHydratableTextInstance(fiber: Fiber): void {
     if (shouldKeepWarning) {
       warnNonHydratedInstance(fiber, nextInstance);
     }
-    throwOnHydrationMismatch(fiber);
+    throwOnHydrationMismatch(fiber, true);
   }
 }
 
@@ -551,6 +551,7 @@ function prepareToHydrateHostInstance(
   }
 
   const instance: Instance = fiber.stateNode;
+
   const didHydrate = hydrateInstance(
     instance,
     fiber.type,
@@ -573,7 +574,6 @@ function prepareToHydrateHostTextInstance(fiber: Fiber): void {
 
   const textInstance: TextInstance = fiber.stateNode;
   const textContent: string = fiber.memoizedProps;
-  const shouldWarnIfMismatchDev = !didSuspendOrErrorDEV;
   let parentProps = null;
   // We assume that prepareToHydrateHostTextInstance is called in a context where the
   // hydration parent is the parent host component of this host text.
@@ -582,7 +582,7 @@ function prepareToHydrateHostTextInstance(fiber: Fiber): void {
     switch (returnFiber.tag) {
       case HostRoot: {
         if (__DEV__) {
-          if (shouldWarnIfMismatchDev) {
+          if (!didSuspendOrErrorDEV) {
             const difference = diffHydratedTextForDevWarnings(
               textInstance,
               textContent,
@@ -600,7 +600,7 @@ function prepareToHydrateHostTextInstance(fiber: Fiber): void {
       case HostComponent: {
         parentProps = returnFiber.memoizedProps;
         if (__DEV__) {
-          if (shouldWarnIfMismatchDev) {
+          if (!didSuspendOrErrorDEV) {
             const difference = diffHydratedTextForDevWarnings(
               textInstance,
               textContent,
@@ -681,7 +681,7 @@ function skipPastDehydratedActivityInstance(
 
   if (!activityInstance) {
     throw new Error(
-      'Expected to have a hydrated suspense instance. ' +
+      'Expected to have a hydrated suspense instance. ' + // typo? should be activity?
         'This error is likely caused by a bug in React. Please file an issue.',
     );
   }
@@ -692,12 +692,6 @@ function skipPastDehydratedActivityInstance(
 function skipPastDehydratedSuspenseInstance(
   fiber: Fiber,
 ): null | HydratableInstance {
-  if (!supportsHydration) {
-    throw new Error(
-      'Expected skipPastDehydratedSuspenseInstance() to never be called. ' +
-        'This error is likely caused by a bug in React. Please file an issue.',
-    );
-  }
   const suspenseState: null | SuspenseState = fiber.memoizedState;
   const suspenseInstance: null | SuspenseInstance =
     suspenseState !== null ? suspenseState.dehydrated : null;
