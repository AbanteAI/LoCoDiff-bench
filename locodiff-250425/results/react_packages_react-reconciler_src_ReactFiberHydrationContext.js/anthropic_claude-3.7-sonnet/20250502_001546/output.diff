--- react_packages_react-reconciler_src_ReactFiberHydrationContext.js_expectedoutput.txt (expected)+++ react_packages_react-reconciler_src_ReactFiberHydrationContext.js_extracted.txt (actual)@@ -349,6 +349,7 @@       treeContext: getSuspendedTreeContext(),
       retryLane: OffscreenLane,
       hydrationErrors: null,
+      baseTime: NoWork,
     };
     fiber.memoizedState = suspenseState;
     // Store the dehydrated fragment as a child fiber.
@@ -393,7 +394,7 @@       '- External changing data without sending a snapshot of it along with the HTML.\n' +
       '- Invalid HTML tag nesting.\n' +
       '\n' +
-      'It can also happen if the client has a browser extension installed which messes with the HTML before React loaded.\n' +
+      "It can also happen if the client has a browser extension installed which messes with the HTML before React loaded.\n" +
       '\n' +
       'https://react.dev/link/hydration-mismatch' +
       diff,
@@ -473,6 +474,7 @@   }
   const text = fiber.pendingProps;
 
+  // Validate that this is ok to render here before any mismatches.
   let shouldKeepWarning = true;
   // Validate that this is ok to render here before any mismatches.
   const currentHostContext = getHostContext();
@@ -483,7 +485,7 @@     if (shouldKeepWarning) {
       warnNonHydratedInstance(fiber, nextInstance);
     }
-    throwOnHydrationMismatch(fiber);
+    throwOnHydrationMismatch(fiber, true);
   }
 }
 
@@ -692,12 +694,6 @@ function skipPastDehydratedSuspenseInstance(
   fiber: Fiber,
 ): null | HydratableInstance {
-  if (!supportsHydration) {
-    throw new Error(
-      'Expected skipPastDehydratedSuspenseInstance() to never be called. ' +
-        'This error is likely caused by a bug in React. Please file an issue.',
-    );
-  }
   const suspenseState: null | SuspenseState = fiber.memoizedState;
   const suspenseInstance: null | SuspenseInstance =
     suspenseState !== null ? suspenseState.dehydrated : null;
