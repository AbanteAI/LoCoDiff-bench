--- qdrant_src_main.rs_expectedoutput.txt (expected)+++ qdrant_src_main.rs_extracted.txt (actual)@@ -1,5 +1,6 @@-#[cfg(feature = "web")]
-mod actix;
+extern crate segment;
+
+mod storage;
 mod common;
 mod consensus;
 mod greeting;
@@ -372,12 +373,6 @@             TelemetryCollector::new(settings.clone(), dispatcher_arc.clone(), reporting_id);
         let tonic_telemetry_collector = telemetry_collector.tonic_telemetry_collector.clone();
 
-        // `raft` crate uses `slog` crate so it is needed to use `slog_stdlog::StdLog` to forward
-        // logs from it to `log` crate
-        let slog_logger = slog::Logger::root(slog_stdlog::StdLog.fuse(), slog::o!());
-
-        // Runs raft consensus in a separate thread.
-        // Create a pipe `message_sender` to communicate with the consensus
         let health_checker = Arc::new(common::health::HealthChecker::spawn(
             toc_arc.clone(),
             consensus_state.clone(),
@@ -387,7 +382,7 @@         ));
 
         let handle = Consensus::run(
-            &slog_logger,
+            &slog_logger::StdLog.fuse(),
             consensus_state.clone(),
             bootstrap,
             args.uri.map(|uri| uri.to_string()),
