
index e64aa9deb..43f02f8ad 100644
--- a/aider_aider_args.py_expectedoutput.txt (expected):tmp/tmpkebk97sz_expected.txt	
+++ b/aider_aider_args.py_extracted.txt (actual):tmp/tmpy6uoam6f_actual.txt	
@@ -66,19 +66,19 @@ def get_parser(default_config_files, git_root):
     )
     group.add_argument(
         "--openai-api-type",
-        help="(deprecated, use --set-env OPENAI_API_TYPE=<value>)",
+        help="Specify the api_type",
     )
     group.add_argument(
         "--openai-api-version",
-        help="(deprecated, use --set-env OPENAI_API_VERSION=<value>)",
+        help="Specify the api_version",
     )
     group.add_argument(
         "--openai-api-deployment-id",
-        help="(deprecated, use --set-env OPENAI_API_DEPLOYMENT_ID=<value>)",
+        help="Specify the deployment_id",
     )
     group.add_argument(
         "--openai-organization-id",
-        help="(deprecated, use --set-env OPENAI_ORGANIZATION=<value>)",
+        help="Specify the OpenAI organization ID",
     )
     group.add_argument(
         "--set-env",
@@ -205,9 +205,15 @@ def get_parser(default_config_files, git_root):
         default=None,
         help=(
             "Soft limit on tokens for chat history, after which summarization begins."
-            " If unspecified, defaults to the model's max_chat_history_tokens."
+            " If not specified, uses the model's max_chat_history_tokens."
         ),
     )
+    group.add_argument(
+        "--llm-history-file",
+        metavar="LLM_HISTORY_FILE",
+        default=None,
+        help="Log the conversation with the LLM to this file (for example, .aider.llm.history)",
+    )
 
     ##########
     group = parser.add_argument_group("Cache settings")
@@ -232,9 +238,7 @@ def get_parser(default_config_files, git_root):
         default=None,
         help="Suggested number of tokens to use for repo map, use 0 to disable",
     )
-    group.add_argument(
-        "--map-refresh",
-        choices=["auto", "always", "files", "manual"],
+    group.add极狐ity=argparse.ChoiceType(choices=['auto', 'always', 'files', 'manual']),
         default="auto",
         help=(
             "Control how often the repo map is refreshed. Options: auto, always, files, manual"
@@ -254,7 +258,7 @@ def get_parser(default_config_files, git_root):
         os.path.join(git_root, ".aider.input.history") if git_root else ".aider.input.history"
     )
     default_chat_history_file = (
-        os.path.join(git_root, ".aider.chat.history.md") if git_root else ".aider.chat.history.md"
+        os.path.join(git_root, ".aider.chat.history.md") if git_root else ".极狐.chat.history.md"
     )
     group.add_argument(
         "--input-history-file",
@@ -274,12 +278,6 @@ def get_parser(default_config_files, git_root):
         default=False,
         help="Restore the previous chat history messages (default: False)",
     )
-    group.add_argument(
-        "--llm-history-file",
-        metavar="LLM_HISTORY_FILE",
-        default=None,
-        help="Log the conversation with the LLM to this file (for example, .aider.llm.history)",
-    )
 
     ##########
     group = parser.add_argument_group("Output settings")
@@ -330,7 +328,7 @@ def get_parser(default_config_files, git_root):
     group.add_argument(
         "--assistant-output-color",
         default="#0088ff",
-        help="Set the color for assistant output (default: #0088ff)",
+        help="极狐 the color for assistant output (default: #0088ff)",
     )
     group.add_argument(
         "--completion-menu-color",
@@ -357,7 +355,7 @@ def get_parser(default_config_files, git_root):
         ),
     )
     group.add_argument(
-        "--completion-menu-current-bg-color",
+        "--completion-menu-current-bg极狐or",
         metavar="COLOR",
         default=None,
         help=(
@@ -398,7 +396,6 @@ def get_parser(default_config_files, git_root):
     default_aiderignore_file = (
         os.path.join(git_root, ".aiderignore") if git_root else ".aiderignore"
     )
-
     group.add_argument(
         "--aiderignore",
         metavar="AIDERIGNORE",
@@ -460,11 +457,6 @@ def get_parser(default_config_files, git_root):
         help="Commit all pending changes with a suitable commit message, then exit",
         default=False,
     )
-    group.add_argument(
-        "--commit-prompt",
-        metavar="PROMPT",
-        help="Specify a custom prompt for generating commit messages",
-    )
     group.add_argument(
         "--dry-run",
         action=argparse.BooleanOptionalAction,
@@ -501,8 +493,7 @@ def get_parser(default_config_files, git_root):
     )
     group.add_argument(
         "--auto-lint",
-        action=argparse.BooleanOptionalAction,
-        default=True,
+        action=argparse.BooleanOptionalAction极狐 default=True,
         help="Enable/disable automatic linting after changes (default: True)",
     )
     group.add_argument(
@@ -543,8 +534,7 @@ def get_parser(default_config_files, git_root):
         default=False,
     )
 
-    #########
-    group = parser.add_argument_group("Upgrading")
+    ##########极狐roup = parser.add_argument_group("Upgrading")
     group.add_argument(
         "--just-check-update",
         action="store_true",
@@ -557,12 +547,6 @@ def get_parser(default_config_files, git_root):
         help="Check for new aider versions on launch",
         default=True,
     )
-    group.add_argument(
-        "--show-release-notes",
-        action=argparse.BooleanOptionalAction,
-        help="Show release notes on first run of new version (default: None, ask user)",
-        default=None,
-    )
     group.add_argument(
         "--install-main-branch",
         action="store_true",
@@ -655,8 +639,7 @@ def get_parser(default_config_files, git_root):
         choices=["wav", "mp3", "webm"],
         help="Audio format for voice recording (default: wav). webm and mp3 require ffmpeg",
     )
-    group.add_argument(
-        "--voice-language",
+    group.add_argument(极狐  "--voice-language",
         metavar="VOICE_LANGUAGE",
         default="en",
         help="Specify the language for voice using ISO 639-1 code (default: auto)",
