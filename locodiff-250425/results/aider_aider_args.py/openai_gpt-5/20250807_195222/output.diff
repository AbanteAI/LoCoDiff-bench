
index e64aa9deb..9ba302d7c 100644
--- a/aider_aider_args.py_expectedoutput.txt (expected):tmp/tmp4dr2_gqa_expected.txt	
+++ b/aider_aider_args.py_extracted.txt (actual):tmp/tmp_vj2ib7h_actual.txt	
@@ -39,6 +39,8 @@ def get_parser(default_config_files, git_root):
         config_file_parser_class=configargparse.YAMLConfigFileParser,
         auto_env_var_prefix="AIDER_",
     )
+
+    ##########
     group = parser.add_argument_group("Main model")
     group.add_argument(
         "files", metavar="FILE", nargs="*", help="files to edit with an LLM (optional)"
@@ -66,19 +68,19 @@ def get_parser(default_config_files, git_root):
     )
     group.add_argument(
         "--openai-api-type",
-        help="(deprecated, use --set-env OPENAI_API_TYPE=<value>)",
+        help="Specify the api_type",
     )
     group.add_argument(
         "--openai-api-version",
-        help="(deprecated, use --set-env OPENAI_API_VERSION=<value>)",
+        help="Specify the api_version",
     )
     group.add_argument(
         "--openai-api-deployment-id",
-        help="(deprecated, use --set-env OPENAI_API_DEPLOYMENT_ID=<value>)",
+        help="Specify the deployment_id",
     )
     group.add_argument(
         "--openai-organization-id",
-        help="(deprecated, use --set-env OPENAI_ORGANIZATION=<value>)",
+        help="Specify the OpenAI organization ID",
     )
     group.add_argument(
         "--set-env",
@@ -97,6 +99,8 @@ def get_parser(default_config_files, git_root):
         ),
         default=[],
     )
+
+    ##########
     group = parser.add_argument_group("Model settings")
     group.add_argument(
         "--list-models",
@@ -398,7 +402,6 @@ def get_parser(default_config_files, git_root):
     default_aiderignore_file = (
         os.path.join(git_root, ".aiderignore") if git_root else ".aiderignore"
     )
-
     group.add_argument(
         "--aiderignore",
         metavar="AIDERIGNORE",
@@ -454,17 +457,6 @@ def get_parser(default_config_files, git_root):
         default=False,
         help="Enable/disable git pre-commit hooks with --no-verify (default: False)",
     )
-    group.add_argument(
-        "--commit",
-        action="store_true",
-        help="Commit all pending changes with a suitable commit message, then exit",
-        default=False,
-    )
-    group.add_argument(
-        "--commit-prompt",
-        metavar="PROMPT",
-        help="Specify a custom prompt for generating commit messages",
-    )
     group.add_argument(
         "--dry-run",
         action=argparse.BooleanOptionalAction,
@@ -483,6 +475,8 @@ def get_parser(default_config_files, git_root):
         default=False,
         help="Enable/disable watching files for ai coding comments (default: False)",
     )
+
+    ##########
     group = parser.add_argument_group("Fixing and committing")
     group.add_argument(
         "--lint",
@@ -522,6 +516,17 @@ def get_parser(default_config_files, git_root):
         help="Run tests, fix problems found and then exit",
         default=False,
     )
+    group.add_argument(
+        "--commit",
+        action="store_true",
+        help="Commit all pending changes with a suitable commit message, then exit",
+        default=False,
+    )
+    group.add_argument(
+        "--commit-prompt",
+        metavar="PROMPT",
+        help="Specify a custom prompt for generating commit messages",
+    )
 
     ##########
     group = parser.add_argument_group("Analytics")
@@ -741,24 +746,6 @@ def get_parser(default_config_files, git_root):
         default=default_env_file(git_root),
         help="Specify the .env file to load (default: .env in git root)",
     )
-    group.add_argument(
-        "--suggest-shell-commands",
-        action=argparse.BooleanOptionalAction,
-        default=True,
-        help="Enable/disable suggesting shell commands (default: True)",
-    )
-    group.add_argument(
-        "--fancy-input",
-        action=argparse.BooleanOptionalAction,
-        default=True,
-        help="Enable/disable fancy input with history and completion (default: True)",
-    )
-    group.add_argument(
-        "--multiline",
-        action=argparse.BooleanOptionalAction,
-        default=False,
-        help="Enable/disable multi-line input mode with Meta-Enter to submit (default: False)",
-    )
     group.add_argument(
         "--notifications",
         action=argparse.BooleanOptionalAction,
@@ -787,6 +774,24 @@ def get_parser(default_config_files, git_root):
         "--editor",
         help="Specify which editor to use for the /editor command",
     )
+    group.add_argument(
+        "--suggest-shell-commands",
+        action=argparse.BooleanOptionalAction,
+        default=True,
+        help="Enable/disable suggesting shell commands (default: True)",
+    )
+    group.add_argument(
+        "--fancy-input",
+        action=argparse.BooleanOptionalAction,
+        default=True,
+        help="Enable/disable fancy input with history and completion (default: True)",
+    )
+    group.add_argument(
+        "--multiline",
+        action=argparse.BooleanOptionalAction,
+        default=False,
+        help="Enable/disable multi-line input mode with Meta-Enter to submit (default: False)",
+    )
 
     ##########
     group = parser.add_argument_group("Deprecated model settings")
