
index e64aa9de..7a584d70 100644
--- a/aider_aider_args.py_expectedoutput.txt (expected):tmp/tmp51fr74a3_expected.txt	
+++ b/aider_aider_args.py_extracted.txt (actual):tmp/tmpdg3igzz1_actual.txt	
@@ -66,19 +66,19 @@ def get_parser(default_config_files, git_root):
     )
     group.add_argument(
         "--openai-api-type",
-        help="(deprecated, use --set-env OPENAI_API_TYPE=<value>)",
+        help="Specify the api_type",
     )
     group.add_argument(
         "--openai-api-version",
-        help="(deprecated, use --set-env OPENAI_API_VERSION=<value>)",
+        help="Specify the api_version",
     )
     group.add_argument(
         "--openai-api-deployment-id",
-        help="(deprecated, use --set-env OPENAI_API_DEPLOYMENT_ID=<value>)",
+        help="Specify the deployment_id",
     )
     group.add_argument(
         "--openai-organization-id",
-        help="(deprecated, use --set-env OPENAI_ORGANIZATION=<value>)",
+        help="Specify the OpenAI organization ID",
     )
     group.add_argument(
         "--set-env",
@@ -460,11 +460,6 @@ def get_parser(default_config_files, git_root):
         help="Commit all pending changes with a suitable commit message, then exit",
         default=False,
     )
-    group.add_argument(
-        "--commit-prompt",
-        metavar="PROMPT",
-        help="Specify a custom prompt for generating commit messages",
-    )
     group.add_argument(
         "--dry-run",
         action=argparse.BooleanOptionalAction,
@@ -477,12 +472,6 @@ def get_parser(default_config_files, git_root):
         help="Skip the sanity check for the git repository (default: False)",
         default=False,
     )
-    group.add_argument(
-        "--watch-files",
-        action=argparse.BooleanOptionalAction,
-        default=False,
-        help="Enable/disable watching files for ai coding comments (default: False)",
-    )
     group = parser.add_argument_group("Fixing and committing")
     group.add_argument(
         "--lint",
@@ -515,7 +504,7 @@ def get_parser(default_config_files, git_root):
         action=argparse.BooleanOptionalAction,
         default=False,
         help="Enable/disable automatic testing after changes (default: False)",
-    )
+    )  
     group.add_argument(
         "--test",
         action="store_true",
@@ -686,7 +675,7 @@ def get_parser(default_config_files, git_root):
         "--vim",
         action="store_true",
         help="Use VI editing mode in the terminal (default: False)",
-        default=False,
+        default=False, 
     )
     group.add_argument(
         "--chat-language",
@@ -709,7 +698,7 @@ def get_parser(default_config_files, git_root):
     )
     group.add_argument(
         "--load",
-        metavar="LOAD_FILE",
+        metavar="LOAD_FILE", 
         help="Load and execute /commands from a file on launch",
     )
     group.add_argument(
@@ -750,7 +739,7 @@ def get_parser(default_config_files, git_root):
     group.add_argument(
         "--fancy-input",
         action=argparse.BooleanOptionalAction,
-        default=True,
+        default=True, 
         help="Enable/disable fancy input with history and completion (default: True)",
     )
     group.add_argument(
@@ -759,6 +748,12 @@ def get_parser(default_config_files, git_root):
         default=False,
         help="Enable/disable multi-line input mode with Meta-Enter to submit (default: False)",
     )
+    group.add_argument(
+        "--detect-urls",
+        action=argparse.BooleanOptionalAction,
+        default=True,
+        help="Enable/disable detection and offering to add URLs to chat (default: True)",
+    )
     group.add_argument(
         "--notifications",
         action=argparse.BooleanOptionalAction,
@@ -777,12 +772,6 @@ def get_parser(default_config_files, git_root):
             " specified, a default command for your OS may be used."
         ),
     )
-    group.add_argument(
-        "--detect-urls",
-        action=argparse.BooleanOptionalAction,
-        default=True,
-        help="Enable/disable detection and offering to add URLs to chat (default: True)",
-    )
     group.add_argument(
         "--editor",
         help="Specify which editor to use for the /editor command",
@@ -810,7 +799,7 @@ def get_md_help():
 
 
 def get_sample_yaml():
-    os.environ["COLUMNS"] = "100"
+    os.environ["COLUMNS"] = "120"
     sys.argv = ["aider"]
     parser = get_parser([], None)
 
