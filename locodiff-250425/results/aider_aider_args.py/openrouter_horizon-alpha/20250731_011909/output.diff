
index e64aa9deb..8b80f277e 100644
--- a/aider_aider_args.py_expectedoutput.txt (expected):tmp/tmpn8k1qn4m_expected.txt	
+++ b/aider_aider_args.py_extracted.txt (actual):tmp/tmp9rerj09c_actual.txt	
@@ -66,15 +66,15 @@ def get_parser(default_config_files, git_root):
     )
     group.add_argument(
         "--openai-api-type",
-        help="(deprecated, use --set-env OPENAI_API_TYPE=<value>)",
+        help="Specify the api_type",
     )
     group.add_argument(
         "--openai-api-version",
-        help="(deprecated, use --set-env OPENAI_API_VERSION=<value>)",
+        help="Specify the api_version",
     )
     group.add_argument(
         "--openai-api-deployment-id",
-        help="(deprecated, use --set-env OPENAI_API_DEPLOYMENT_ID=<value>)",
+        help="Specify the deployment_id",
     )
     group.add_argument(
         "--openai-organization-id",
@@ -132,12 +132,6 @@ def get_parser(default_config_files, git_root):
         type=str,
         help="Set the thinking token budget for models that support it (default: not set)",
     )
-    group.add_argument(
-        "--verify-ssl",
-        action=argparse.BooleanOptionalAction,
-        default=True,
-        help="Verify the SSL cert when connecting to models (default: True)",
-    )
     group.add_argument(
         "--timeout",
         type=float,
@@ -523,26 +517,6 @@ def get_parser(default_config_files, git_root):
         default=False,
     )
 
-    ##########
-    group = parser.add_argument_group("Analytics")
-    group.add_argument(
-        "--analytics",
-        action=argparse.BooleanOptionalAction,
-        default=None,
-        help="Enable/disable analytics for current session (default: random)",
-    )
-    group.add_argument(
-        "--analytics-log",
-        metavar="ANALYTICS_LOG_FILE",
-        help="Specify a file to log analytics events",
-    )
-    group.add_argument(
-        "--analytics-disable",
-        action="store_true",
-        help="Permanently disable analytics",
-        default=False,
-    )
-
     #########
     group = parser.add_argument_group("Upgrading")
     group.add_argument(
@@ -741,24 +715,6 @@ def get_parser(default_config_files, git_root):
         default=default_env_file(git_root),
         help="Specify the .env file to load (default: .env in git root)",
     )
-    group.add_argument(
-        "--suggest-shell-commands",
-        action=argparse.BooleanOptionalAction,
-        default=True,
-        help="Enable/disable suggesting shell commands (default: True)",
-    )
-    group.add_argument(
-        "--fancy-input",
-        action=argparse.BooleanOptionalAction,
-        default=True,
-        help="Enable/disable fancy input with history and completion (default: True)",
-    )
-    group.add_argument(
-        "--multiline",
-        action=argparse.BooleanOptionalAction,
-        default=False,
-        help="Enable/disable multi-line input mode with Meta-Enter to submit (default: False)",
-    )
     group.add_argument(
         "--notifications",
         action=argparse.BooleanOptionalAction,
@@ -777,6 +733,18 @@ def get_parser(default_config_files, git_root):
             " specified, a default command for your OS may be used."
         ),
     )
+    group.add_argument(
+        "--fancy-input",
+        action=argparse.BooleanOptionalAction,
+        default=True,
+        help="Enable/disable fancy input with history and completion (default: True)",
+    )
+    group.add_argument(
+        "--multiline",
+        action=argparse.BooleanOptionalAction,
+        default=False,
+        help="Enable/disable multi-line input mode with Meta-Enter to submit (default: False)",
+    )
     group.add_argument(
         "--detect-urls",
         action=argparse.BooleanOptionalAction,
