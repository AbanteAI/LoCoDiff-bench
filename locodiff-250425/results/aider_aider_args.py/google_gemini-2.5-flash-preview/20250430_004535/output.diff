
index e64aa9de..d35c203b 100644
--- a/aider_aider_args.py_expectedoutput.txt (expected):tmp/tmpr3ezjfc5_expected.txt	
+++ b/aider_aider_args.py_extracted.txt (actual):tmp/tmpimhw9xlp_actual.txt	
@@ -7,7 +7,6 @@ from pathlib import Path
 
 import configargparse
 
-from aider import __version__
 from aider.args_formatter import (
     DotEnvFormatter,
     MarkdownHelpFormatter,
@@ -66,19 +65,19 @@ def get_parser(default_config_files, git_root):
     )
     group.add_argument(
         "--openai-api-type",
-        help="(deprecated, use --set-env OPENAI_API_TYPE=<value>)",
+        help="Specify the api_type",
     )
     group.add_argument(
         "--openai-api-version",
-        help="(deprecated, use --set-env OPENAI_API_VERSION=<value>)",
+        help="Specify the api_version",
     )
     group.add_argument(
         "--openai-api-deployment-id",
-        help="(deprecated, use --set-env OPENAI_API_DEPLOYMENT_ID=<value>)",
+        help="Specify the deployment_id",
     )
     group.add_argument(
         "--openai-organization-id",
-        help="(deprecated, use --set-env OPENAI_ORGANIZATION=<value>)",
+        help="Specify the OpenAI organization ID",
     )
     group.add_argument(
         "--set-env",
@@ -116,12 +115,6 @@ def get_parser(default_config_files, git_root):
         default=".aider.model.metadata.json",
         help="Specify a file with context window and costs for unknown models",
     )
-    group.add_argument(
-        "--alias",
-        action="append",
-        metavar="ALIAS:MODEL",
-        help="Add a model alias (can be used multiple times)",
-    )
     group.add_argument(
         "--reasoning-effort",
         type=str,
@@ -483,6 +476,12 @@ def get_parser(default_config_files, git_root):
         default=False,
         help="Enable/disable watching files for ai coding comments (default: False)",
     )
+    group.add_argument(
+        "--copy-paste",
+        action=argparse.BooleanOptionalAction,
+        default=False,
+        help="Enable automatic copy/paste of chat between aider and web UI (default: False)",
+    )
     group = parser.add_argument_group("Fixing and committing")
     group.add_argument(
         "--lint",
@@ -523,26 +522,6 @@ def get_parser(default_config_files, git_root):
         default=False,
     )
 
-    ##########
-    group = parser.add_argument_group("Analytics")
-    group.add_argument(
-        "--analytics",
-        action=argparse.BooleanOptionalAction,
-        default=None,
-        help="Enable/disable analytics for current session (default: random)",
-    )
-    group.add_argument(
-        "--analytics-log",
-        metavar="ANALYTICS_LOG_FILE",
-        help="Specify a file to log analytics events",
-    )
-    group.add_argument(
-        "--analytics-disable",
-        action="store_true",
-        help="Permanently disable analytics",
-        default=False,
-    )
-
     #########
     group = parser.add_argument_group("Upgrading")
     group.add_argument(
@@ -610,12 +589,6 @@ def get_parser(default_config_files, git_root):
         help="Run aider in your browser (default: False)",
         default=False,
     )
-    group.add_argument(
-        "--copy-paste",
-        action=argparse.BooleanOptionalAction,
-        default=False,
-        help="Enable automatic copy/paste of chat between aider and web UI (default: False)",
-    )
     group.add_argument(
         "--apply",
         metavar="FILE",
@@ -627,6 +600,19 @@ def get_parser(default_config_files, git_root):
         help="Apply clipboard contents as edits using the main model's editor format",
         default=False,
     )
+    group.add_argument(
+        "--yes-always",
+        action="store_true",
+        help="Always say yes to every confirmation",
+        default=None,
+    )
+    group.add_argument(
+        "-v",
+        "--verbose",
+        action="store_true",
+        help="Enable verbose output",
+        default=False,
+    )
     group.add_argument(
         "--exit",
         action="store_true",
@@ -694,19 +680,6 @@ def get_parser(default_config_files, git_root):
         default=None,
         help="Specify the language to use in the chat (default: None, uses system settings)",
     )
-    group.add_argument(
-        "--yes-always",
-        action="store_true",
-        help="Always say yes to every confirmation",
-        default=None,
-    )
-    group.add_argument(
-        "-v",
-        "--verbose",
-        action="store_true",
-        help="Enable verbose output",
-        default=False,
-    )
     group.add_argument(
         "--load",
         metavar="LOAD_FILE",
