
index 3485b4b0a..fd37a2ddc 100644
--- a/aider_aider_mdstream.py_expectedoutput.txt (expected):tmp/tmpw1mswf3c_expected.txt	
+++ b/aider_aider_mdstream.py_extracted.txt (actual):tmp/tmpt4bdeux8_actual.txt	
@@ -119,6 +119,14 @@ class MarkdownStream:
         self.live = Live(Text(""), refresh_per_second=1.0 / self.min_delay)
         self.live.start()
 
+    def __del__(self):
+        """Destructor to ensure Live display is properly cleaned up."""
+        if self.live:
+            try:
+                self.live.stop()
+            except Exception:
+                pass  # Ignore any errors during cleanup
+
     def _render_markdown_to_lines(self, text):
         """Render markdown text to a list of lines.
 
@@ -138,14 +146,6 @@ class MarkdownStream:
         # Split rendered output into lines
         return output.splitlines(keepends=True)
 
-    def __del__(self):
-        """Destructor to ensure Live display is properly cleaned up."""
-        if self.live:
-            try:
-                self.live.stop()
-            except Exception:
-                pass  # Ignore any errors during cleanup
-
     def update(self, text, final=False):
         """Update the displayed markdown content.
 
@@ -186,6 +186,7 @@ class MarkdownStream:
 
         # If we have stable content to display...
         if final or num_lines > 0:
+
             # How many stable lines do we need to newly show above the live window?
             num_printed = len(self.printed)
             show = num_lines - num_printed
@@ -203,7 +204,6 @@ class MarkdownStream:
             # Update our record of printed lines
             self.printed = lines[:num_lines]
 
-        # Handle final update cleanup
         if final:
             self.live.update(Text(""))
             self.live.stop()
