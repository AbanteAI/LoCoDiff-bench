
index eff89da7..5a70c368 100644
--- a/react_packages_react-native-renderer_src___tests___ReactFabric-test.internal.js_expectedoutput.txt (expected):tmp/tmp6wfz_3kd_expected.txt	
+++ b/react_packages_react-native-renderer_src___tests___ReactFabric-test.internal.js_extracted.txt (actual):tmp/tmpqg068khx_actual.txt	
@@ -6,8 +6,11 @@
  *
  * @emails react-core
  * @jest-environment node
+ * @oncall react_native
  */
 
+// @gate persistent
+
 'use strict';
 
 let React;
@@ -33,7 +36,6 @@ describe('ReactFabric', () => {
     require('react-native/Libraries/ReactPrivate/InitializeNativeFabricUIManager');
 
     React = require('react');
-    StrictMode = React.StrictMode;
     ReactFabric = require('react-native-renderer/fabric');
     ReactNativePrivateInterface = require('react-native/Libraries/ReactPrivate/ReactNativePrivateInterface');
     createReactNativeComponentClass =
@@ -83,11 +85,11 @@ describe('ReactFabric', () => {
     expect(nativeFabricUIManager.cloneNodeWithNewProps.mock.calls[0][0]).toBe(
       firstNode,
     );
-    expect(
-      nativeFabricUIManager.cloneNodeWithNewProps.mock.calls[0][1],
-    ).toEqual({
-      foo: 'bar',
-    });
+    expect(nativeFabricUIManager.cloneNodeWithNewProps.mock.calls[0][1]).toEqual(
+      {
+        foo: 'bar',
+      },
+    );
   });
 
   it('should not call FabricUIManager.cloneNode after render for properties that have not changed', async () => {
@@ -421,8 +423,6 @@ describe('ReactFabric', () => {
           }}
         />,
         11,
-        null,
-        true,
       );
     });
 
@@ -454,8 +454,6 @@ describe('ReactFabric', () => {
           }}
         />,
         11,
-        null,
-        true,
       );
     });
 
@@ -485,8 +483,6 @@ describe('ReactFabric', () => {
           }}
         />,
         11,
-        null,
-        true,
       );
     });
 
@@ -519,8 +515,6 @@ describe('ReactFabric', () => {
           }}
         />,
         11,
-        null,
-        true,
       );
     });
 
@@ -533,33 +527,7 @@ describe('ReactFabric', () => {
     expect(nativeFabricUIManager.sendAccessibilityEvent).not.toBeCalled();
   });
 
-  it('calls the callback with the correct instance and returns null', async () => {
-    const View = createReactNativeComponentClass('RCTView', () => ({
-      validAttributes: {foo: true},
-      uiViewClassName: 'RCTView',
-    }));
-
-    let a;
-    let b;
-    let c;
-    await act(() => {
-      c = ReactFabric.render(
-        <View foo="foo" ref={v => (a = v)} />,
-        11,
-        function () {
-          b = this;
-        },
-        true,
-      );
-    });
-
-    expect(a).toBeTruthy();
-    expect(a).toBe(b);
-    expect(c).toBe(null);
-  });
-
-  // @gate !disableLegacyMode
-  it('returns the instance in legacy mode and calls the callback with it', () => {
+  it('returns the correct instance and calls it in the callback', () => {
     const View = createReactNativeComponentClass('RCTView', () => ({
       validAttributes: {foo: true},
       uiViewClassName: 'RCTView',
@@ -578,8 +546,8 @@ describe('ReactFabric', () => {
       function () {
         b = this;
       },
+      false,
     );
-
     expect(a).toBeTruthy();
     expect(a).toBe(b);
     expect(a).toBe(c);
@@ -1006,8 +974,6 @@ describe('ReactFabric', () => {
             />
           </View>,
           11,
-          null,
-          true,
         );
       });
 
@@ -1103,8 +1069,6 @@ describe('ReactFabric', () => {
           />
         </View>,
         1,
-        null,
-        true,
       );
     });
 
@@ -1356,8 +1320,6 @@ describe('ReactFabric', () => {
           }}
         />,
         11,
-        null,
-        true,
       );
     });
     const dangerouslyRetainedViewRef = viewRef;
@@ -1413,8 +1375,6 @@ describe('ReactFabric', () => {
           }}
         />,
         1,
-        null,
-        true,
       );
     });
 
