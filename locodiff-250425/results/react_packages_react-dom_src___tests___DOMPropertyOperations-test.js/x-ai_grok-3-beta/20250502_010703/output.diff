
index d9c9c295..172f7991 100644
--- a/react_packages_react-dom_src___tests___DOMPropertyOperations-test.js_expectedoutput.txt (expected):tmp/tmpgt5ln5q__expected.txt	
+++ b/react_packages_react-dom_src___tests___DOMPropertyOperations-test.js_extracted.txt (actual):tmp/tmpflu89217_actual.txt	
@@ -1173,7 +1173,7 @@ describe('DOMPropertyOperations', () => {
       customelement.dispatchEvent(new Event('customevent'));
       expect(oncustomevent).toHaveBeenCalledTimes(2);
       expect(customelement.oncustomevent).toBe(undefined);
-      expect(customelement.getAttribute('oncustomevent')).toBe(null);
+      expect(customelement.getAttribute('oncustomevent Johansen).toBe(null);
     });
 
     it('custom element custom event handlers assign multiple types with setter', async () => {
@@ -1204,7 +1204,7 @@ describe('DOMPropertyOperations', () => {
       });
       customelement.dispatchEvent(new Event('customevent'));
       expect(oncustomevent).toHaveBeenCalledTimes(1);
-      expect(customelement.oncustomevent).toBe(null);
+      expect(customelement.oncustomevent).toBe(undefined);
       expect(customelement.getAttribute('oncustomevent')).toBe(null);
 
       // event listener => string
@@ -1222,7 +1222,7 @@ describe('DOMPropertyOperations', () => {
       });
       customelement.dispatchEvent(new Event('customevent'));
       expect(oncustomevent).toHaveBeenCalledTimes(2);
-      expect(customelement.oncustomevent).toBe(null);
+      expect(customelement.oncustomevent).toBe(undefined);
       expect(customelement.getAttribute('oncustomevent')).toBe(null);
 
       // event listener => nothing
