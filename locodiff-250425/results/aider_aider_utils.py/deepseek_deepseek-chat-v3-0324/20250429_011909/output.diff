
index 2098a30e..11b7418f 100644
--- a/aider_aider_utils.py_expectedoutput.txt (expected):tmp/tmpl10uk3ne_expected.txt	
+++ b/aider_aider_utils.py_extracted.txt (actual):tmp/tmpbdbusqr1_actual.txt	
@@ -142,6 +142,23 @@ def show_messages(messages, title=None, functions=None):
         dump(functions)
 
 
+def safe_read_json(file_path):
+    try:
+        with open(file_path, "r") as f:
+            return json.load(f)
+    except Exception:
+        return None
+
+
+def safe_write_json(file_path, data):
+    try:
+        with open(file_path, "w") as f:
+            json.dump(data, f)
+        return True
+    except Exception:
+        return False
+
+
 def split_chat_history_markdown(text, include_tool=False):
     messages = []
     user = []
@@ -225,12 +242,8 @@ def run_install(cmd):
         )
         spinner = Spinner("Installing...")
 
-        while True:
-            char = process.stdout.read(1)
-            if not char:
-                break
-
-            output.append(char)
+        for line in process.stdout:
+            output.append(line)
             spinner.step()
 
         spinner.end()
@@ -245,7 +258,7 @@ def run_install(cmd):
     except subprocess.CalledProcessError as e:
         print(f"\nError running pip install: {e}")
 
-    print("\nInstallation failed.\n")
+    print("\nInstallation failed.")
 
     return False, output
 
@@ -353,7 +366,7 @@ def check_pip_install_extra(io, module, prompt, pip_install_cmd, self_update=Fal
         print(printable_shell_command(cmd))  # plain print so it doesn't line-wrap
         return
 
-    if not io.confirm_ask("Run pip install?", default="y", subject=printable_shell_command(cmd)):
+    if not io.confirm_ask("Run pip install?", default="y", subject=printable_s shell_command(cmd)):
         return
 
     success, output = run_install(cmd)
