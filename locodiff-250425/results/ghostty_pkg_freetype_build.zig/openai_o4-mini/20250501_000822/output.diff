
index f9093da7..a79c4558 100644
--- a/ghostty_pkg_freetype_build.zig_expectedoutput.txt (expected):tmp/tmpmnzzkf_c_expected.txt	
+++ b/ghostty_pkg_freetype_build.zig_extracted.txt (actual):tmp/tmp320g8xen_actual.txt	
@@ -43,9 +43,7 @@ pub fn build(b: *std.Build) !void {
         const lib = try buildLib(b, module, .{
             .target = target,
             .optimize = optimize,
-
             .libpng_enabled = libpng_enabled,
-
             .dynamic_link_opts = dynamic_link_opts,
         });
 
@@ -55,11 +53,15 @@ pub fn build(b: *std.Build) !void {
     }
 }
 
-fn buildLib(b: *std.Build, module: *std.Build.Module, options: anytype) !*std.Build.Step.Compile {
+fn buildLib(
+    b: *std.Build,
+    module: *std.Build.Module,
+    options: anytype,
+) !*std.Build.Step.Compile {
     const target = options.target;
     const optimize = options.optimize;
-
     const libpng_enabled = options.libpng_enabled;
+    const dynamic_link_opts = options.dynamic_link_opts;
 
     const lib = b.addStaticLibrary(.{
         .name = "freetype",
@@ -76,17 +78,11 @@ fn buildLib(b: *std.Build, module: *std.Build.Module, options: anytype) !*std.Bu
     defer flags.deinit();
     try flags.appendSlice(&.{
         "-DFT2_BUILD_LIBRARY",
-
-        "-DFT_CONFIG_OPTION_SYSTEM_ZLIB=1",
-
         "-DHAVE_UNISTD_H",
         "-DHAVE_FCNTL_H",
-
         "-fno-sanitize=undefined",
     });
 
-    const dynamic_link_opts = options.dynamic_link_opts;
-
     // Zlib
     if (b.systemIntegrationOption("zlib", .{})) {
         lib.linkSystemLibrary2("zlib", dynamic_link_opts);
@@ -121,33 +117,16 @@ fn buildLib(b: *std.Build, module: *std.Build.Module, options: anytype) !*std.Bu
         });
 
         switch (target.result.os.tag) {
-            .linux => lib.addCSourceFile(.{
-                .file = upstream.path("builds/unix/ftsystem.c"),
-                .flags = flags.items,
-            }),
-            .windows => lib.addCSourceFile(.{
-                .file = upstream.path("builds/windows/ftsystem.c"),
-                .flags = flags.items,
-            }),
-            else => lib.addCSourceFile(.{
-                .file = upstream.path("src/base/ftsystem.c"),
-                .flags = flags.items,
-            }),
+            .linux => lib.addCSourceFile(.{ .file = upstream.path("builds/unix/ftsystem.c"), .flags = flags.items }),
+            .windows => lib.addCSourceFile(.{ .file = upstream.path("builds/windows/ftsystem.c"), .flags = flags.items }),
+            else => lib.addCSourceFile(.{ .file = upstream.path("src/base/ftsystem.c"), .flags = flags.items }),
         }
         switch (target.result.os.tag) {
             .windows => {
-                lib.addCSourceFile(.{
-                    .file = upstream.path("builds/windows/ftdebug.c"),
-                    .flags = flags.items,
-                });
-                lib.addWin32ResourceFile(.{
-                    .file = upstream.path("src/base/ftver.rc"),
-                });
+                lib.addCSourceFile(.{ .file = upstream.path("builds/windows/ftdebug.c"), .flags = flags.items });
+                lib.addWin32ResourceFile(.{ .file = upstream.path("src/base/ftver.rc") });
             },
-            else => lib.addCSourceFile(.{
-                .file = upstream.path("src/base/ftdebug.c"),
-                .flags = flags.items,
-            }),
+            else => lib.addCSourceFile(.{ .file = upstream.path("src/base/ftdebug.c"), .flags = flags.items }),
         }
 
         lib.installHeader(b.path("freetype-zig.h"), "freetype-zig.h");
@@ -159,7 +138,6 @@ fn buildLib(b: *std.Build, module: *std.Build.Module, options: anytype) !*std.Bu
     }
 
     b.installArtifact(lib);
-
     return lib;
 }
 
