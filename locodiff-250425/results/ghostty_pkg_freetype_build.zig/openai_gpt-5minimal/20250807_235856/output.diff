
index f9093da7a..80b0320b7 100644
--- a/ghostty_pkg_freetype_build.zig_expectedoutput.txt (expected):tmp/tmp6gjtnscp_expected.txt	
+++ b/ghostty_pkg_freetype_build.zig_extracted.txt (actual):tmp/tmpxll9dzz7_actual.txt	
@@ -60,7 +60,6 @@ fn buildLib(b: *std.Build, module: *std.Build.Module, options: anytype) !*std.Bu
     const optimize = options.optimize;
 
     const libpng_enabled = options.libpng_enabled;
-
     const lib = b.addStaticLibrary(.{
         .name = "freetype",
         .target = target,
@@ -72,6 +71,7 @@ fn buildLib(b: *std.Build, module: *std.Build.Module, options: anytype) !*std.Bu
         try apple_sdk.addPaths(b, lib.root_module);
     }
 
+    module.addIncludePath(upstream.path("include"));
     var flags = std.ArrayList([]const u8).init(b.allocator);
     defer flags.deinit();
     try flags.appendSlice(&.{
@@ -85,6 +85,9 @@ fn buildLib(b: *std.Build, module: *std.Build.Module, options: anytype) !*std.Bu
         "-fno-sanitize=undefined",
     });
 
+    // For dynamic linking, we prefer dynamic linking and to search by
+    // mode first. Mode first will search all paths for a dynamic library
+    // before falling back to static.
     const dynamic_link_opts = options.dynamic_link_opts;
 
     // Zlib
