
index f9093da7a..cc7789b9e 100644
--- a/ghostty_pkg_freetype_build.zig_expectedoutput.txt (expected):tmp/tmp_cm1cysb_expected.txt	
+++ b/ghostty_pkg_freetype_build.zig_extracted.txt (actual):tmp/tmpja6uqrvj_actual.txt	
@@ -43,9 +43,7 @@ pub fn build(b: *std.Build) !void {
         const lib = try buildLib(b, module, .{
             .target = target,
             .optimize = optimize,
-
             .libpng_enabled = libpng_enabled,
-
             .dynamic_link_opts = dynamic_link_opts,
         });
 
@@ -67,6 +65,7 @@ fn buildLib(b: *std.Build, module: *std.Build.Module, options: anytype) !*std.Bu
         .optimize = optimize,
     });
     lib.linkLibC();
+
     if (target.result.os.tag.isDarwin()) {
         const apple_sdk = @import("apple_sdk");
         try apple_sdk.addPaths(b, lib.root_module);
@@ -76,15 +75,10 @@ fn buildLib(b: *std.Build, module: *std.Build.Module, options: anytype) !*std.Bu
     defer flags.deinit();
     try flags.appendSlice(&.{
         "-DFT2_BUILD_LIBRARY",
-
-        "-DFT_CONFIG_OPTION_SYSTEM_ZLIB=1",
-
         "-DHAVE_UNISTD_H",
         "-DHAVE_FCNTL_H",
-
         "-fno-sanitize=undefined",
     });
-
     const dynamic_link_opts = options.dynamic_link_opts;
 
     // Zlib
@@ -96,17 +90,12 @@ fn buildLib(b: *std.Build, module: *std.Build.Module, options: anytype) !*std.Bu
     }
 
     // Libpng
-    _ = b.systemIntegrationOption("libpng", .{}); // So it shows up in help
     if (libpng_enabled) {
         try flags.append("-DFT_CONFIG_OPTION_USE_PNG=1");
-
         if (b.systemIntegrationOption("libpng", .{})) {
             lib.linkSystemLibrary2("libpng", dynamic_link_opts);
         } else {
-            const libpng_dep = b.dependency(
-                "libpng",
-                .{ .target = target, .optimize = optimize },
-            );
+            const libpng_dep = b.dependency("libpng", .{ .target = target, .optimize = optimize });
             lib.linkLibrary(libpng_dep.artifact("png"));
         }
     }
@@ -159,7 +148,6 @@ fn buildLib(b: *std.Build, module: *std.Build.Module, options: anytype) !*std.Bu
     }
 
     b.installArtifact(lib);
-
     return lib;
 }
 
