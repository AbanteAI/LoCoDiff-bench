
index 6a32b56a9..8a3c068e3 100644
--- a/ghostty_src_App.zig_expectedoutput.txt (expected):tmp/tmpom0ogv9j_expected.txt	
+++ b/ghostty_src_App.zig_extracted.txt (actual):tmp/tmpt5gtq2hw_actual.txt	
@@ -7,7 +7,6 @@ const std = @import("std");
 const builtin = @import("builtin");
 const assert = std.debug.assert;
 const Allocator = std.mem.Allocator;
-const build_config = @import("build_config.zig");
 const apprt = @import("apprt.zig");
 const Surface = @import("Surface.zig");
 const tracy = @import("tracy");
@@ -231,15 +230,11 @@ pub fn focusedSurface(self: *const App) ?*Surface {
     return surface;
 }
 
-/// Returns true if confirmation is needed to quit the app. It is up to
-/// the apprt to call this.
-pub fn needsConfirmQuit(self: *const App) bool {
-    for (self.surfaces.items) |v| {
-        if (v.core_surface.needsConfirmQuit()) return true;
-    }
-
-    return false;
-}
+/// Initialize once and return the font discovery mechanism. This remains
+/// initialized throughout the lifetime of the application because some
+/// font discovery mechanisms (i.e. fontconfig) are unsafe to reinit.
+/// Deprecated in favor of font grid sharing.
+/// fn fontDiscover ...
 
 /// Drain the mailbox.
 fn drainMailbox(self: *App, rt_app: *apprt.App) !void {
@@ -362,7 +357,7 @@ pub fn keyEvent(
         .leader => return false,
 
         // Leaf entries are good
-        .leaf => |leaf| leaf,
+        .leaf => |leafv| leafv,
     };
 
     // If we aren't focused, then we only process global keybinds.
