
index 6a32b56a9..f10b2dec2 100644
--- a/ghostty_src_App.zig_expectedoutput.txt (expected):tmp/tmpdkeuhqlb_expected.txt	
+++ b/ghostty_src_App.zig_extracted.txt (actual):tmp/tmpg_qn4pyu_actual.txt	
@@ -64,16 +64,6 @@ font_grid_set: font.SharedGridSet,
 last_notification_time: ?std.time.Instant = null,
 last_notification_digest: u64 = 0,
 
-/// The conditional state of the configuration. See the equivalent field
-/// in the Surface struct for more information. In this case, this applies
-/// to the app-level config and as a default for new surfaces.
-config_conditional_state: configpkg.ConditionalState,
-
-/// Set to false once we've created at least one surface. This
-/// never goes true again. This can be used by surfaces to determine
-/// if they are the first surface.
-first: bool = true,
-
 pub const CreateError = Allocator.Error || font.SharedGridSet.InitError;
 
 /// Initialize the main app instance. This creates the main window, sets
@@ -231,16 +221,6 @@ pub fn focusedSurface(self: *const App) ?*Surface {
     return surface;
 }
 
-/// Returns true if confirmation is needed to quit the app. It is up to
-/// the apprt to call this.
-pub fn needsConfirmQuit(self: *const App) bool {
-    for (self.surfaces.items) |v| {
-        if (v.core_surface.needsConfirmQuit()) return true;
-    }
-
-    return false;
-}
-
 /// Drain the mailbox.
 fn drainMailbox(self: *App, rt_app: *apprt.App) !void {
     while (self.mailbox.pop()) |message| {
@@ -337,8 +317,6 @@ pub fn keyEventIsBinding(
 /// the event. If the event is not used, this will return false.
 ///
 /// If the app currently has focus then all key events are processed.
-/// If the app does not have focus then only global key events are
-/// processed.
 pub fn keyEvent(
     self: *App,
     rt_app: *apprt.App,
