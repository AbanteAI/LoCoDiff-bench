--- tldraw_apps_dotcom_client_src_routes.tsx_expectedoutput.txt (expected)+++ tldraw_apps_dotcom_client_src_routes.tsx_extracted.txt (actual)@@ -1,116 +1,75 @@-import { captureException } from '@sentry/react'
-import { TLRemoteSyncError, TLSyncErrorCloseEventReason } from '@tldraw/sync-core'
-import { Suspense, lazy, useEffect } from 'react'
-import { Helmet } from 'react-helmet-async'
-import { Outlet, Route, createRoutesFromElements, redirect, useRouteError } from 'react-router-dom'
-import { ErrorPage } from './components/ErrorPage/ErrorPage'
-import { notFound } from './pages/not-found'
-import { ROUTES, routes } from './routeDefs'
-import { TlaNotFoundError } from './tla/utils/notFoundError'
+commit 1564c71bcf172ccdc1e89a7f1d6ce3e5a5dd8979
+Author: David Sheldrick <d.j.sheldrick@gmail.com>
+Date:   Mon Mar 3 13:04:23 2025 +0000
 
-const LoginRedirectPage = lazy(() => import('./components/LoginRedirectPage/LoginRedirectPage'))
+    Update admin route (#5532)
+    
+    ### Change type
+    
+    - [x] `other`
 
-export const router = createRoutesFromElements(
-	<Route
-		ErrorBoundary={() => {
-			const error = useRouteError()
-			useEffect(() => {
-				captureException(error)
-			}, [error])
+diff --git a/apps/dotcom/client/src/routes.tsx b/apps/dotcom/client/src/routes.tsx
+index 24a7b993c..d9ca4975c 100644
+--- a/apps/dotcom/client/src/routes.tsx
++++ b/apps/dotcom/client/src/routes.tsx
+@@ -96,7 +96,13 @@ export const router = createRoutesFromElements(
+ 				/>
+ 				{/* Views that require login */}
+ 				<Route lazy={() => import('./tla/providers/RequireSignedInUser')}></Route>
+-				<Route path="/admin" lazy={() => import('./pages/admin')} />
++				{/* Internal routes (hidden from public) */}
++				<Route element={<NoIndex noFollow />}>
++					<Route path="/__debug-tail" lazy={() => import('./tla/pages/worker-debug-tail')} />
++					<Route path="/admin/files" lazy={() => import('./pages/admin/files')} />
++					<Route path="/admin/files/:fileId" lazy={() => import('./pages/admin/file')} />
++					<Route path="/admin/users/:userId" lazy={() => import('./pages/admin/user')} />
++				</Route>
+ 			</Route>
+ 		</Route>
+ 		<Route path="/__debug-tail" lazy={() => import('./tla/pages/worker-debug-tail')} />
+@@ -104,12 +110,19 @@ export const router = createRoutesFromElements(
+ 	</Route>
+ )
+ 
+-function NoIndex() {
++function NoIndex({ noFollow }: { noFollow?: boolean }) {
+ 	return (
+ 		<>
+ 			<Helmet>
+-				<meta name="robots" content="noindex, noimageindex, nofollow" />
++				<meta
++					name="robots"
++					content={`noindex, noimageindex${noFollow ? ', nofollow' : ''}`}
++				/>
+ 			</Helmet>
+ 			<Outlet />
+ 		</>
+ 	)
+ }
++
++NoIndex.defaultProps = {
++	noFollow: false,
++}
 
-			let header = 'Something went wrong'
-			let para1 =
-				'Please try refreshing the page. Still having trouble? Let us know at hello@tldraw.com.'
-			if (error instanceof TLRemoteSyncError) {
-				switch (error.reason) {
-					case TLSyncErrorCloseEventReason.NOT_FOUND: {
-						header = 'Not found'
-						para1 = 'The file you are looking for does not exist.'
-						break
-					}
-					case TLSyncErrorCloseEventReason.NOT_AUTHENTICATED: {
-						return (
-							<Suspense>
-								<LoginRedirectPage />
-							</Suspense>
-						)
-					}
-					case TLSyncErrorCloseEventReason.FORBIDDEN: {
-						header = 'Invite only'
-						para1 = `You don't have permission to view this room.`
-						break
-					}
-					case TLSyncErrorCloseEventReason.RATE_LIMITED: {
-						header = 'Rate limited'
-						para1 = `Please slow down.`
-						break
-					}
-				}
-			}
-			if (error instanceof TlaNotFoundError) {
-				return notFound()
-			}
+commit b03693b8d9a598b4cae5e50f3b2c46a3525fd434
+Author: David Sheldrick <d.j.sheldrick@gmail.com>
+Date:   Tue Mar 4 10:24:08 2025 +0000
 
-			return (
-				<ErrorPage
-					messages={{
-						header,
-						para1,
-					}}
-				/>
-			)
-		}}
-	>
-		<Route lazy={() => import('./tla/providers/TlaRootProviders')}>
-			<Route path={ROUTES.tlaRoot} lazy={() => import('./tla/pages/local')} />
-			<Route element={<NoIndex />}>
-				<Route path={ROUTES.tlaNew} lazy={() => import('./pages/tla-new')} />
-				<Route path={ROUTES.tlaOptIn} loader={() => redirect(routes.tlaRoot())} />
-				<Route path={ROUTES.tlaLocalFile} lazy={() => import('./tla/pages/local-file')} />
-				<Route
-					path={ROUTES.tlaLocalFileIndex}
-					lazy={() => import('./tla/pages/local-file-index')}
-				/>
-				{/* File view */}
-				<Route path={ROUTES.tlaFile} lazy={() => import('./tla/pages/file')} />
-				<Route path={ROUTES.tlaPublish} lazy={() => import('./tla/pages/publish')} />
-				{/* Legacy room */}
-				<Route path={ROUTES.tlaLegacyRoom} lazy={() => import('./tla/pages/legacy-room')} />
-				{/* Legacy readonly */}
-				<Route path={ROUTES.tlaLegacyReadonly} lazy={() => import('./tla/pages/legacy-readonly')} />
-				<Route
-					path={ROUTES.tlaLegacyReadonlyOld}
-					lazy={() => import('./tla/pages/legacy-readonly-old')}
-				/>
-				{/* Legacy snapshot */}
-				<Route path={ROUTES.tlaLegacySnapshot} lazy={() => import('./tla/pages/legacy-snapshot')} />
-				{/* Legacy history */}
-				<Route
-					path={ROUTES.tlaLegacyRoomHistory}
-					lazy={() => import('./tla/pages/legacy-history')}
-				/>
-				{/* Legacy history snapshot */}
-				<Route
-					path={ROUTES.tlaLegacyRoomHistorySnapshot}
-					lazy={() => import('./tla/pages/legacy-history-snapshot')}
-				/>
-				{/* Views that require login */}
-				<Route lazy={() => import('./tla/providers/RequireSignedInUser')}></Route>
-				<Route path="/admin" lazy={() => import('./pages/admin')} />
-			</Route>
-		</Route>
-		<Route path="/__debug-tail" lazy={() => import('./tla/pages/worker-debug-tail')} />
-		<Route path="*" lazy={() => import('./pages/not-found')} />
-	</Route>
-)
+    Fix duplicate debug tail route (#5535)
+    
+    ### Change type
+    
+    - [x] `other`
 
-function NoIndex() {
-	return (
-		<>
-			<Helmet>
-				<meta name="robots" content="noindex, noimageindex, nofollow" />
-			</Helmet>
-			<Outlet />
-		</>
-	)
-}+diff --git a/apps/dotcom/client/src/routes.tsx b/apps/dotcom/client/src/routes.tsx
+index d9ca4975c..0c7f599b7 100644
+--- a/apps/dotcom/client/src/routes.tsx
++++ b/apps/dotcom/client/src/routes.tsx
+@@ -105,7 +105,6 @@ export const router = createRoutesFromElements(
+ 				</Route>
+ 			</Route>
+ 		</Route>
+-		<Route path="/__debug-tail" lazy={() => import('./tla/pages/worker-debug-tail')} />
+ 		<Route path="*" lazy={() => import('./pages/not-found')} />
+ 	</Route>
+ )