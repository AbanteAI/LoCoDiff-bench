
index 05aa599b..4674f8b5 100644
--- a/tldraw_apps_dotcom_client_src_routes.tsx_expectedoutput.txt (expected):tmp/tmpf_8sb_f9_expected.txt	
+++ b/tldraw_apps_dotcom_client_src_routes.tsx_extracted.txt (actual):tmp/tmpuxp61h84_actual.txt	
@@ -10,6 +10,26 @@ import { TlaNotFoundError } from './tla/tldraw_apps_dotcom_client_src_routes.tsx_expectedoutput.txt (expected): PropsWithChildren) {
+	const auth = useAuth()
+	useLayoutEffect(() => {
+		if (!auth.isLoaded) return
+		if (isOverrideFlagSet) return
+		if (auth.isSignedIn && !isProbablyLoggedIn) {
+			setInLocalStorage(tlaProbablyLoggedInFlag, 'true')
+			window.location.reload()
+		} else if (!auth.isSignedIn && isProbablyLoggedIn) {
+			deleteFromLocalStorage(tlaProbablyLoggedInFlag)
+			window.location.reload()
+		}
+	}, [auth.isSignedIn, auth.isLoaded])
+	if (!auth.isLoaded && !isOverrideFlagSet) return null
+	return <>{props.children}</>
+}
+
 export const router = createRoutesFromElements(
 	<Route
 		ErrorBoundary={() => {
@@ -17,10 +37,8 @@ export const router = createRoutesFromElements(
 			useEffect(() => {
 				captureException(error)
 			}, [error])
-
 			let header = 'Something went wrong'
-			let para1 =
-				'Please try refreshing the page. Still having trouble? Let us know at hello@tldraw.com.'
+			let para1 = 'Please try refreshing the page. Still having trouble? Let us know at hello@tldraw.com.'
 			if (error instanceof TLRemoteSyncError) {
 				switch (error.reason) {
 					case TLSyncErrorCloseEventReason.NOT_FOUND: {
@@ -50,56 +68,50 @@ export const router = createRoutesFromElements(
 			if (error instanceof TlaNotFoundError) {
 				return notFound()
 			}
-
-			return (
-				<ErrorPage
-					messages={{
-						header,
-						para1,
-					}}
-				/>
-			)
+			return <ErrorPage messages={{ header, para1 }} />
 		}}
 	>
-		<Route lazy={() => import('./tla/providers/TlaRootProviders')}>
-			<Route path={ROUTES.tlaRoot} lazy={() => import('./tla/pages/local')} />
-			<Route element={<NoIndex />}>
-				<Route path={ROUTES.tlaNew} lazy={() => import('./pages/tla-new')} />
-				<Route path={ROUTES.tlaOptIn} loader={() => redirect(routes.tlaRoot())} />
-				<Route path={ROUTES.tlaLocalFile} lazy={() => import('./tla/pages/local-file')} />
-				<Route
-					path={ROUTES.tlaLocalFileIndex}
-					lazy={() => import('./tla/pages/local-file-index')}
-				/>
-				{/* File view */}
-				<Route path={ROUTES.tlaFile} lazy={() => import('./tla/pages/file')} />
-				<Route path={ROUTES.tlaPublish} lazy={() => import('./tla/pages/publish')} />
-				{/* Legacy room */}
-				<Route path={ROUTES.tlaLegacyRoom} lazy={() => import('./tla/pages/legacy-room')} />
-				{/* Legacy readonly */}
-				<Route path={ROUTES.tlaLegacyReadonly} lazy={() => import('./tla/pages/legacy-readonly')} />
-				<Route
-					path={ROUTES.tlaLegacyReadonlyOld}
-					lazy={() => import('./tla/pages/legacy-readonly-old')}
-				/>
-				{/* Legacy snapshot */}
-				<Route path={ROUTES.tlaLegacySnapshot} lazy={() => import('./tla/pages/legacy-snapshot')} />
-				{/* Legacy history */}
-				<Route
-					path={ROUTES.tlaLegacyRoomHistory}
-					lazy={() => import('./tla/pages/legacy-history')}
-				/>
-				{/* Legacy history snapshot */}
-				<Route
-					path={ROUTES.tlaLegacyRoomHistorySnapshot}
-					lazy={() => import('./tla/pages/legacy-history-snapshot')}
-				/>
-				{/* Views that require login */}
-				<Route lazy={() => import('./tla/providers/RequireSignedInUser')}></Route>
-				<Route path="/admin" lazy={() => import('./pages/admin')} />
+		<Route element={<SetPreviewFlag>}>
+			<Route lazy={() => import('./tla/providers/TlaRootProviders')}>
+				<Route path={ROUTES.tlaRoot} lazy={() => import('./tla/pages/local')} />
+				<Route element={<NoIndex />}>
+					<Route path={ROUTES.tlaNew} lazy={() => import('./pages/tla-new')} />
+					<Route path={ROUTES.tlaOptIn} loader={() => redirect(routes.tlaRoot())} />
+					<Route path={ROUTES.tlaLocalFile} lazy={() => import('./tla/pages/local-file')} />
+					<Route
+						path={ROUTES.tlaLocalFileIndex}
+						lazy={() => import('./tla/pages/local-file-index')}
+					/>
+					{/* File view */}
+					<Route path={ROUTES.tlaFile} lazy={() => import('./tla/pages/file')} />
+					<Route path={ROUTES.tlaPublish} lazy={() => import('./tla/pages/publish')} />
+					{/* Legacy room */}
+					<Route path={ROUTES.tlaLegacyRoom} lazy={() => import('./tla/pages/legacy-room')} />
+					{/* Legacy readonly */}
+					<Route path={ROUTES.tlaLegacyReadonly} lazy={() => import('./tla/pages/legacy-readonly')} />
+					<Route
+						path={ROUTES.tlaLegacyReadonlyOld}
+						lazy={() => import('./tla/pages/legacy-readonly-old')}
+					/>
+					{/* Legacy snapshot */}
+					<Route path={ROUTES.tlaLegacySnapshot} lazy={() => import('./tla/pages/legacy-snapshot')} />
+					{/* Legacy history */}
+					<Route
+						path={ROUTES.tlaLegacyRoomHistory}
+						lazy={() => import('./tla/pages/legacy-history')}
+					/>
+					{/* Legacy history snapshot */}
+					<Route
+						path={ROUTES.tlaLegacyRoomHistorySnapshot}
+						lazy={() => import('./tla/pages/legacy-history-snapshot')}
+					/>
+					{/* Views that require login */}
+					<Route lazy={() => import('./tla/providers/RequireSignedInUser')}></Route>
+					<Route path="/admin" lazy={() => import('./pages/admin')} />
+				</Route>
 			</Route>
+			<Route path="/__debug-tail" lazy={() => import('./tla/pages/worker-debug-tail')} />
 		</Route>
-		<Route path="/__debug-tail" lazy={() => import('./tla/pages/worker-debug-tail')} />
 		<Route path="*" lazy={() => import('./pages/not-found')} />
 	</Route>
 )
