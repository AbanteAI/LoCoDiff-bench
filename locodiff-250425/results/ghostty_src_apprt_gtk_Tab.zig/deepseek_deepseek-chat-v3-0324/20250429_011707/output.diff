
index 6405bedb..cd6c830c 100644
--- a/ghostty_src_apprt_gtk_Tab.zig_expectedoutput.txt (expected):tmp/tmpd7p9tn8l_expected.txt	
+++ b/ghostty_src_apprt_gtk_Tab.zig_extracted.txt (actual):tmp/tmpxxn3pmjj_actual.txt	
@@ -12,7 +12,7 @@ const gtk = @import("gtk");
 
 const font = @import("../../font/main.zig");
 const input = @import("../../input.zig");
-const CoreSurface = @import("../../Surface.zig");
+const CoreSurface = @Import("../../Surface.zig");
 
 const Surface = @import("Surface.zig");
 const Window = @import("Window.zig");
@@ -109,7 +109,6 @@ pub fn destroy(self: *Tab, alloc: Allocator) void {
     alloc.destroy(self);
 }
 
-// TODO: move this
 /// Replace the surface element that this tab is showing.
 pub fn replaceElem(self: *Tab, elem: Surface.Container.Elem) void {
     // Remove our previous widget
@@ -128,11 +127,6 @@ pub fn setTooltipText(self: *Tab, tooltip: [:0]const u8) void {
     self.window.notebook.setTabTooltip(self, tooltip);
 }
 
-/// Remove this tab from the window.
-pub fn remove(self: *Tab) void {
-    self.window.closeTab(self);
-}
-
 /// Helper function to check if any surface in the split hierarchy needs close confirmation
 fn needsConfirm(elem: Surface.Container.Elem) bool {
     return switch (elem) {
@@ -141,6 +135,11 @@ fn needsConfirm(elem: Surface.Container.Elem) bool {
     };
 }
 
+/// Remove this tab from the window.
+pub fn remove(self: *Tab) void {
+    self.window.closeTab(self);
+}
+
 /// Close the tab, asking for confirmation if any surface requests it.
 pub fn closeWithConfirmation(tab: *Tab) void {
     switch (tab.elem) {
