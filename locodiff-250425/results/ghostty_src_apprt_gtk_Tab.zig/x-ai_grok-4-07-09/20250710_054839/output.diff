
index 6405bedb7..31028fd0e 100644
--- a/ghostty_src_apprt_gtk_Tab.zig_expectedoutput.txt (expected):tmp/tmprlxb3gbm_expected.txt	
+++ b/ghostty_src_apprt_gtk_Tab.zig_extracted.txt (actual):tmp/tmppmwm6qzf_actual.txt	
@@ -22,20 +22,10 @@ const log = std.log.scoped(.gtk);
 
 pub const GHOSTTY_TAB = "ghostty_tab";
 
-/// The window that owns this tab.
 window: *Window,
-
-/// The tab label. The tab label is the text that appears on the tab.
 label_text: *gtk.Label,
-
-/// We'll put our children into this box instead of packing them
-/// directly, so that we can send the box into `c.g_signal_connect_data`
-/// for the close button
 box: *gtk.Box,
-
-/// The element of this tab so that we can handle splits and so on.
 elem: Surface.Container.Elem,
-
 // We'll update this every time a Surface gains focus, so that we have it
 // when we switch to another Tab. Then when we switch back to this tab, we
 // can easily re-focus that terminal.
@@ -98,18 +88,15 @@ pub fn init(self: *Tab, window: *Window, parent_: ?*CoreSurface) !void {
     surface.grabFocus();
 }
 
-/// Deinits tab by deiniting child elem.
 pub fn deinit(self: *Tab, alloc: Allocator) void {
     self.elem.deinit(alloc);
 }
 
-/// Deinit and deallocate the tab.
 pub fn destroy(self: *Tab, alloc: Allocator) void {
     self.deinit(alloc);
     alloc.destroy(self);
 }
 
-// TODO: move this
 /// Replace the surface element that this tab is showing.
 pub fn replaceElem(self: *Tab, elem: Surface.Container.Elem) void {
     // Remove our previous widget
@@ -128,19 +115,10 @@ pub fn setTooltipText(self: *Tab, tooltip: [:0]const u8) void {
     self.window.notebook.setTabTooltip(self, tooltip);
 }
 
-/// Remove this tab from the window.
 pub fn remove(self: *Tab) void {
     self.window.closeTab(self);
 }
 
-/// Helper function to check if any surface in the split hierarchy needs close confirmation
-fn needsConfirm(elem: Surface.Container.Elem) bool {
-    return switch (elem) {
-        .surface => |s| s.core_surface.needsConfirmQuit(),
-        .split => |s| needsConfirm(s.top_left) or needsConfirm(s.bottom_right),
-    };
-}
-
 /// Close the tab, asking for confirmation if any surface requests it.
 pub fn closeWithConfirmation(tab: *Tab) void {
     switch (tab.elem) {
@@ -161,9 +139,15 @@ pub fn closeWithConfirmation(tab: *Tab) void {
     }
 }
 
+fn needsConfirm(elem: Surface.Container.Elem) bool {
+    return switch (elem) {
+        .surface => |s| s.core_surface.needsConfirmQuit(),
+        .split => |s| needsConfirm(s.top_left) or needsConfirm(s.bottom_right),
+    };
+}
+
 fn gtkDestroy(_: *gtk.Box, self: *Tab) callconv(.C) void {
     log.debug("tab box destroy", .{});
-
     const alloc = self.window.app.core_app.alloc;
 
     // When our box is destroyed, we want to destroy our tab, too.
