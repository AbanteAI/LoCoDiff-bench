--- tldraw_packages_tldraw_src_lib_shapes_arrow_ArrowShapeUtil.tsx_expectedoutput.txt (expected)+++ tldraw_packages_tldraw_src_lib_shapes_arrow_ArrowShapeUtil.tsx_extracted.txt (actual)@@ -65,6 +65,8 @@ 	removeArrowBinding,
 } from './shared'
 
+export const ARROW_END_OFFSET = 0.1
+
 enum ARROW_HANDLES {
 	START = 'start',
 	MIDDLE = 'middle',
@@ -247,9 +249,10 @@ 			// Skip binding
 			removeArrowBinding(this.editor, shape, handleId)
 
+			const newPoint = maybeSnapToGrid(new Vec(handle.x, handle.y), this.editor)
 			update.props![handleId] = {
-				x: handle.x,
-				y: handle.y,
+				x: newPoint.x,
+				y: newPoint.y,
 			}
 			return update
 		}
@@ -303,7 +306,11 @@ 
 			// Double check that we're not going to be doing an imprecise snap on
 			// the same shape twice, as this would result in a zero length line
-			if (otherBinding && target.id === otherBinding.toId && otherBinding.props.isPrecise) {
+			if (
+				otherBinding &&
+				target.id === otherBinding.toId &&
+				otherBinding.props.isPrecise
+			) {
 				precise = true
 			}
 		}
@@ -372,8 +379,7 @@ 				(selectedShapeIds.includes(bindings.start.toId) ||
 					this.editor.isAncestorSelected(bindings.start.toId))) ||
 			(bindings.end &&
-				(selectedShapeIds.includes(bindings.end.toId) ||
-					this.editor.isAncestorSelected(bindings.end.toId)))
+				(selectedShapeIds.includes(bindings.end.toId) || this.editor.isAncestorSelected(bindings.end.toId)))
 		) {
 			return
 		}
@@ -604,8 +610,6 @@ 	}
 
 	component(shape: TLArrowShape) {
-		// eslint-disable-next-line react-hooks/rules-of-hooks
-		const theme = useDefaultColorTheme()
 		const onlySelectedShape = this.editor.getOnlySelectedShape()
 		const shouldDisplayHandles =
 			this.editor.isInAny(
@@ -643,7 +647,7 @@ 						align="middle"
 						verticalAlign="middle"
 						text={shape.props.text}
-						labelColor={theme[shape.props.labelColor].solid}
+						labelColor={shape.props.labelColor}
 						textWidth={labelPosition.box.w - ARROW_LABEL_PADDING * 2 * shape.props.scale}
 						isSelected={isSelected}
 						padding={0}
@@ -726,8 +730,8 @@ 						<rect
 							x={bounds.minX - 100}
 							y={bounds.minY - 100}
-							width={bounds.width + 200}
-							height={bounds.height + 200}
+							width={bounds.w + 200}
+							height={bounds.h + 200}
 							opacity={0}
 						/>
 					)}
@@ -736,16 +740,6 @@ 				</g>
 				{as && <path d={as} />}
 				{ae && <path d={ae} />}
-				{labelGeometry && (
-					<rect
-						x={toDomPrecision(labelGeometry.x)}
-						y={toDomPrecision(labelGeometry.y)}
-						width={labelGeometry.w}
-						height={labelGeometry.h}
-						rx={3.5}
-						ry={3.5}
-					/>
-				)}
 			</g>
 		)
 	}
@@ -807,6 +801,7 @@ 			},
 		]
 	}
+
 	override getInterpolatedProps(
 		startShape: TLArrowShape,
 		endShape: TLArrowShape,
