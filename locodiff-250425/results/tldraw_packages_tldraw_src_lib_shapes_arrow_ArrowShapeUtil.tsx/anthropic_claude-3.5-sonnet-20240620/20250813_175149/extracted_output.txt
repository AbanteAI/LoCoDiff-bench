override canTabTo(shape: TLArrowShape) {
  const bindings = getArrowBindings(this.editor, shape)
  return !!(bindings.start || bindings.end || shape.props.text)
}
```

This allows arrow shapes to be tabbed to if they have bindings or text.

2. Added a `getFontFaces` method:

```typescript
override getFontFaces(shape: TLArrowShape): TLFontFace[] {
  if (!shape.props.text) return EMPTY_ARRAY
  return [DefaultFontFaces[`tldraw_${shape.props.font}`].normal.normal]
}
```

This returns the font face to use for the arrow's text label.

3. Updated the `getGeometry` method to use `debugFlags`:

```typescript
if (debugFlags.debugGeometry.get()) debugGeom.push(...labelPosition.debugGeom)