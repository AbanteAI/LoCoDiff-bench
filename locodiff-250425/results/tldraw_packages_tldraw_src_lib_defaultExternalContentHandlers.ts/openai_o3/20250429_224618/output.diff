
index 419f10c6..45eb5e45 100644
--- a/tldraw_packages_tldraw_src_lib_defaultExternalContentHandlers.ts_expectedoutput.txt (expected):tmp/tmp82pcbnhu_expected.txt	
+++ b/tldraw_packages_tldraw_src_lib_defaultExternalContentHandlers.ts_extracted.txt (actual):tmp/tmpo7g5lns8_actual.txt	
@@ -1,7 +1,7 @@
 import {
 	AssetRecordType,
-	DEFAULT_SUPPORTED_IMAGE_TYPES,
 	DEFAULT_SUPPORT_VIDEO_TYPES,
+	DEFAULT_SUPPORTED_IMAGE_TYPES,
 	Editor,
 	MediaHelpers,
 	TLAsset,
@@ -440,23 +440,6 @@ export async function defaultHandleExternalTextContent(
 		? renderRichTextFromHTML(editor, html)
 		: toRichText(cleanedUpPlaintext)
 
-	// todo: discuss
-	// If we have one shape with rich text selected, update the shape's text.
-	// const onlySelectedShape = editor.getOnlySelectedShape()
-	// if (onlySelectedShape && 'richText' in onlySelectedShape.props) {
-	// 	editor.updateShapes([
-	// 		{
-	// 			id: onlySelectedShape.id,
-	// 			type: onlySelectedShape.type,
-	// 			props: {
-	// 				richText: richTextToPaste,
-	// 			},
-	// 		},
-	// 	])
-
-	// 	return
-	// }
-
 	// Measure the text with default values
 	let w: number
 	let h: number
@@ -664,7 +647,6 @@ export async function getMediaAssetInfoPartial(
 	} as TLImageAsset | TLVideoAsset
 
 	if (maxImageDimension && isFinite(maxImageDimension)) {
-		const size = { w: assetInfo.props.w, h: assetInfo.props.h }
 		const resizedSize = containBoxSize(size, { w: maxImageDimension, h: maxImageDimension })
 		if (size !== resizedSize && MediaHelpers.isStaticImageType(file.type)) {
 			assetInfo.props.w = resizedSize.w
