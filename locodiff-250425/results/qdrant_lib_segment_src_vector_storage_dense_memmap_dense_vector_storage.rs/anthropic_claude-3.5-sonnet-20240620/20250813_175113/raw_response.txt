Here are the key changes made to the `memmap_dense_vector_storage.rs` file over time:

1. The initial implementation added basic functionality for a memory-mapped dense vector storage.

2. Support for byte and half-precision float vector types was added.

3. The `update_from` method was modified to take an iterator of vectors instead of IDs.

4. Debug trait implementation was added.

5. The `get_dense_batch` method was updated to use `MaybeUninit` for better performance.

6. Methods for populating and clearing the disk cache were added.

7. The `is_stopped` parameter was removed from the `RawScorer` interface.

8. The `clear_disk_cache` function was moved to a new `memory::fadvise` module.

9. Hardware counter support was added to track I/O operations.

10. The storage now uses `OneshotFile` for more efficient disk cache management.

The overall trend was towards improving performance, adding support for different vector types, enhancing caching behavior, and refining the API. The storage became more flexible and gained better control over memory and disk usage over time.