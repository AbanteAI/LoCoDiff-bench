
index 153c7d55..a2e8b28d 100644
--- a/qdrant_lib_segment_src_index_field_index_numeric_index_mutable_numeric_index.rs_expectedoutput.txt (expected):tmp/tmpp8903re2_expected.txt	
+++ b/qdrant_lib_segment_src_index_field_index_numeric_index_mutable_numeric_index.rs_extracted.txt (actual):tmp/tmpw3024eev_actual.txt	
@@ -9,7 +9,7 @@ use parking_lot::RwLock;
 use rocksdb::DB;
 
 use super::{
-    Encodable, HISTOGRAM_MAX_BUCKET_SIZE, HISTOGRAM_PRECISION, numeric_index_storage_cf_name,
+    numeric_index_storage_cf_name, Encodable, HISTOGRAM_MAX_BUCKET_SIZE, HISTOGRAM_PRECISION,
 };
 use crate::common::operation_error::{OperationError, OperationResult};
 use crate::common::rocksdb_buffered_delete_wrapper::DatabaseColumnScheduledDeleteWrapper;
@@ -83,7 +83,7 @@ impl<T: Encodable + Numericable + Default> InMemoryNumericIndex<T> {
         Some(Box::new(
             self.point_to_values
                 .get(idx as usize)
-                .map(|v| v.iter().cloned())?,
+                .map(|v| v.iter().copied())?,
         ))
     }
 
@@ -257,7 +257,7 @@ impl<T: Encodable + Numericable + Default> MutableNumericIndex<T> {
         for value in &values {
             let key = value.encode_key(idx);
             self.db_wrapper.put(&key, idx.to_be_bytes())?;
-            hw_cell_wb.incr_delta(size_of_val(&key) + size_of_val(&idx));
+            hw_cell_wb.incr_delta(std::mem::size_of_val(&key) + std::mem::size_of_val(&idx));
         }
 
         self.in_memory_index.add_many_to_list(idx, values);
