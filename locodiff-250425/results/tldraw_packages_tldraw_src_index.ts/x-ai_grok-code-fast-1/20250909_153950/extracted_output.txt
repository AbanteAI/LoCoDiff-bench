/// <reference types="react" />

import { registerTldrawLibraryVersion } from '@tldraw/editor'
export { usePrefersReducedMotion } from './lib/shapes/shared/usePrefersReducedMotion'
export { DefaultA11yAnnouncer, useSelectedShapesAnnouncer } from './lib/ui/components/A11y'
export { ColorSchemeMenu } from './lib/ui/components/ColorSchemeMenu'
export { DefaultDialogs } from './lib/ui/components/Dialogs'
export { DefaultToasts } from './lib/ui/components/Toasts'
export {
	TldrawUiMenuActionCheckboxItem,
	type TLUiMenuActionCheckboxItemProps,
} from './lib/ui/components/primitives/menus/TldrawUiMenuActionCheckboxItem'
export {
	TldrawUiMenuActionItem,
	type TLUiMenuActionItemProps,
} from './lib/ui/components/primitives/menus/TldrawUiMenuActionItem'
export {
	TldrawUiMenuToolItem,
	type TLUiMenuToolItemProps,
} from './lib/ui/components/primitives/menus/TldrawUiMenuToolItem'
export { TldrawUiDialogsProvider, type TLUiDialogsProviderProps } from './lib/ui/context/dialogs'
export { TldrawUiToastsProvider, type TLUiToastsProviderProps } from './lib/ui/context/toasts'
export { TldrawUiTranslationProvider } from './lib/ui/hooks/useTranslation/useTranslation'
// eslint-disable-next-line local/no-export-star
export * from '@tldraw/editor'
export { Tldraw, type TLComponents, type TldrawBaseProps, type TldrawProps } from './lib/Tldraw'
export { TldrawImage, type TldrawImageProps } from './lib/TldrawImage'
export { ArrowBindingUtil } from './lib/bindings/arrow/ArrowBindingUtil'
export { TldrawHandles } from './lib/canvas/TldrawHandles'
export { TldrawScribble } from './lib/canvas/TldrawScribble'
export { TldrawSelectionBackground } from './lib/canvas/TldrawSelectionBackground'
export { TldrawSelectionForeground } from './lib/canvas/TldrawSelectionForeground'
export { TldrawShapeIndicators } from './lib/canvas/TldrawShapeIndicators'
export { defaultBindingUtils } from './lib/defaultBindingUtils'
export {
	DEFAULT_EMBED_DEFINITIONS,
	embedShapePermissionDefaults,
	type CustomEmbedDefinition,
	type DefaultEmbedDefinitionType,
	type EmbedDefinition,
	type TLEmbedDefinition,
	type TLEmbedShapePermissions,
} from './lib/defaultEmbedDefinitions'
export {
	DEFAULT_MAX_ASSET_SIZE,
	DEFAULT_MAX_IMAGE_DIMENSION,
	centerSelectionAroundPoint,
	createEmptyBookmarkShape,
	createShapesForAssets,
	defaultHandleExternalEmbedContent,
	defaultHandleExternalExcalidrawContent,
	defaultHandleExternalFileAsset,
	defaultHandleExternalFileContent,
	defaultHandleExternalSvgTextContent,
	defaultHandleExternalTextContent,
	defaultHandleExternalTldrawContent,
	defaultHandleExternalUrlAsset,
	defaultHandleExternalUrlContent,
	getMediaAssetInfoPartial,
	registerDefaultExternalContentHandlers,
	type TLDefaultExternalContentHandlerOpts,
	type TLExternalAsset,
	type TLExternalContentProps,
} from './lib/defaultExternalContentHandlers'
export { defaultShapeTools } from './lib/defaultShapeTools'
export { defaultShapeUtils } from './lib/defaultShapeUtils'
export { registerDefaultSideEffects } from './lib/defaultSideEffects'
export { defaultTools } from './lib/defaultTools'
export { ArrowShapeTool } from './lib/shapes/arrow/ArrowShapeTool'
export { ArrowShapeUtil } from './lib/shapes/arrow/ArrowShapeUtil'
export { type TLArcInfo, type TLArrowInfo, type TLArrowPoint } from './lib/shapes/arrow/arrow-types'
export {
	getArrowBindings,
	getArrowTerminalsInArrowSpace,
	type TLArrowBindings,
} from './lib/shapes/arrow/shared'
export { BookmarkShapeUtil } from './lib/shapes/bookmark/BookmarkShapeUtil'
export { DrawShapeTool } from './lib/shapes/draw/DrawShapeTool'
export { DrawShapeUtil, type DrawShapeOptions } from './lib/shapes/draw/DrawShapeUtil'
export { EmbedShapeUtil } from './lib/shapes/embed/EmbedShapeUtil'
export { FrameShapeTool } from './lib/shapes/frame/FrameShapeTool'
export { FrameShapeUtil, type FrameShapeOptions } from './lib/shapes/frame/FrameShapeUtil'
export { GeoShapeTool } from './lib/shapes/geo/GeoShapeTool'
export { GeoShapeUtil } from './lib/shapes/geo/GeoShapeUtil'
export { HighlightShapeTool } from './lib/shapes/highlight/HighlightShapeTool'
export {
	HighlightShapeUtil,
	type HighlightShapeOptions,
} from './lib/shapes/highlight/HighlightShapeUtil'
export { ImageShapeUtil } from './lib/shapes/image/ImageShapeUtil'
export { LineShapeTool } from './lib/shapes/line/LineShapeTool'
export { LineShapeUtil } from './lib/shapes/line/LineShapeUtil'
export { NoteShapeTool } from './lib/shapes/note/NoteShapeTool'
export { NoteShapeUtil, type NoteShapeOptions } from './lib/shapes/note/NoteShapeUtil'
export {
	PlainTextLabel,
	TextLabel,
	type PlainTextLabelProps,
} from './lib/shapes/shared/PlainTextLabel'
export {
	RichTextLabel,
	RichTextSVG,
	type RichTextLabelProps,
	type RichTextSVGProps,
} from './lib/shapes/shared/RichTextLabel'
export {
	getCropBox,
	getDefaultCrop,
	getUncroppedSize,
	type CropBoxOptions,
} from './lib/shapes/shared/crop'
export {
	ARROW_LABEL_FONT_SIZES,
	FONT_FAMILIES,
	FONT_SIZES,
	LABEL_FONT_SIZES,
	STROKE_SIZES,
	TEXT_PROPS,
} from './lib/shapes/shared/default-shape-constants'
export {
	DefaultFontFaces,
	allDefaultFontFaces,
	type TLDefaultFont,
	type TLDefaultFonts,
} from './lib/shapes/shared/defaultFonts'
export { useDefaultColorTheme } from './lib/shapes/shared/useDefaultColorTheme'
export { useEditablePlainText, useEditableText } from './lib/shapes/shared/useEditablePlainText'
export { useEditableRichText } from './lib/shapes/shared/useEditableRichText'
export {
	useAsset,
	useImageOrVideoAsset,
	type UseImageOrVideoAssetOptions,
} from './lib/shapes/shared/useImageOrVideoAsset'
export { PlainTextArea } from './lib/shapes/text/PlainTextArea'
export { RichTextArea, type TextAreaProps } from './lib/shapes/text/RichTextArea'
export { TextShapeTool } from './lib/shapes/text/TextShapeTool'
export { TextShapeUtil, type TextShapeOptions } from './lib/shapes/text/TextShapeUtil'
export { VideoShapeUtil } from './lib/shapes/video/VideoShapeUtil'
export { type StyleValuesForUi } from './lib/styles'
export { EraserTool } from './lib/tools/EraserTool/EraserTool'
export { HandTool } from './lib/tools/HandTool/HandTool'
export { LaserTool } from './lib/tools/LaserTool/LaserTool'
export { SelectTool } from './lib/tools/SelectTool/SelectTool'
export { getOccludedChildren, kickoutOccludedShapes } from './lib/tools/SelectTool/selectHelpers'
export { ZoomTool } from './lib/tools/ZoomTool/ZoomTool'
export { TldrawUi, type TldrawUiProps } from './lib/ui/TldrawUi'
export {
	setDefaultUiAssetUrls,
	type TLUiAssetUrlOverrides,
	type TLUiAssetUrls,
} from './lib/ui/assetUrls'
export { getAssetFromIndexedDb, storeAssetInIndexedDb } from './lib/AssetBlobStore'
export { OfflineIndicator } from './lib/ui/components/OfflineIndicator/OfflineIndicator'
export { Spinner } from './lib/ui/components/Spinner'
export { PORTRAIT_BREAKPOINT } from './lib/ui/constants'
export {
	TldrawUiContextProvider,
	type TLUiContextProviderProps,
} from './lib/ui/context/TldrawUiContextProvider'
export {
	TldrawUiA11yProvider,
	useA11y,
	type A11yPriority,
	type A11yProviderProps,
	type TLUiA11y,
	type TLUiA11yContextType,
} from './lib/ui/context/a11y'
export {
	unwrapLabel,
	useActions,
	type ActionsProviderProps,
	type TLUiActionItem,
	type TLUiActionsContextType,
} from './lib/ui/context/actions'
export { AssetUrlsProvider, useAssetUrls } from './lib/ui/context/asset-urls'
export { BreakPointProvider, useBreakpoint, type BreakPointProviderProps } from './lib/ui/context/breakpoints'
export {
	TldrawUiComponentsProvider,
	useTldrawUiComponents,
	type TLUiComponents,
	type TLUiComponentsProviderProps,
} from './lib/ui/context/components'
export {
	TldrawUiDialogsProvider,
	useDialogs,
	type TLUiDialog,
	type TLUiDialogProps,
	type TLUiDialogsContextType,
	type TLUiDialogsProviderProps,
} from './lib/ui/context/dialogs'
export {
	TldrawUiEventsProvider,
	useUiEvents,
	type EventsProviderProps,
	type TLUiEventContextType,
	type TLUiEventData,
	type TLUiEventHandler,
	type TLUiEventMap,
	type TLUiEventSource,
} from './lib/ui/context/events'
export {
	TldrawUiToastsProvider,
	useToasts,
	type AlertSeverity,
	type TLUiToast,
	type TLUiToastAction,
	type TLUiToastsContextType,
	type TLUiToastsProviderProps,
} from './lib/ui/context/toasts'
export { useCanRedo, useCanUndo } from './lib/ui/hooks/menu-hooks'
export { useMenuClipboardEvents, useNativeClipboardEvents } from './lib/ui/hooks/useClipboardEvents'
export { useCollaborationStatus, useShowCollaborationUi } from './lib/ui/hooks/useCollaborationStatus'
export { useCopyAs } from './lib/ui/hooks/useCopyAs'
export { useExportAs } from './lib/ui/hooks/useExportAs'
export { useKeyboardShortcuts } from './lib/ui/hooks/useKeyboardShortcuts'
export { useLocalStorageState } from './lib/ui/hooks/useLocalStorageState'
export { useMenuIsOpen } from './lib/ui/hooks/useMenuIsOpen'
export { useReadonly } from './lib/ui/hooks/useReadonly'
export { useRelevantStyles } from './lib/ui/hooks/useRelevantStyles'
export {
	useTools,
	type TLUiToolItem,
	type TLUiToolsContextType,
	type TLUiToolsProviderProps,
} from './lib/ui/hooks/useTools'
export { type TLUiTranslationKey } from './lib/ui/hooks/useTranslation/TLUiTranslationKey'
export { type TLUiTranslation } from './lib/ui/hooks/useTranslation/translations'
export {
	useCurrentTranslation,
	useTranslation,
	type TLUiTranslationContextType,
	type TLUiTranslationProviderProps,
} from './lib/ui/hooks/useTranslation/useTranslation'
export { type TLUiIconType } from './lib/ui/icon-types'
export { useDefaultHelpers, type TLUiOverrideHelpers, type TLUiOverrides } from './lib/ui/overrides'
export { containBoxSize, downsizeImage, type BoxWidthHeight } from './lib/utils/assets/assets'
export { preloadFont, type TLTypeFace } from './lib/utils/assets/preload-font'
export { getEmbedInfo, type TLEmbedResult } from './lib/utils/embeds/embeds'
export { copyAs, type CopyAsOptions, type TLCopyType } from './lib/utils/export/copyAs'
export { downloadFile, exportAs, type ExportAsOptions } from './lib/utils/export/exportAs'
export { fitFrameToContent, removeFrame } from './lib/utils/frames/frames'
export {
	defaultEditorAssetUrls,
	setDefaultEditorAssetUrls,
	type TLEditorAssetUrls,
} from './lib/utils/static-assets/assetUrls'
export { truncateStringWithEllipsis } from './lib/utils/text/text'
export {
	TLV1AlignStyle,
	TLV1AssetType,
	TLV1ColorStyle,
	TLV1DashStyle,
	TLV1Decoration,
	TLV1FontStyle,
	TLV1ShapeType,
	TLV1SizeStyle,
	buildFromV1Document,
	type TLV1ArrowBinding,
	type T