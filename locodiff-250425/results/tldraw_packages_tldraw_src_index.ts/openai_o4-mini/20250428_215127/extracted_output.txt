/// <reference types="react" />

import { registerTldrawLibraryVersion } from '@tldraw/editor'

export { usePrefersReducedMotion } from './lib/shapes/shared/usePrefersReducedMotion'
export { DefaultA11yAnnouncer, useSelectedShapesAnnouncer } from './lib/ui/components/A11y'
export { ColorSchemeMenu } from './lib/ui/components/ColorSchemeMenu'
export { DefaultDialogs } from './lib/ui/components/Dialogs'
export { DefaultToasts } from './lib/ui/components/Toasts'

export {
  TldrawUiMenuActionCheckboxItem,
  type TLUiMenuActionCheckboxItemProps,
} from './lib/ui/components/primitives/menus/TldrawUiMenuActionCheckboxItem'
export {
  TldrawUiMenuActionItem,
  type TLUiMenuActionItemProps,
} from './lib/ui/components/primitives/menus/TldrawUiMenuActionItem'
export {
  TldrawUiMenuToolItem,
  type TLUiMenuToolItemProps,
} from './lib/ui/components/primitives/menus/TldrawUiMenuToolItem'

// eslint-disable-next-line local/no-export-star
export * from '@tldraw/editor'

export { Tldraw, type TLComponents, type TldrawBaseProps, type TldrawProps } from './lib/Tldraw'
export { TldrawImage, type TldrawImageProps } from './lib/TldrawImage'
export { ArrowBindingUtil } from './lib/bindings/arrow/ArrowBindingUtil'
export { TldrawHandles } from './lib/canvas/TldrawHandles'
export { TldrawScribble } from './lib/canvas/TldrawScribble'
export { TldrawSelectionBackground } from './lib/canvas/TldrawSelectionBackground'
export { TldrawSelectionForeground } from './lib/canvas/TldrawSelectionForeground'
export { TldrawShapeIndicators } from './lib/canvas/TldrawShapeIndicators'

export { defaultBindingUtils } from './lib/defaultBindingUtils'

export {
  centerSelectionAroundPoint,
  createShapesForAssets,
  registerDefaultExternalContentHandlers,
} from './lib/defaultExternalContentHandlers'

export { defaultShapeTools } from './lib/defaultShapeTools'
export { defaultShapeUtils } from './lib/defaultShapeUtils'
export { defaultTools } from './lib/defaultTools'

export { ArrowShapeTool } from './lib/shapes/arrow/ArrowShapeTool'
export { ArrowShapeUtil } from './lib/shapes/arrow/ArrowShapeUtil'
export { type TLArcInfo, type TLArrowInfo, type TLArrowPoint } from './lib/shapes/arrow/arrow-types'
export {
  getArrowBindings,
  getArrowTerminalsInArrowSpace,
  type TLArrowBindings,
} from './lib/shapes/arrow/shared'

export { BookmarkShapeUtil } from './lib/shapes/bookmark/BookmarkShapeUtil'
export { DrawShapeTool } from './lib/shapes/draw/DrawShapeTool'
export { DrawShapeUtil, type DrawShapeOptions } from './lib/shapes/draw/DrawShapeUtil'
export { EmbedShapeUtil } from './lib/shapes/embed/EmbedShapeUtil'
export { FrameShapeTool } from './lib/shapes/frame/FrameShapeTool'
export { FrameShapeUtil, type FrameShapeOptions } from './lib/shapes/frame/FrameShapeUtil'
export { GeoShapeTool } from './lib/shapes/geo/GeoShapeTool'
export { GeoShapeUtil } from './lib/shapes/geo/GeoShapeUtil'
export { HighlightShapeTool } from './lib/shapes/highlight/HighlightShapeTool'
export {
  HighlightShapeUtil,
  type HighlightShapeOptions,
} from './lib/shapes/highlight/HighlightShapeUtil'
export { ImageShapeUtil } from './lib/shapes/image/ImageShapeUtil'
export { LineShapeTool } from './lib/shapes/line/LineShapeTool'
export { LineShapeUtil } from './lib/shapes/line/LineShapeUtil'
export { NoteShapeTool } from './lib/shapes/note/NoteShapeTool'
export { NoteShapeUtil, type NoteShapeOptions } from './lib/shapes/note/NoteShapeUtil'
export {
  PlainTextLabel,
  TextLabel,
  type PlainTextLabelProps,
} from './lib/shapes/shared/PlainTextLabel'
export {
  RichTextLabel,
  RichTextSVG,
  type RichTextLabelProps,
  type RichTextSVGProps,
} from './lib/shapes/shared/RichTextLabel'
export {
  ARROW_LABEL_FONT_SIZES,
  FONT_FAMILIES,
  FONT_SIZES,
  LABEL_FONT_SIZES,
  STROKE_SIZES,
  TEXT_PROPS,
} from './lib/shapes/shared/default-shape-constants'
export { useDefaultColorTheme } from './lib/shapes/shared/useDefaultColorTheme'
export { getCropBox, getDefaultCrop, getUncroppedSize, type CropBoxOptions } from './lib/shapes/shared/crop'
export {
  useAsset,
  useImageOrVideoAsset,
  type UseImageOrVideoAssetOptions,
} from './lib/shapes/shared/useImageOrVideoAsset'
export { useEditablePlainText, useEditableText } from './lib/shapes/shared/useEditablePlainText'
export { useEditableRichText } from './lib/shapes/shared/useEditableRichText'
export { PlainTextArea } from './lib/shapes/text/PlainTextArea'
export { RichTextArea, type TextAreaProps } from './lib/shapes/text/RichTextArea'
export { TextShapeTool } from './lib/shapes/text/TextShapeTool'
export { TextShapeUtil, type TextShapeOptions } from './lib/shapes/text/TextShapeUtil'
export { VideoShapeUtil } from './lib/shapes/video/VideoShapeUtil'

export { type StyleValuesForUi } from './lib/styles'

export { EraserTool } from './lib/tools/EraserTool/EraserTool'
export { HandTool } from './lib/tools/HandTool/HandTool'
export { LaserTool } from './lib/tools/LaserTool/LaserTool'
export { SelectTool, getOccludedChildren, kickoutOccludedShapes } from './lib/tools/SelectTool/selectHelpers'
export { ZoomTool } from './lib/tools/ZoomTool/ZoomTool'

export { DefaultDialogs } from './lib/ui/components/Dialogs'
export { DefaultToasts } from './lib/ui/components/Toasts'
export { TldrawUiTranslationProvider } from './lib/ui/hooks/useTranslation/useTranslation'
export { DefaultRichTextToolbar, type TLUiRichTextToolbarProps } from './lib/ui/components/Toolbar/DefaultRichTextToolbar'
export {
  DefaultRichTextToolbarContent,
  type DefaultRichTextToolbarContentProps,
} from './lib/ui/components/Toolbar/DefaultRichTextToolbarContent'
export { TldrawUiContextProvider, type TLUiContextProviderProps } from './lib/ui/context/TldrawUiContextProvider'
export {
  unwrapLabel,
  useActions,
  type ActionsProviderProps,
  type TLUiActionItem,
  type TLUiActionsContextType,
} from './lib/ui/context/actions'
export { AssetUrlsProvider, useAssetUrls } from './lib/ui/context/asset-urls'
export {
  BreakPointProvider,
  useBreakpoint,
  type BreakPointProviderProps,
} from './lib/ui/context/breakpoints'
export {
  TldrawUiComponentsProvider,
  useTldrawUiComponents,
  type TLUiComponents,
  type TLUiComponentsProviderProps,
} from './lib/ui/context/components'
export {
  useDialogs,
  type TLUiDialog,
  type TLUiDialogProps,
  type TLUiDialogsContextType,
  type TLUiDialogsProviderProps,
} from './lib/ui/context/dialogs'
export {
  TldrawUiA11yProvider,
  useA11y,
  type A11yPriority,
  type A11yProviderProps,
  type TLUiA11y,
  type TLUiA11yContextType,
} from './lib/ui/context/a11y'
export {
  TldrawUiEventsProvider,
  useUiEvents,
  type EventsProviderProps,
  type TLUiEventContextType,
  type TLUiEventData,
  type TLUiEventHandler,
  type TLUiEventMap,
  type TLUiEventSource,
} from './lib/ui/context/events'
export {
  TldrawUiToastsProvider,
  useToasts,
  type AlertSeverity,
  type TLUiToast,
  type TLUiToastAction,
  type TLUiToastsContextType,
  type TLUiToastsProviderProps,
} from './lib/ui/context/toasts'

export { useCanRedo, useCanUndo } from './lib/ui/hooks/menu-hooks'
export {
  useCollaborationStatus,
  useShowCollaborationUi,
} from './lib/ui/hooks/useCollaborationStatus'
export { useMenuClipboardEvents, useNativeClipboardEvents } from './lib/ui/hooks/useClipboardEvents'
export { useCopyAs } from './lib/ui/hooks/useCopyAs'
export { useExportAs } from './lib/ui/hooks/useExportAs'
export { useKeyboardShortcuts } from './lib/ui/hooks/useKeyboardShortcuts'
export { useLocalStorageState } from './lib/ui/hooks/useLocalStorageState'
export { useMenuIsOpen } from './lib/ui/hooks/useMenuIsOpen'
export { useReadonly } from './lib/ui/hooks/useReadonly'
export { useRelevantStyles } from './lib/ui/hooks/useRelevantStyles'
export {
  useTools,
  type TLUiToolItem,
  type TLUiToolsContextType,
  type TLUiToolsProviderProps,
} from './lib/ui/hooks/useTools'
export { type TLUiTranslationKey } from './lib/ui/hooks/useTranslation/TLUiTranslationKey'
export { type TLUiTranslation } from './lib/ui/hooks/useTranslation/translations'
export {
  useCurrentTranslation,
  useTranslation,
  type TLUiTranslationContextType,
  type TLUiTranslationProviderProps,
} from './lib/ui/hooks/useTranslation/useTranslation'
export { type TLUiIconType } from './lib/ui/icon-types'
export { useDefaultHelpers, type TLUiOverrideHelpers, type TLUiOverrides } from './lib/ui/overrides'
export {
  TldrawUiToolbar,
  TldrawUiToolbarButton,
  TldrawUiToolbarToggleGroup,
  TldrawUiToolbarToggleItem,
  type TLUiToolbarButtonProps,
  type TLUiToolbarProps,
  type TLUiToolbarToggleGroupProps,
  type TLUiToolbarToggleItemProps,
} from './lib/ui/components/primitives/TldrawUiToolbar'
export { TldrawUiMenuCheckboxItem, type TLUiMenuCheckboxItemProps } from './lib/ui/components/primitives/menus/TldrawUiMenuCheckboxItem'
export { TldrawUiMenuContextProvider, type TLUiMenuContextProviderProps, type TLUiMenuContextType } from './lib/ui/components/primitives/menus/TldrawUiMenuContext'
export { TldrawUiMenuGroup, type TLUiMenuGroupProps } from './lib/ui/components/primitives/menus/TldrawUiMenuGroup'
export { TldrawUiMenuItem, type TLUiMenuItemProps } from './lib/ui/components/primitives/menus/TldrawUiMenuItem'
export { TldrawUiMenuSubmenu, type TLUiMenuSubmenuProps } from './lib/ui/components/primitives/menus/TldrawUiMenuSubmenu'

export { PORTRAIT_BREAKPOINT } from './lib/ui/constants'

export {
  setDefaultUiAssetUrls,
  type TLUiAssetUrlOverrides,
  type TLUiAssetUrls,
} from './lib/ui/assetUrls'

export {
  DEFAULT_ACTIONS,
  DEFAULT_EMBED_DEFINITIONS,
  embedShapePermissionDefaults,
  type CustomEmbedDefinition,
  type DefaultEmbedDefinitionType,
  type EmbedDefinition,
  type TLEmbedDefinition,
  type TLEmbedShapePermissions,
} from './lib/defaultEmbedDefinitions'

export {
  DEFAULT_MAX_ASSET_SIZE,
  DEFAULT_MAX_IMAGE_DIMENSION,
  createEmptyBookmarkShape,
  defaultHandleExternalEmbedContent,
  defaultHandleExternalExcalidrawContent,
  defaultHandleExternalFileAsset,
  defaultHandleExternalFileContent,
  defaultHandleExternalSvgTextContent,
  defaultHandleExternalTextContent,
  defaultHandleExternalTldrawContent,
  defaultHandleExternalUrlAsset,
  defaultHandleExternalUrlContent,
  getMediaAssetInfoPartial,
  type TLDefaultExternalContentHandlerOpts,
  type TLExternalContentProps,
} from './lib/defaultExternalContentHandlers'

export { getAssetFromIndexedDb, storeAssetInIndexedDb } from './lib/AssetBlobStore'

export { preloadFont, type TLTypeFace } from './lib/utils/assets/preload-font'
export { containBoxSize, downsizeImage, type BoxWidthHeight } from './lib/utils/assets/assets'
export { getEmbedInfo, type TLEmbedResult } from './lib/utils/embeds/embeds'
export { downloadFile, copyAs, type CopyAsOptions, type TLCopyType } from './lib/utils/export/copyAs'
export { exportToBlob } from './lib/utils/export/export'
export { exportAs, downloadFile as downloadExport, type ExportAsOptions } from './lib/utils/export/exportAs'
export { fitFrameToContent, removeFrame } from './lib/utils/frames/frames'
export {
  defaultEditorAssetUrls,
  setDefaultEditorAssetUrls,
  getDefaultCdnBaseUrl,
  type TLEditorAssetUrls,
} from './lib/utils/static-assets/assetUrls'
export {
  defaultAddFontsFromNode,
  renderHtmlFromRichText,
  renderHtmlFromRichTextForMeasurement,
  renderPlaintextFromRichText,
  renderRichTextFromHTML,
  tipTapDefaultExtensions,
  KeyboardShiftEnterTweakExtension,
} from './lib/utils/text/richText'
export { TextDirection } from './lib/utils/text/textDirection'
export { truncateStringWithEllipsis } from './lib/utils/text/text'
export {
  buildFromV1Document,
  type LegacyTldrawDocument,
} from './lib/utils/tldr/buildFromV1Document'
export {
  TLDRAW_FILE_EXTENSION,
  parseAndLoadDocument,
  parseTldrawJsonFile,
  serializeTldrawJson,
  serializeTldrawJsonBlob,
  type TldrawFile,
  type TldrawFileParseError,
} from './lib/utils/tldr/file'

registerTldrawLibraryVersion(
  (globalThis as any).TLDRAW_LIBRARY_NAME,
  (globalThis as any).TLDRAW_LIBRARY_VERSION,
  (globalThis as any).TLDRAW_LIBRARY_MODULES
)