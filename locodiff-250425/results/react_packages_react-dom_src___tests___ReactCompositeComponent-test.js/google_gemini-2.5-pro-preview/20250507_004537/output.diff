
index 52bccce2..be24055f 100644
--- a/react_packages_react-dom_src___tests___ReactCompositeComponent-test.js_expectedoutput.txt (expected):tmp/tmpehq2lpg__expected.txt	
+++ b/react_packages_react-dom_src___tests___ReactCompositeComponent-test.js_extracted.txt (actual):tmp/tmpb3d51oz8_actual.txt	
@@ -211,34 +211,12 @@ describe('ReactCompositeComponent', () => {
     });
   });
 
-  it('should not support module pattern components', async () => {
-    function Child({test}) {
-      return {
-        render() {
-          return <div>{test}</div>;
-        },
-      };
-    }
-
-    const el = document.createElement('div');
-    const root = ReactDOMClient.createRoot(el);
-    await expect(async () => {
-      await act(() => {
-        root.render(<Child test="test" />);
-      });
-    }).rejects.toThrow(
-      'Objects are not valid as a React child (found: object with keys {render}).',
-    );
-
-    expect(el.textContent).toBe('');
-  });
-
   it('should use default values for undefined props', async () => {
     class Component extends React.Component {
       static defaultProps = {prop: 'testKey'};
 
       render() {
-        return <span />;
+        return <div />;
       }
     }
 
@@ -279,7 +257,7 @@ describe('ReactCompositeComponent', () => {
       static defaultProps = {prop: 'testKey'};
 
       render() {
-        return <span />;
+        return <div />;
       }
     }
 
@@ -910,7 +888,7 @@ describe('ReactCompositeComponent', () => {
       }
     }
 
-    class Wrapper extends React.Component {
+    class Outer extends React.Component {
       render() {
         return <Spy key={this.props.name} name={this.props.name} />;
       }
@@ -1200,7 +1178,7 @@ describe('ReactCompositeComponent', () => {
     ]);
   });
 
-  it('should warn about reassigning this.props while rendering', () => {
+  it('should warn about reassigning this.props while rendering', async () => {
     class Bad extends React.Component {
       componentDidMount() {}
       componentDidUpdate() {}
