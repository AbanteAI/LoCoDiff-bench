
index df5de5037..e5dbb7c4b 100644
--- a/qdrant_lib_segment_src_index_field_index_numeric_index_mmap_numeric_index.rs_expectedoutput.txt (expected):tmp/tmpwwykrggy_expected.txt	
+++ b/qdrant_lib_segment_src_index_field_index_numeric_index_mmap_numeric_index.rs_extracted.txt (actual):tmp/tmp_6s56e6u_actual.txt	
@@ -2,7 +2,6 @@ use std::fs::{create_dir_all, remove_dir};
 use std::ops::Bound;
 use std::path::{Path, PathBuf};
 
-use common::counter::conditioned_counter::ConditionedCounter;
 use common::counter::hardware_counter::HardwareCounterCell;
 use common::counter::iterator_hw_measurement::HwMeasurementIteratorExt;
 use common::types::PointOffsetType;
@@ -14,11 +13,11 @@ use memory::mmap_ops::{self, create_and_ensure_length};
 use memory::mmap_type::{MmapBitSlice, MmapSlice};
 use serde::{Deserialize, Serialize};
 
-use super::Encodable;
 use super::mutable_numeric_index::InMemoryNumericIndex;
-use crate::common::Flusher;
+use super::Encodable;
 use crate::common::mmap_bitslice_buffered_update_wrapper::MmapBitSliceBufferedUpdateWrapper;
 use crate::common::operation_error::OperationResult;
+use crate::common::Flusher;
 use crate::index::field_index::histogram::{Histogram, Numericable, Point};
 use crate::index::field_index::mmap_point_to_values::{MmapPointToValues, MmapValue};
 
@@ -263,7 +262,7 @@ impl<T: Encodable + Numericable + Default + MmapValue> MmapNumericIndex<T> {
 
         self.values_range_iterator(start_bound, end_bound)
             .map(|Point { idx, .. }| idx)
-            .measure_hw_with_condition_cell(hw_counter, size_of::<Point<T>>(), |i| {
+            .measure_hw_with_condition_cell(hw_counter, std::mem::size_of::<Point<T>>(), |i| {
                 i.payload_index_io_read_counter()
             })
     }
@@ -286,7 +285,7 @@ impl<T: Encodable + Numericable + Default + MmapValue> MmapNumericIndex<T> {
     }
 
     pub(super) fn get_histogram(&self) -> &Histogram<T> {
-        &self.histogram
+        &self.historam
     }
 
     pub(super) fn get_points_count(&self) -> usize {
@@ -353,8 +352,8 @@ impl<T: Encodable + Numericable + Default + MmapValue> MmapNumericIndex<T> {
     fn make_conditioned_counter<'a>(
         &self,
         hw_counter: &'a HardwareCounterCell,
-    ) -> ConditionedCounter<'a> {
-        ConditionedCounter::new(self.is_on_disk, hw_counter)
+    ) -> common::counter::conditioned_counter::ConditionedCounter<'a> {
+        common::counter::conditioned_counter::ConditionedCounter::new(self.is_on_disk, hw_counter)
     }
 
     pub fn is_on_disk(&self) -> bool {
