--- ghostty_src_build_bash_completions.zig_expectedoutput.txt (expected)+++ ghostty_src_build_bash_completions.zig_extracted.txt (actual)@@ -142,7 +142,6 @@                 else => try writer.writeAll("return ;;"),
             }
         }
-
         try writer.writeAll("\n");
     }
 
@@ -157,23 +156,22 @@         \\
     );
 
+    // Build variables containing options for each Action
     for (@typeInfo(Action).@"enum".fields) |field| {
         if (std.mem.eql(u8, "help", field.name)) continue;
         if (std.mem.eql(u8, "version", field.name)) continue;
 
         const options = @field(Action, field.name).options();
-        // assumes options will never be created with only <_name> members
         if (@typeInfo(options).@"struct".fields.len == 0) continue;
 
         var buffer: [field.name.len]u8 = undefined;
         const bashName: []u8 = buffer[0..field.name.len];
         @memcpy(bashName, field.name);
-
         std.mem.replaceScalar(u8, bashName, '-', '_');
         try writer.writeAll(pad2 ++ "local " ++ bashName ++ "=\"");
 
         {
-            var count = 0;
+            var count: usize = 0;
             for (@typeInfo(options).@"struct".fields) |opt| {
                 if (opt.name[0] == '_') continue;
                 if (count > 0) try writer.writeAll(" ");
@@ -200,7 +198,6 @@         const options = @field(Action, field.name).options();
         if (@typeInfo(options).@"struct".fields.len == 0) continue;
 
-        // bash doesn't allow variable names containing '-' so replace them
         var buffer: [field.name.len]u8 = undefined;
         const bashName: []u8 = buffer[0..field.name.len];
         _ = std.mem.replace(u8, field.name, "-", "_", bashName);
@@ -283,7 +280,7 @@         \\  local cur=""; local prev=""; local prevWasEq=false; COMPREPLY=()
         \\  local ghostty="$1"
         \\
-        \\  # script assumes default COMP_WORDBREAKS of roughly $' \t\n"\'><=;|&(:'
+        \\  # script assumes default COMP_WORDBREAKS of roughly $' \\t\\n\"'\\><=;|&(:'
         \\  # if = is missing this script will degrade to matching on keys only.
         \\  # eg: --key=
         \\  # this can be improved if needed see: https://github.com/ghostty-org/ghostty/discussions/2994
