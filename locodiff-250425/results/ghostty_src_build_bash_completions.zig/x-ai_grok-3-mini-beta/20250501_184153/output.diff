
index bb347e1b..24f5812e 100644
--- a/ghostty_src_build_bash_completions.zig_expectedoutput.txt (expected):tmp/tmpni1zr10y_expected.txt	
+++ b/ghostty_src_build_bash_completions.zig_extracted.txt (actual):tmp/tmpcsr0un4o_actual.txt	
@@ -139,6 +139,19 @@ fn writeBashCompletions(writer: anytype) !void {
                         try writer.writeAll("return ;;");
                     }
                 },
+                .optional => |optional| {
+                    switch (@typeInfo(optional.child)) {
+                        .@"enum" => |info| {
+                            try writer.writeAll(compgenPrefix);
+                            for (info.fields, 0..) |f, i| {
+                                if (i > 0) try writer.writeAll(" ");
+                                try writer.writeAll(f.name);
+                            }
+                            try writer.writeAll(compgenSuffix);
+                        },
+                        else => try writer.writeAll("return ;;"),
+                    }
+                },
                 else => try writer.writeAll("return ;;"),
             }
         }
@@ -184,7 +197,7 @@ fn writeBashCompletions(writer: anytype) !void {
                 count += 1;
             }
         }
-        try writer.writeAll(" --help\"\n");
+        try writer.writeAll("\"\n");
     }
 
     try writer.writeAll(
@@ -234,11 +247,7 @@ fn writeBashCompletions(writer: anytype) !void {
                             }
                             try writer.writeAll(compgenSuffix);
                         },
-                        else => {
-                            if (std.mem.eql(u8, "config-file", opt.name)) {
-                                try writer.writeAll("return ;;");
-                            } else try writer.writeAll("return;;");
-                        },
+                        else => try writer.writeAll("return;;"),
                     }
                 },
                 else => {
@@ -318,7 +327,6 @@ fn writeBashCompletions(writer: anytype) !void {
         \\            # must be completing with a space after the key eg: '--<key> '
         \\            # clear out prev so we don't run any of the key specific completions
         \\            prev=""
-        \\          fi
         \\
         \\          case "${COMP_WORDS[1]}" in
         \\            --*) _handle_config ;;
@@ -332,7 +340,5 @@ fn writeBashCompletions(writer: anytype) !void {
         \\  return 0
         \\}
         \\
-        \\complete -o nospace -o bashdefault -F _ghostty ghostty
-        \\
     );
 }
\ No newline at end of file
