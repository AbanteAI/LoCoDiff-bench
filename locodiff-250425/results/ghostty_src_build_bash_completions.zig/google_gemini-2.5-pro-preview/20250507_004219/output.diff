
index bb347e1b..82930bc0 100644
--- a/ghostty_src_build_bash_completions.zig_expectedoutput.txt (expected):tmp/tmpro33ss7q_expected.txt	
+++ b/ghostty_src_build_bash_completions.zig_extracted.txt (actual):tmp/tmpy2yares1_actual.txt	
@@ -97,7 +97,6 @@ fn writeBashCompletions(writer: anytype) !void {
     }
 
     try writer.writeAll(
-        \\
         \\    case "$prev" in
         \\
     );
@@ -119,7 +118,7 @@ fn writeBashCompletions(writer: anytype) !void {
             const compgenSuffix = "\" -- \"$cur\" ); _add_spaces ;;";
             switch (@typeInfo(field.type)) {
                 .bool => try writer.writeAll("return ;;"),
-                .@"enum" => |info| {
+                .@enum => |info| {
                     try writer.writeAll(compgenPrefix);
                     for (info.fields, 0..) |f, i| {
                         if (i > 0) try writer.writeAll(" ");
@@ -127,7 +126,7 @@ fn writeBashCompletions(writer: anytype) !void {
                     }
                     try writer.writeAll(compgenSuffix);
                 },
-                .@"struct" => |info| {
+                .@struct => |info| {
                     if (!@hasDecl(field.type, "parseCLI") and info.layout == .@"packed") {
                         try writer.writeAll(compgenPrefix);
                         for (info.fields, 0..) |f, i| {
@@ -216,7 +215,7 @@ fn writeBashCompletions(writer: anytype) !void {
             const compgenSuffix = "\" -- \"$cur\" ); _add_spaces ;;";
             switch (@typeInfo(opt.type)) {
                 .bool => try writer.writeAll("return ;;"),
-                .@"enum" => |info| {
+                .@enum => |info| {
                     try writer.writeAll(compgenPrefix);
                     for (info.fields, 0..) |f, i| {
                         if (i > 0) try writer.writeAll(" ");
@@ -226,7 +225,7 @@ fn writeBashCompletions(writer: anytype) !void {
                 },
                 .optional => |optional| {
                     switch (@typeInfo(optional.child)) {
-                        .@"enum" => |info| {
+                        .@enum => |info| {
                             try writer.writeAll(compgenPrefix);
                             for (info.fields, 0..) |f, i| {
                                 if (i > 0) try writer.writeAll(" ");
@@ -236,7 +235,7 @@ fn writeBashCompletions(writer: anytype) !void {
                         },
                         else => {
                             if (std.mem.eql(u8, "config-file", opt.name)) {
-                                try writer.writeAll("return ;;");
+                                try writer.writeAll("_files ;;");
                             } else try writer.writeAll("return;;");
                         },
                     }
