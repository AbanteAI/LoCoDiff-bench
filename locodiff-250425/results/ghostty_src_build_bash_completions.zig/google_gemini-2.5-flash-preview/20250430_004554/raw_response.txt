```bash
_ghostty() {

  # -o nospace requires we add back a space when a completion is finished
  # and not part of a --key= completion
  _add_spaces() {
    for idx in "${!COMPREPLY[@]}"; do
      [ -n "${COMPREPLY[idx]}" ] && COMPREPLY[idx]="${COMPREPLY[idx]} ";
    done
  }

  _fonts() {
    local IFS=$'\n'
    mapfile -t COMPREPLY < <( compgen -P '"' -S '"' -W "$($ghostty +list-fonts | grep '^[A-Z]' )" -- "$cur")
  }

  _themes() {
    local IFS=$'\n'
    mapfile -t COMPREPLY < <( compgen -P '"' -S '"' -W "$($ghostty +list-themes | sed -E 's/^(.*) \(.*$/\1/')" -- "$cur")
  }

  _files() {
    mapfile -t COMPREPLY < <( compgen -o filenames -f -- "$cur" )
    for i in "${!COMPREPLY[@]}"; do
      if [[ -d "${COMPREPLY[i]}" ]]; then
        COMPREPLY[i]="${COMPREPLY[i]}/";
      fi
      if [[ -f "${COMPREPLY[i]}" ]]; then
        COMPREPLY[i]="${COMPREPLY[i]} ";
      fi
    done
  }

  _dirs() {
    mapfile -t COMPREPLY < <( compgen -o dirnames -d -- "$cur" )
    for i in "${!COMPREPLY[@]}"; do
      if [[ -d "${COMPREPLY[i]}" ]]; then
        COMPREPLY[i]="${COMPREPLY[i]}/";
      fi
    done
    if [[ "${#COMPREPLY[@]}" == 0 && -d "$cur" ]]; then
      COMPREPLY=( "$cur " )
    fi
  }

  _handle_config() {
    local config="--help"
    config+=" --version"

    config+=" '--clipboard '";
    config+=" '--colors-file='";
    config+=" '--config-file='";
    config+=" '--dpi='";
    config+=" '--enable-block-cursor-animations '";
    config+=" '--footprint-font='";
    config+=" '--font-family='";
    config+=" '--font-size='";
    config+=" '--glyph-cache-size='";
    config+=" '--line-height-em='";
    config+=" '--ligatures '";
    config+=" '--theme='";
    config+=" '--working-directory='";
    config+=" '--window-decorations='";
    config+=" '--window-opacity='";
    config+=" '--window-title='";
    config+=" '--window-width='";
    config+=" '--window-height='";
    config+=" '--window-x='";
    config+=" '--window-y='";
    config+=" '--padding-x='";
    config+=" '--padding-y='";
    config+=" '--padding-z='";
    config+=" '--margin-x='";
    config+=" '--margin-y='";
    config+=" '--margin-z='";
    config+=" '--reflow-on-resize '";
    config+=" '--use-full-width-glyphs '";

    case "$prev" in

      --clipboard) return ;;
      --colors-file) return ;;
      --config-file) _files ;;
      --dpi) return ;;
      --enable-block-cursor-animations) return ;;
      --footprint-font) return ;;
      --font-family) _fonts ;;
      --font-size) return ;;
      --glyph-cache-size) return ;;
      --line-height-em) return ;;
      --ligatures) return ;;
      --theme) _themes ;;
      --working-directory) _dirs ;;
      --window-decorations) mapfile -t COMPREPLY < <( compgen -W "Client Client-Side Server Server-Side" -- "$cur" ); _add_spaces ;;
      --window-opacity) return ;;
      --window-title) return ;;
      --window-width) return ;;
      --window-height) return ;;
      --window-x) return ;;
      --window-y) return ;;
      --padding-x) return ;;
      --padding-y) return ;;
      --padding-z) return ;;
      --margin-x) return ;;
      --margin-y) return ;;
      --margin-z) return ;;
      --reflow-on-resize) return ;;
      --use-full-width-glyphs) return ;;
      *) mapfile -t COMPREPLY < <( compgen -W "$config" -- "$cur" ) ;;
    esac

    return 0
  }

  _handle_actions() {

    local break="--config-file="; break+=" '--working-directory '"; break+=" --help";
    local cat="--config-file="; cat+=" '--working-directory '"; cat+=" --help";
    local copy_colors="--config-file="; copy_colors+=" '--working-directory '"; copy_colors+=" --help";
    local edit="--config-file="; edit+=" '--working-directory '"; edit+=" --help";
    local list_fonts="--config-file="; list_fonts+=" '--working-directory '"; list_fonts+=" --help";
    local list_themes="--config-file="; list_themes+=" '--working-directory '"; list_themes+=" --help";
    local new="--config-file="; new+=" '--working-directory '"; new+=" --help";
    local open="--config-file="; open+=" '--working-directory '"; open+=" --help";
    local print_config="--config-file="; print_config+=" '--working-directory '"; print_config+=" --help";
    local print_default_config="--config-file="; print_default_config+=" '--working-directory '"; print_default_config+=" --help";
    local show_file="--config-file="; show_file+=" '--working-directory '"; show_file+=" --help";

    case "${COMP_WORDS[1]}" in

      +break)
        case $prev in
          --config-file) _files ;;
          --working-directory) return ;;
          *) mapfile -t COMPREPLY < <( compgen -W "$break" -- "$cur" ) ;;
        esac
      ;;

      +cat)
        case $prev in
          --config-file) _files ;;
          --working-directory) return ;;
          *) mapfile -t COMPREPLY < <( compgen -W "$cat" -- "$cur" ) ;;
        esac
      ;;

      +copy-colors)
        case $prev in
          --config-file) _files ;;
          --working-directory) return ;;
          *) mapfile -t COMPREPLY < <( compgen -W "$copy_colors" -- "$cur" ) ;;
        esac
      ;;

      +edit)
        case $prev in
          --config-file) _files ;;
          --working-directory) return ;;
          *) mapfile -t COMPREPLY < <( compgen -W "$edit" -- "$cur" ) ;;
        esac
      ;;

      +list-fonts)
        case $prev in
          --config-file) _files ;;
          --working-directory) return ;;
          *) mapfile -t COMPREPLY < <( compgen -W "$list_fonts" -- "$cur" ) ;;
        esac
      ;;

      +list-themes)
        case $prev in
          --config-file) _files ;;
          --working-directory) return ;;
          *) mapfile -t COMPREPLY < <( compgen -W "$list_themes" -- "$cur" ) ;;
        esac
      ;;

      +new)
        case $prev in
          --config-file) _files ;;
          --working-directory) return ;;
          *) mapfile -t COMPREPLY < <( compgen -W "$new" -- "$cur" ) ;;
        esac
      ;;

      +open)
        case $prev in
          --config-file) _files ;;
          --working-directory) return ;;
          *) mapfile -t COMPREPLY < <( compgen -W "$open" -- "$cur" ) ;;
        esac
      ;;

      +print-config)
        case $prev in
          --config-file) _files ;;
          --working-directory) return ;;
          *) mapfile -t COMPREPLY < <( compgen -W "$print_config" -- "$cur" ) ;;
        esac
      ;;

      +print-default-config)
        case $prev in
          --config-file) _files ;;
          --working-directory) return ;;
          *) mapfile -t COMPREPLY < <( compgen -W "$print_default_config" -- "$cur" ) ;;
        esac
      ;;

      +show-file)
        case $prev in
          --config-file) _files ;;
          --working-directory) return ;;
          *) mapfile -t COMPREPLY < <( compgen -W "$show_file" -- "$cur" ) ;;
        esac
      ;;

      *) mapfile -t COMPREPLY < <( compgen -W "--help" -- "$cur" ) ;;
    esac

    return 0
  }

  # begin main logic
  local cur=""; local prev=""; local prevWasEq=false; COMPREPLY=()
  local ghostty="$1"

  # script assumes default COMP_WORDBREAKS of roughly $' \t\n"\'><=;|&(:'
  # if = is missing this script will degrade to matching on keys only.
  # eg: --key=
  # this can be improved if needed see: https://github.com/ghostty-org/ghostty/discussions/2994

  if [ "$2" = "=" ]; then cur=""
  else                    cur="$2"
  fi

  if [ "$3" = "=" ]; then prev="${COMP_WORDS[COMP_CWORD-2]}"; prevWasEq=true;
  else                    prev="${COMP_WORDS[COMP_CWORD-1]}"
  fi

  # current completion is double quoted add a space so the curor progresses
  if [[ "$2" == \"*\" ]]; then
    COMPREPLY=( "$cur " );
    return;
  fi

  case "$COMP_CWORD" in
    1)
      case "${COMP_WORDS[1]}" in
        -e | --help | --version) return 0 ;;
        --*) _handle_config ;;
        *) local topLevel="-e"
          topLevel+=" --help"
          topLevel+=" --version"
          topLevel+=" +break"
          topLevel+=" +cat"
          topLevel+=" +copy-colors"
          topLevel+=" +edit"
          topLevel+=" +list-fonts"
          topLevel+=" +list-themes"
          topLevel+=" +new"
          topLevel+=" +open"
          topLevel+=" +print-config"
          topLevel+=" +print-default-config"
          topLevel+=" +show-file"
        mapfile -t COMPREPLY < <( compgen -W "${topLevel}" -- "$cur" ); _add_spaces ;;
      esac
      ;;
    *)
      case "$prev" in
        -e | --help | --version) return 0 ;;
        *)
          if [[ "=" != "${COMP_WORDS[COMP_CWORD]}" && $prevWasEq != true ]]; then
            # must be completing with a space after the key eg: '--<key> '
            # clear out prev so we don't run any of the key specific completions
            prev=""
          fi

          case "${COMP_WORDS[1]}" in
            --*) _handle_config ;;
            +*) _handle_actions ;;
          esac
          ;;
      esac
      ;;
  esac

  return 0
}

complete -o nospace -o bashdefault -F _ghostty ghostty
```