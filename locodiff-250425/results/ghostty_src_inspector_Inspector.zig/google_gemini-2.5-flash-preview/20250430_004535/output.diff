--- ghostty_src_inspector_Inspector.zig_expectedoutput.txt (expected)+++ ghostty_src_inspector_Inspector.zig_extracted.txt (actual)@@ -319,7 +319,7 @@             "table_screen",
             2,
             cimgui.c.ImGuiTableFlags_None,
-            .{ .x = 0, .y = 0 },
+            renderer.vec2(0, 0),
             0,
         );
         defer cimgui.c.igEndTable();
@@ -346,10 +346,11 @@                 "table_cursor",
                 2,
                 cimgui.c.ImGuiTableFlags_None,
-                .{ .x = 0, .y = 0 },
+                renderer.vec2(0, 0),
                 0,
             );
             defer cimgui.c.igEndTable();
+
             inspector.cursor.renderInTable(
                 self.surface.renderer_state.terminal,
                 &screen.cursor,
@@ -368,7 +369,7 @@                 "table_keyboard",
                 2,
                 cimgui.c.ImGuiTableFlags_None,
-                .{ .x = 0, .y = 0 },
+                renderer.vec2(0, 0),
                 0,
             );
             defer cimgui.c.igEndTable();
@@ -442,7 +443,7 @@                 "##kitty_graphics",
                 2,
                 cimgui.c.ImGuiTableFlags_None,
-                .{ .x = 0, .y = 0 },
+                renderer.vec2(0, 0),
                 0,
             );
             defer cimgui.c.igEndTable();
@@ -522,7 +523,7 @@                 "##terminal_state",
                 2,
                 cimgui.c.ImGuiTableFlags_None,
-                .{ .x = 0, .y = 0 },
+                renderer.vec2(0, 0),
                 0,
             );
             defer cimgui.c.igEndTable();
@@ -589,7 +590,7 @@         3,
         cimgui.c.ImGuiTableFlags_SizingFixedFit |
             cimgui.c.ImGuiTableFlags_RowBg,
-        .{ .x = 0, .y = 0 },
+        renderer.vec2(0, 0),
         0,
     );
     defer cimgui.c.igEndTable();
@@ -643,7 +644,7 @@             "table_size",
             2,
             cimgui.c.ImGuiTableFlags_None,
-            .{ .x = 0, .y = 0 },
+            renderer.vec2(0, 0),
             0,
         );
         defer cimgui.c.igEndTable();
@@ -691,7 +692,7 @@                 cimgui.c.igText("Cell Size");
             }
             {
-                _ = cimgui.c.igTableSetColumnIndex(1);
+                _ = cimgui.c.TableSetColumnIndex(1);
                 cimgui.c.igText(
                     "%dpx x %dpx",
                     self.surface.size.cell.width,
@@ -727,7 +728,7 @@             "table_font",
             2,
             cimgui.c.ImGuiTableFlags_None,
-            .{ .x = 0, .y = 0 },
+            renderer.vec2(0, 0),
             0,
         );
         defer cimgui.c.igEndTable();
@@ -770,7 +771,7 @@             "table_mouse",
             2,
             cimgui.c.ImGuiTableFlags_None,
-            .{ .x = 0, .y = 0 },
+            renderer.vec2(0, 0),
             0,
         );
         defer cimgui.c.igEndTable();
@@ -920,7 +921,7 @@     // Our popup for the picker
     const popup_picker = "Cell Picker";
 
-    if (cimgui.c.igButton("Picker", .{ .x = 0, .y = 0 })) {
+    if (cimgui.c.igButton("Picker", renderer.vec2(0, 0))) {
         // Request a cell
         self.cell.request();
 
@@ -950,7 +951,7 @@         );
         cimgui.c.igSeparator();
 
-        if (cimgui.c.igButton("Cancel", .{ .x = 0, .y = 0 })) {
+        if (cimgui.c.igButton("Cancel", renderer.vec2(0, 0))) {
             cimgui.c.igCloseCurrentPopup();
         }
     } // cell pick popup
@@ -986,7 +987,7 @@             break :list;
         }
 
-        if (cimgui.c.igButton("Clear", .{ .x = 0, .y = 0 })) {
+        if (cimgui.c.igButton("Clear", renderer.vec2(0, 0))) {
             var it = self.key_events.iterator(.forward);
             while (it.next()) |v| v.deinit(self.surface.alloc);
             self.key_events.clear();
@@ -1001,7 +1002,7 @@             //cimgui.c.ImGuiTableFlags_ScrollY |
             cimgui.c.ImGuiTableFlags_RowBg |
                 cimgui.c.ImGuiTableFlags_Borders,
-            .{ .x = 0, .y = 0 },
+            renderer.vec2(0, 0),
             0,
         );
         defer cimgui.c.igEndTable();
@@ -1021,7 +1022,7 @@                 label.ptr,
                 &ev.imgui_state.selected,
                 cimgui.c.ImGuiSelectableFlags_None,
-                .{ .x = 0, .y = 0 },
+                renderer.vec2(0, 0),
             );
 
             if (!ev.imgui_state.selected) continue;
@@ -1064,21 +1065,28 @@             "Pause##pause_play"
         else
             "Resume##pause_play";
-        if (cimgui.c.igButton(pause_play.ptr, .{ .x = 0, .y = 0 })) {
+        if (cimgui.c.igButton(pause_play.ptr, renderer.vec2(0, 0))) {
             self.vt_stream.handler.active = !self.vt_stream.handler.active;
         }
 
         cimgui.c.igSameLine(0, cimgui.c.igGetStyle().*.ItemInnerSpacing.x);
-        if (cimgui.c.igButton("Filter", .{ .x = 0, .y = 0 })) {
+        if (cimgui.c.igButton("Filter", renderer.vec2(0, 0))) {
             cimgui.c.igOpenPopup_Str(
                 popup_filter,
                 cimgui.c.ImGuiPopupFlags_None,
             );
         }
 
+        cimgui.c.igSeparator();
+
+        if (self.vt_events.empty()) {
+            cimgui.c.igText("Waiting for events...");
+            break :list;
+        }
+
         if (!self.vt_events.empty()) {
             cimgui.c.igSameLine(0, cimgui.c.igGetStyle().*.ItemInnerSpacing.x);
-            if (cimgui.c.igButton("Clear", .{ .x = 0, .y = 0 })) {
+            if (cimgui.c.igButton("Clear", renderer.vec2(0, 0))) {
                 var it = self.vt_events.iterator(.forward);
                 while (it.next()) |v| v.deinit(self.surface.alloc);
                 self.vt_events.clear();
@@ -1086,13 +1094,6 @@                 // We also reset the sequence number.
                 self.vt_stream.handler.current_seq = 1;
             }
-        }
-
-        cimgui.c.igSeparator();
-
-        if (self.vt_events.empty()) {
-            cimgui.c.igText("Waiting for events...");
-            break :list;
         }
 
         _ = cimgui.c.igBeginTable(
@@ -1100,27 +1101,7 @@             3,
             cimgui.c.ImGuiTableFlags_RowBg |
                 cimgui.c.ImGuiTableFlags_Borders,
-            .{ .x = 0, .y = 0 },
-            0,
-        );
-        defer cimgui.c.igEndTable();
-
-        cimgui.c.igTableSetupColumn(
-            "Seq",
-            cimgui.c.ImGuiTableColumnFlags_WidthFixed,
-            0,
-            0,
-        );
-        cimgui.c.igTableSetupColumn(
-            "Kind",
-            cimgui.c.ImGuiTableColumnFlags_WidthFixed,
-            0,
-            0,
-        );
-        cimgui.c.igTableSetupColumn(
-            "Description",
-            cimgui.c.ImGuiTableColumnFlags_WidthStretch,
-            0,
+            renderer.vec2(0, 0),
             0,
         );
 
@@ -1178,6 +1159,35 @@             }
         }
 
+        _ = cimgui.c.igBeginTable(
+            "table_vt_events",
+            3,
+            cimgui.c.ImGuiTableFlags_RowBg |
+                cimgui.c.ImGuiTableFlags_Borders,
+            renderer.vec2(0, 0),
+            0,
+        );
+        defer cimgui.c.igEndTable();
+
+        cimgui.c.igTableSetupColumn(
+            "Seq",
+            cimgui.c.ImGuiTableColumnFlags_WidthFixed,
+            0,
+            0,
+        );
+        cimgui.c.igTableSetupColumn(
+            "Kind",
+            cimgui.c.ImGuiTableColumnFlags_WidthFixed,
+            0,
+            0,
+        );
+        cimgui.c.igTableSetupColumn(
+            "Description",
+            cimgui.c.ImGuiTableColumnFlags_WidthStretch,
+            0,
+            0,
+        );
+
         var it = self.vt_events.iterator(.reverse);
         while (it.next()) |ev| {
             // Need to push an ID so that our selectable is unique.
@@ -1200,7 +1210,7 @@                 "##select",
                 &ev.imgui_selected,
                 cimgui.c.ImGuiSelectableFlags_SpanAllColumns,
-                .{ .x = 0, .y = 0 },
+                renderer.vec2(0, 0),
             )) {
                 // If selection state changed, update keyboard navigation state
                 if (ev.imgui_selected != was_selected) {
@@ -1228,7 +1238,7 @@                         "details",
                         2,
                         cimgui.c.ImGuiTableFlags_None,
-                        .{ .x = 0, .y = 0 },
+                        renderer.vec2(0, 0),
                         0,
                     );
                     defer cimgui.c.igEndTable();
@@ -1293,7 +1303,7 @@                 "table_filter_kind",
                 3,
                 cimgui.c.ImGuiTableFlags_None,
-                .{ .x = 0, .y = 0 },
+                renderer.vec2(0, 0),
                 0,
             );
             defer cimgui.c.igEndTable();
@@ -1328,7 +1338,7 @@         );
 
         cimgui.c.igSeparator();
-        if (cimgui.c.igButton("Close", .{ .x = 0, .y = 0 })) {
+        if (cimgui.c.igButton("Close", renderer.vec2(0, 0))) {
             cimgui.c.igCloseCurrentPopup();
         }
     } // filter popup
