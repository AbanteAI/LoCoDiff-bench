
index e43b28bfd..2763204f8 100644
--- a/ghostty_src_inspector_Inspector.zig_expectedoutput.txt (expected):tmp/tmpts3h9dha_expected.txt	
+++ b/ghostty_src_inspector_Inspector.zig_extracted.txt (actual):tmp/tmplx2_qmbb_actual.txt	
@@ -195,7 +195,7 @@ pub fn deinit(self: *Inspector) void {
     {
         var it = self.vt_events.iterator(.forward);
         while (it.next()) |v| v.deinit(self.surface.alloc);
-        self.vt_events.deinit(self.surface.alloc);
+        self.vt_events.deinit(surface.alloc);
 
         self.vt_stream.handler.deinit();
         self.vt_stream.deinit();
@@ -804,13 +804,6 @@ fn renderSizeWindow(self: *Inspector) void {
         }
 
         {
-            const coord: renderer.Coordinate.Terminal = (renderer.Coordinate{
-                .surface = .{
-                    .x = self.mouse.last_xpos,
-                    .y = self.mouse.last_ypos,
-                },
-            }).convert(.terminal, self.surface.size).terminal;
-
             cimgui.c.igTableNextRow(cimgui.c.ImGuiTableRowFlags_None, 0);
             {
                 _ = cimgui.c.igTableSetColumnIndex(0);
@@ -818,6 +811,13 @@ fn renderSizeWindow(self: *Inspector) void {
             }
             {
                 _ = cimgui.c.igTableSetColumnIndex(1);
+                const coord: renderer.Coordinate.Terminal = (renderer.Coordinate{
+                    .surface = .{
+                        .x = self.mouse.last_xpos,
+                        .y = self.mouse.last_ypos,
+                    },
+                }).convert(.terminal, self.surface.size).terminal;
+
                 cimgui.c.igText(
                     "(%dpx, %dpx)",
                     @as(i64, @intFromFloat(coord.x)),
@@ -933,7 +933,7 @@ fn renderCellWindow(self: *Inspector) void {
     if (cimgui.c.igBeginPopupModal(
         popup_picker,
         null,
-        cimgui.c.ImGuiWindowFlags_AlwaysAutoResize,
+        cimgui.c.igWindowFlags_AlwaysAutoResize,
     )) popup: {
         defer cimgui.c.igEndPopup();
 
@@ -1025,6 +1025,7 @@ fn renderKeyboardWindow(self: *Inspector) void {
             );
 
             if (!ev.imgui_state.selected) continue;
+
             ev.render();
         }
     } // table
