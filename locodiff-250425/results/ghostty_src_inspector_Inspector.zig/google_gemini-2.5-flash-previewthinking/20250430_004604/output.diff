
index e43b28bf..82aca003 100644
--- a/ghostty_src_inspector_Inspector.zig_expectedoutput.txt (expected):tmp/tmpm_bfwn4u_expected.txt	
+++ b/ghostty_src_inspector_Inspector.zig_extracted.txt (actual):tmp/tmp4h9hgt39_actual.txt	
@@ -350,6 +350,7 @@ fn renderScreenWindow(self: *Inspector) void {
                 0,
             );
             defer cimgui.c.igEndTable();
+
             inspector.cursor.renderInTable(
                 self.surface.renderer_state.terminal,
                 &screen.cursor,
@@ -1076,6 +1077,8 @@ fn renderTermioWindow(self: *Inspector) void {
             );
         }
 
+        cimgui.c.igSeparator();
+
         if (!self.vt_events.empty()) {
             cimgui.c.igSameLine(0, cimgui.c.igGetStyle().*.ItemInnerSpacing.x);
             if (cimgui.c.igButton("Clear", .{ .x = 0, .y = 0 })) {
@@ -1088,42 +1091,11 @@ fn renderTermioWindow(self: *Inspector) void {
             }
         }
 
-        cimgui.c.igSeparator();
-
         if (self.vt_events.empty()) {
             cimgui.c.igText("Waiting for events...");
             break :list;
         }
 
-        _ = cimgui.c.igBeginTable(
-            "table_vt_events",
-            3,
-            cimgui.c.ImGuiTableFlags_RowBg |
-                cimgui.c.ImGuiTableFlags_Borders,
-            .{ .x = 0, .y = 0 },
-            0,
-        );
-        defer cimgui.c.igEndTable();
-
-        cimgui.c.igTableSetupColumn(
-            "Seq",
-            cimgui.c.ImGuiTableColumnFlags_WidthFixed,
-            0,
-            0,
-        );
-        cimgui.c.igTableSetupColumn(
-            "Kind",
-            cimgui.c.ImGuiTableColumnFlags_WidthFixed,
-            0,
-            0,
-        );
-        cimgui.c.igTableSetupColumn(
-            "Description",
-            cimgui.c.ImGuiTableColumnFlags_WidthStretch,
-            0,
-            0,
-        );
-
         // Handle keyboard navigation when window is focused
         if (cimgui.c.igIsWindowFocused(cimgui.c.ImGuiFocusedFlags_RootAndChildWindows)) {
             const key_pressed = self.getKeyAction();
@@ -1178,6 +1150,35 @@ fn renderTermioWindow(self: *Inspector) void {
             }
         }
 
+        _ = cimgui.c.igBeginTable(
+            "table_vt_events",
+            3,
+            cimgui.c.ImGuiTableFlags_RowBg |
+                cimgui.c.ImGuiTableFlags_Borders,
+            .{ .x = 0, .y = 0 },
+            0,
+        );
+        defer cimgui.c.igEndTable();
+
+        cimgui.c.igTableSetupColumn(
+            "Seq",
+            cimgui.c.ImGuiTableColumnFlags_WidthFixed,
+            0,
+            0,
+        );
+        cimgui.c.igTableSetupColumn(
+            "Kind",
+            cimgui.c.ImGuiTableColumnFlags_WidthFixed,
+            0,
+            0,
+        );
+        cimgui.c.igTableSetupColumn(
+            "Description",
+            cimgui.c.ImGuiTableColumnFlags_WidthStretch,
+            0,
+            0,
+        );
+
         var it = self.vt_events.iterator(.reverse);
         while (it.next()) |ev| {
             // Need to push an ID so that our selectable is unique.
