
index 78b27a3b..c8e656ad 100644
--- a/qdrant_src_tonic_api_points_api.rs_expectedoutput.txt (expected):tmp/tmp476utsh__expected.txt	
+++ b/qdrant_src_tonic_api_points_api.rs_extracted.txt (actual):tmp/tmpxty4tnjs_actual.txt	
@@ -113,6 +113,7 @@ impl Points for PointsService {
         validate(request.get_ref())?;
 
         let access = extract_access(&mut request);
+        let inference_token = extract_token(&request);
 
         let inner_request = request.into_inner();
 
@@ -135,8 +136,6 @@ impl Points for PointsService {
     ) -> Result<Response<PointsOperationResponse>, Status> {
         validate(request.get_ref())?;
 
-        // Nothing to verify here.
-
         let access = extract_access(&mut request);
         let inference_token = extract_token(&request);
 
@@ -303,6 +302,7 @@ impl Points for PointsService {
         validate(request.get_ref())?;
 
         let access = extract_access(&mut request);
+
         let collection_name = request.get_ref().collection_name.clone();
         let wait = Some(request.get_ref().wait.unwrap_or(false));
         let hw_metrics = self.get_request_collection_hw_usage_counter(collection_name, wait);
@@ -326,11 +326,16 @@ impl Points for PointsService {
 
         let access = extract_access(&mut request);
 
+        let collection_name = request.get_ref().collection_name.clone();
+        let wait = Some(request.get_ref().wait.unwrap_or(false));
+        let hw_metrics = self.get_request_collection_hw_usage_counter(collection_name, wait);
+
         delete_field_index(
             self.dispatcher.clone(),
             request.into_inner(),
             InternalUpdateParams::default(),
             access,
+            hw_metrics,
         )
         .await
         .map(|resp| resp.map(Into::into))
@@ -376,7 +381,6 @@ impl Points for PointsService {
         let timeout = timeout.map(Duration::from_secs);
 
         let mut requests = Vec::new();
-
         for mut search_point in search_points {
             let shard_key = search_point.shard_key_selector.take();
 
@@ -386,8 +390,7 @@ impl Points for PointsService {
             requests.push((core_search_request, shard_selector));
         }
 
-        let hw_metrics =
-            self.get_request_collection_hw_usage_counter(collection_name.clone(), None);
+        let hw_metrics = self.get_request_collection_hw_usage_counter(collection_name.clone(), None);
 
         let res = core_search_batch(
             StrictModeCheckedTocProvider::new(&self.dispatcher),
@@ -430,7 +433,6 @@ impl Points for PointsService {
         validate(request.get_ref())?;
 
         let access = extract_access(&mut request);
-
         let inner_request = request.into_inner();
 
         let hw_metrics = self
@@ -471,6 +473,7 @@ impl Points for PointsService {
     ) -> Result<Response<RecommendBatchResponse>, Status> {
         validate(request.get_ref())?;
         let access = extract_access(&mut request);
+        let inference_token = extract_token(&request);
         let RecommendBatchPoints {
             collection_name,
             recommend_points,
@@ -478,8 +481,7 @@ impl Points for PointsService {
             timeout,
         } = request.into_inner();
 
-        let hw_metrics =
-            self.get_request_collection_hw_usage_counter(collection_name.clone(), None);
+        let hw_metrics = self.get_request_collection_hw_usage_counter(collection_name.clone(), None);
 
         let res = recommend_batch(
             StrictModeCheckedTocProvider::new(&self.dispatcher),
@@ -489,6 +491,7 @@ impl Points for PointsService {
             access,
             timeout.map(Duration::from_secs),
             hw_metrics,
+            inference_token,
         )
         .await?;
 
@@ -541,6 +544,7 @@ impl Points for PointsService {
     ) -> Result<Response<DiscoverBatchResponse>, Status> {
         validate(request.get_ref())?;
         let access = extract_access(&mut request);
+        let inference_token = extract_token(&request);
         let DiscoverBatchPoints {
             collection_name,
             discover_points,
@@ -548,8 +552,7 @@ impl Points for PointsService {
             timeout,
         } = request.into_inner();
 
-        let hw_metrics =
-            self.get_request_collection_hw_usage_counter(collection_name.clone(), None);
+        let hw_metrics = self.get_request_collection_hw_usage_counter(collection_name.clone(), None);
         let res = discover_batch(
             StrictModeCheckedTocProvider::new(&self.dispatcher),
             &collection_name,
@@ -558,6 +561,7 @@ impl Points for PointsService {
             access,
             timeout.map(Duration::from_secs),
             hw_metrics,
+            inference_token,
         )
         .await?;
 
@@ -623,8 +627,7 @@ impl Points for PointsService {
             timeout,
         } = request;
         let timeout = timeout.map(Duration::from_secs);
-        let hw_metrics =
-            self.get_request_collection_hw_usage_counter(collection_name.clone(), None);
+        let hw_metrics = self.get_request_collection_hw_usage_counter(collection_name.clone(), None);
         let res = query_batch(
             StrictModeCheckedTocProvider::new(&self.dispatcher),
             &collection_name,
