--- react_packages_react-server_src_ReactServerStreamConfigBun.js_expectedoutput.txt (expected)+++ react_packages_react-server_src_ReactServerStreamConfigBun.js_extracted.txt (actual)@@ -28,9 +28,6 @@ export const scheduleMicrotask = queueMicrotask;
 
 export function flushBuffered(destination: Destination) {
-  // Bun direct streams provide a flush function.
-  // If we don't have any more data to send right now.
-  // Flush whatever is in the buffer to the wire.
   if (typeof destination.flush === 'function') {
     destination.flush();
   }
@@ -73,7 +70,6 @@ export function typedArrayToBinaryChunk(
   content: $ArrayBufferView,
 ): BinaryChunk {
-  // TODO: Does this needs to be cloned if it's transferred in enqueue()?
   return content;
 }
 
@@ -90,12 +86,6 @@     // $FlowFixMe[incompatible-call]: This is an Error object or the destination accepts other types.
     destination.error(error);
   } else {
-    // Earlier implementations doesn't support this method. In that environment you're
-    // supposed to throw from a promise returned but we don't return a promise in our
-    // approach. We could fork this implementation but this is environment is an edge
-    // case to begin with. It's even less common to run this in an older environment.
-    // Even then, this is not where errors are supposed to happen and they get reported
-    // to a global callback in addition to this anyway. So it's fine just to close this.
     destination.close();
   }
 }
