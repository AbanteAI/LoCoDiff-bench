
index 44ec39d5c..aa09e13cd 100644
--- a/aider_tests_basic_test_editblock.py_expectedoutput.txt (expected):tmp/tmp84viu7n7_expected.txt	
+++ b/aider_tests_basic_test_editblock.py_extracted.txt (actual):tmp/tmpdk9p6uae_actual.txt	
@@ -140,11 +140,12 @@ Tooooo
 
 
 oops!
+>>>>>>> REPLACE
 """
 
         with self.assertRaises(ValueError) as cm:
-            list(eb.find_original_update_blocks(edit))
-        self.assertIn("Expected `>>>>>>> REPLACE` or `=======`", str(cm.exception))
+            _blocks = list(eb.find_original_update_blocks(edit))
+        self.assertIn("filename", str(cm.exception))
 
     def test_find_original_update_blocks_missing_filename(self):
         edit = """
@@ -162,7 +163,7 @@ oops!
 """
 
         with self.assertRaises(ValueError) as cm:
-            _blocks = list(eb.find_original_update_blocks(edit))
+            list(eb.find_original_update_blocks(edit))
         self.assertIn("filename", str(cm.exception))
 
     def test_find_original_update_blocks_no_final_newline(self):
@@ -275,28 +276,6 @@ These changes replace the `subprocess.run` patches with `subprocess.check_output
         result = eb.replace_most_similar_chunk(whole, part, replace)
         self.assertEqual(result, expected_output)
 
-    def test_replace_multiple_matches(self):
-        "only replace first occurrence"
-
-        whole = "line1\nline2\nline1\nline3\n"
-        part = "line1\n"
-        replace = "new_line\n"
-        expected_output = "new_line\nline2\nline1\nline3\n"
-
-        result = eb.replace_most_similar_chunk(whole, part, replace)
-        self.assertEqual(result, expected_output)
-
-    def test_replace_multiple_matches_missing_whitespace(self):
-        "only replace first occurrence"
-
-        whole = "    line1\n    line2\n    line1\n    line3\n"
-        part = "line1\n"
-        replace = "new_line\n"
-        expected_output = "    new_line\n    line2\n    line1\n    line3\n"
-
-        result = eb.replace_most_similar_chunk(whole, part, replace)
-        self.assertEqual(result, expected_output)
-
     def test_replace_part_with_just_some_missing_leading_whitespace(self):
         whole = "    line1\n    line2\n    line3\n"
         part = " line1\n line2\n"
@@ -320,6 +299,28 @@ These changes replace the `subprocess.run` patches with `subprocess.check_output
         result = eb.replace_most_similar_chunk(whole, part, replace)
         self.assertEqual(result, expected_output)
 
+    def test_replace_multiple_matches(self):
+        "only replace first occurrence"
+
+        whole = "line1\nline2\nline1\nline3\n"
+        part = "line1\n"
+        replace = "new_line\n"
+        expected_output = "new_line\nline2\nline1\nline3\n"
+
+        result = eb.replace_most_similar_chunk(whole, part, replace)
+        self.assertEqual(result, expected_output)
+
+    def test_replace_multiple_matches_missing_whitespace(self):
+        "only replace first occurrence"
+
+        whole = "    line1\n    line2\n    line1\n    line3\n"
+        part = "line1\n"
+        replace = "new_line\n"
+        expected_output = "    new_line\n    line2\n    line1\n    line3\n"
+
+        result = eb.replace_most_similar_chunk(whole, part, replace)
+        self.assertEqual(result, expected_output)
+
     def test_create_new_file_with_other_file_in_chat(self):
         # https://github.com/Aider-AI/aider/issues/2258
         with ChdirTemporaryDirectory():
@@ -507,7 +508,6 @@ path/to/a/file2.txt
 =======
 three
 >>>>>>> REPLACE
-```
 
 another change
 
@@ -576,6 +576,7 @@ echo "$1"
 exit 0
 >>>>>>> REPLACE
 ```
+
 """
 
         edits = list(eb.find_original_update_blocks(edit))
@@ -606,6 +607,7 @@ Console.WriteLine("Hello World!");
 Console.WriteLine("Hello, C# World!");
 >>>>>>> REPLACE
 ```
+
 """
 
         edits = list(eb.find_original_update_blocks(edit))
