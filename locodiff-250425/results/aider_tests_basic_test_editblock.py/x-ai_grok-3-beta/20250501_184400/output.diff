
index 44ec39d5..0e8bdebf 100644
--- a/aider_tests_basic_test_editblock.py_expectedoutput.txt (expected):tmp/tmp1qm8vh_z_expected.txt	
+++ b/aider_tests_basic_test_editblock.py_extracted.txt (actual):tmp/tmpizjre_mp_actual.txt	
@@ -266,15 +266,6 @@ These changes replace the `subprocess.run` patches with `subprocess.check_output
         result = eb.replace_most_similar_chunk(whole, part, replace)
         self.assertEqual(result, expected_output)
 
-    def test_replace_part_with_missing_leading_whitespace(self):
-        whole = "    line1\n    line2\n    line3\n"
-        part = "line1\nline2\n"
-        replace = "new_line1\nnew_line2\n"
-        expected_output = "    new_line1\n    new_line2\n    line3\n"
-
-        result = eb.replace_most_similar_chunk(whole, part, replace)
-        self.assertEqual(result, expected_output)
-
     def test_replace_multiple_matches(self):
         "only replace first occurrence"
 
@@ -306,6 +297,15 @@ These changes replace the `subprocess.run` patches with `subprocess.check_output
         result = eb.replace_most_similar_chunk(whole, part, replace)
         self.assertEqual(result, expected_output)
 
+    def test_replace_part_with_missing_leading_whitespace(self):
+        whole = "    line1\n    line2\n    line3\n"
+        part = "line1\nline2\n"
+        replace = "new_line1\nnew_line2\n"
+        expected_output = "    new_line1\n    new_line2\n    line3\n"
+
+        result = eb.replace_most_similar_chunk(whole, part, replace)
+        self.assertEqual(result, expected_output)
+
     def test_replace_part_with_missing_leading_whitespace_including_blank_line(self):
         """
         The part has leading whitespace on all lines, so should be ignored.
