
index 44ec39d5..825ca457 100644
--- a/aider_tests_basic_test_editblock.py_expectedoutput.txt (expected):tmp/tmp__epxmad_expected.txt	
+++ b/aider_tests_basic_test_editblock.py_extracted.txt (actual):tmp/tmpjlmqvn2o_actual.txt	
@@ -275,6 +275,20 @@ These changes replace the `subprocess.run` patches with `subprocess.check_output
         result = eb.replace_most_similar_chunk(whole, part, replace)
         self.assertEqual(result, expected_output)
 
+    def test_replace_part_with_missing_leading_whitespace_including_blank_line(self):
+        """
+        The part has leading whitespace on all lines, so should be ignored.
+        But it has a *blank* line with no whitespace at all, which was causing a
+        bug per issue #25. Test case to repro and confirm fix.
+        """
+        whole = "    line1\n    line2\n    line3\n"
+        part = "\n  line1\n  line2\n"
+        replace = "  new_line1\n  new_line2\n"
+        expected_output = "    new_line1\n    new_line2\n    line3\n"
+
+        result = eb.replace_most_similar_chunk(whole, part, replace)
+        self.assertEqual(result, expected_output)
+
     def test_replace_multiple_matches(self):
         "only replace first occurrence"
 
@@ -306,20 +320,6 @@ These changes replace the `subprocess.run` patches with `subprocess.check_output
         result = eb.replace_most_similar_chunk(whole, part, replace)
         self.assertEqual(result, expected_output)
 
-    def test_replace_part_with_missing_leading_whitespace_including_blank_line(self):
-        """
-        The part has leading whitespace on all lines, so should be ignored.
-        But it has a *blank* line with no whitespace at all, which was causing a
-        bug per issue #25. Test case to repro and confirm fix.
-        """
-        whole = "    line1\n    line2\n    line3\n"
-        part = "\n  line1\n  line2\n"
-        replace = "  new_line1\n  new_line2\n"
-        expected_output = "    new_line1\n    new_line2\n    line3\n"
-
-        result = eb.replace_most_similar_chunk(whole, part, replace)
-        self.assertEqual(result, expected_output)
-
     def test_create_new_file_with_other_file_in_chat(self):
         # https://github.com/Aider-AI/aider/issues/2258
         with ChdirTemporaryDirectory():
