
index 44ec39d5..bbbff2c3 100644
--- a/aider_tests_basic_test_editblock.py_expectedoutput.txt (expected):tmp/tmp_a70kpaz_expected.txt	
+++ b/aider_tests_basic_test_editblock.py_extracted.txt (actual):tmp/tmpc8cnx8ms_actual.txt	
@@ -31,7 +31,7 @@ class TestUtils(unittest.TestCase):
 
         # Test with no valid filename
         lines = ["```", "invalid_file.py", "```"]
-        self.assertEqual("invalid_file.py", eb.find_filename(lines, fence, valid_fnames))
+        self.assertIn("filename", str(eb.find_filename(lines, fence, valid_fnames)))
 
         # Test with multiple fences
         lines = ["```python", "file1.py", "```", "```", "file2.py", "```"]
@@ -140,6 +140,7 @@ Tooooo
 
 
 oops!
+>>>>>>> REPLACE
 """
 
         with self.assertRaises(ValueError) as cm:
@@ -275,6 +276,20 @@ These changes replace the `subprocess.run` patches with `subprocess.check_output
         result = eb.replace_most_similar_chunk(whole, part, replace)
         self.assertEqual(result, expected_output)
 
+    def test_replace_part_with_missing_leading_whitespace_including_blank_line(self):
+        """
+        The part has leading whitespace on all lines, so should be ignored.
+        But it has a *blank* line with no whitespace at all, which was causing a
+        bug per issue #25. Test case to repro and confirm fix.
+        """
+        whole = "    line1\n    line2\n    line3\n"
+        part = "\n  line1\n  line2\n"
+        replace = "  new_line1\n  new_line2\n"
+        expected_output = "    new_line1\n    new_line2\n    line3\n"
+
+        result = eb.replace_most_similar_chunk(whole, part, replace)
+        self.assertEqual(result, expected_output)
+
     def test_replace_multiple_matches(self):
         "only replace first occurrence"
 
@@ -306,20 +321,6 @@ These changes replace the `subprocess.run` patches with `subprocess.check_output
         result = eb.replace_most_similar_chunk(whole, part, replace)
         self.assertEqual(result, expected_output)
 
-    def test_replace_part_with_missing_leading_whitespace_including_blank_line(self):
-        """
-        The part has leading whitespace on all lines, so should be ignored.
-        But it has a *blank* line with no whitespace at all, which was causing a
-        bug per issue #25. Test case to repro and confirm fix.
-        """
-        whole = "    line1\n    line2\n    line3\n"
-        part = "\n  line1\n  line2\n"
-        replace = "  new_line1\n  new_line2\n"
-        expected_output = "    new_line1\n    new_line2\n    line3\n"
-
-        result = eb.replace_most_similar_chunk(whole, part, replace)
-        self.assertEqual(result, expected_output)
-
     def test_create_new_file_with_other_file_in_chat(self):
         # https://github.com/Aider-AI/aider/issues/2258
         with ChdirTemporaryDirectory():
@@ -360,6 +361,7 @@ creating a new file
             content = Path("newfile.txt").read_text(encoding="utf-8")
             self.assertEqual(content, "creating a new file\n")
 
+
     def test_full_edit(self):
         # Create a few temporary files
         _, file1 = tempfile.mkstemp()
@@ -432,6 +434,7 @@ new
 
         coder.send = mock_send
 
+
         # Call the run method with a message
         coder.run(with_message="hi")
 
