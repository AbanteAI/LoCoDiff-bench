--- aider_tests_basic_test_editblock.py_expectedoutput.txt (expected)+++ aider_tests_basic_test_editblock.py_extracted.txt (actual)@@ -137,9 +137,7 @@ Two
 =======
 Tooooo
-
-
-oops!
+>>>>>>> REPLACE
 """
 
         with self.assertRaises(ValueError) as cm:
@@ -155,9 +153,6 @@ Two
 =======
 Tooooo
-
-
-oops!
 >>>>>>> REPLACE
 """
 
@@ -173,7 +168,6 @@ =======
             self.io.tool_error("^C again to quit")
 >>>>>>> REPLACE
-
 aider/coder.py
 <<<<<<< SEARCH
             self.io.tool_error("Malformed ORIGINAL/UPDATE blocks, retrying...")
@@ -182,14 +176,12 @@             self.io.tool_error("Malformed ORIGINAL/UPDATE blocks, retrying...")
             self.io.tool_error(str(err))
 >>>>>>> REPLACE
-
 aider/coder.py
 <<<<<<< SEARCH
             self.console.print("[red]Unable to get commit message from gpt-3.5-turbo. Use /commit to try again.\n")
 =======
             self.io.tool_error("Unable to get commit message from gpt-3.5-turbo. Use /commit to try again.")
 >>>>>>> REPLACE
-
 aider/coder.py
 <<<<<<< SEARCH
             self.console.print("[red]Skipped commit.")
@@ -271,37 +263,6 @@         part = "line1\nline2\n"
         replace = "new_line1\nnew_line2\n"
         expected_output = "    new_line1\n    new_line2\n    line3\n"
-
-        result = eb.replace_most_similar_chunk(whole, part, replace)
-        self.assertEqual(result, expected_output)
-
-    def test_replace_multiple_matches(self):
-        "only replace first occurrence"
-
-        whole = "line1\nline2\nline1\nline3\n"
-        part = "line1\n"
-        replace = "new_line\n"
-        expected_output = "new_line\nline2\nline1\nline3\n"
-
-        result = eb.replace_most_similar_chunk(whole, part, replace)
-        self.assertEqual(result, expected_output)
-
-    def test_replace_multiple_matches_missing_whitespace(self):
-        "only replace first occurrence"
-
-        whole = "    line1\n    line2\n    line1\n    line3\n"
-        part = "line1\n"
-        replace = "new_line\n"
-        expected_output = "    new_line\n    line2\n    line1\n    line3\n"
-
-        result = eb.replace_most_similar_chunk(whole, part, replace)
-        self.assertEqual(result, expected_output)
-
-    def test_replace_part_with_just_some_missing_leading_whitespace(self):
-        whole = "    line1\n    line2\n    line3\n"
-        part = " line1\n line2\n"
-        replace = " new_line1\n     new_line2\n"
-        expected_output = "    new_line1\n        new_line2\n    line3\n"
 
         result = eb.replace_most_similar_chunk(whole, part, replace)
         self.assertEqual(result, expected_output)
@@ -320,6 +281,37 @@         result = eb.replace_most_similar_chunk(whole, part, replace)
         self.assertEqual(result, expected_output)
 
+    def test_replace_multiple_matches(self):
+        "only replace first occurrence"
+
+        whole = "line1\nline2\nline1\nline3\n"
+        part = "line1\n"
+        replace = "new_line\n"
+        expected_output = "new_line\nline2\nline1\nline3\n"
+
+        result = eb.replace_most_similar_chunk(whole, part, replace)
+        self.assertEqual(result, expected_output)
+
+    def test_replace_multiple_matches_missing_whitespace(self):
+        "only replace first occurrence"
+
+        whole = "    line1\n    line2\n    line1\n    line3\n"
+        part = "line1\n"
+        replace = "new_line\n"
+        expected_output = "    new_line\n    line2\n    line1\n    line3\n"
+
+        result = eb.replace_most_similar_chunk(whole, part, replace)
+        self.assertEqual(result, expected_output)
+
+    def test_replace_part_with_just_some_missing_leading_whitespace(self):
+        whole = "    line1\n    line2\n    line3\n"
+        part = " line1\n line2\n"
+        replace = " new_line1\n     new_line2\n"
+        expected_output = "    new_line1\n        new_line2\n    line3\n"
+
+        result = eb.replace_most_similar_chunk(whole, part, replace)
+        self.assertEqual(result, expected_output)
+
     def test_create_new_file_with_other_file_in_chat(self):
         # https://github.com/Aider-AI/aider/issues/2258
         with ChdirTemporaryDirectory():
@@ -532,6 +524,7 @@             ],
         )
 
+
     def test_find_original_update_blocks_quad_backticks_with_triples_in_LLM_reply(self):
         # https://github.com/Aider-AI/aider/issues/2879
         edit = """
