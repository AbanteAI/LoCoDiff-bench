--- ghostty_src_terminal_sgr.zig_expectedoutput.txt (expected)+++ ghostty_src_terminal_sgr.zig_extracted.txt (actual)@@ -470,6 +470,7 @@     {
         const v = testParse(&[_]u16{4});
         try testing.expect(v == .underline);
+        try testing.expectEqual(Attribute.Underline.single, v.underline);
     }
 
     {
@@ -824,9 +825,7 @@     try testing.expect(p.next() == null);
 }
 
-// Kakoune sent this complex SGR sequence that caused invalid behavior.
 test "sgr: kakoune input" {
-    // This used to crash
     var p: Parser = .{
         .params = &[_]u16{ 0, 4, 3, 38, 2, 175, 175, 215, 58, 2, 0, 190, 80, 70 },
         .params_sep = sep: {
@@ -864,15 +863,9 @@         try testing.expectEqual(@as(u8, 80), v.underline_color.g);
         try testing.expectEqual(@as(u8, 70), v.underline_color.b);
     }
-
-    //try testing.expect(p.next() == null);
-}
-
-// Discussion #5930, another input sent by kakoune
+}
+
 test "sgr: kakoune input issue underline, fg, and bg" {
-    // echo -e "\033[4:3;38;2;51;51;51;48;2;170;170;170;58;2;255;97;136mset everything in one sequence, broken\033[m"
-
-    // This used to crash
     var p: Parser = .{
         .params = &[_]u16{ 4, 3, 38, 2, 51, 51, 51, 48, 2, 170, 170, 170, 58, 2, 255, 97, 136 },
         .params_sep = sep: {
