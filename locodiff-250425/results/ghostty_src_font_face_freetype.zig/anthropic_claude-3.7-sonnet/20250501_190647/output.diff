--- ghostty_src_font_face_freetype.zig_expectedoutput.txt (expected)+++ ghostty_src_font_face_freetype.zig_extracted.txt (actual)@@ -8,7 +8,7 @@ const builtin = @import("builtin");
 const freetype = @import("freetype");
 const harfbuzz = @import("harfbuzz");
-const stb = @import("../../stb/main.zig");
+const resize = @import("../../stb/main.zig");
 const assert = std.debug.assert;
 const testing = std.testing;
 const Allocator = std.mem.Allocator;
@@ -306,11 +306,11 @@ 
         // If our glyph has color, we want to render the color
         try self.face.loadGlyph(glyph_index, .{
-            .color = self.face.hasColor(),
-
             // If we have synthetic bold, we have to set some additional
             // glyph properties before render so we don't render here.
             .render = !self.synthetic.bold,
+
+            .color = self.face.hasColor(),
 
             // use options from config
             .no_hinting = !self.load_flags.hinting,
@@ -423,7 +423,7 @@             result.buffer = buf.ptr;
             errdefer alloc.free(buf);
 
-            if (stb.stbir_resize_uint8(
+            if (resize.stbir_resize_uint8(
                 bitmap_original.buffer,
                 @intCast(original_width),
                 @intCast(original_height),
