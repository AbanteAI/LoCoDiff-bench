
index 3a00b3f01..08f1a8e41 100644
--- a/ghostty_src_renderer_metal_shaders.zig_expectedoutput.txt (expected):tmp/tmpli35epco_expected.txt	
+++ b/ghostty_src_renderer_metal_shaders.zig_extracted.txt (actual):tmp/tmpdmehkyzq_actual.txt	
@@ -106,7 +106,7 @@ pub const Image = extern struct {
 
 /// The uniforms that are passed to the terminal cell shader.
 pub const Uniforms = extern struct {
-    // Note: all of the explicit aligmnments are copied from the
+    // Note: all of the explicit aligmnents are copied from the
     // MSL developer reference just so that we can be sure that we got
     // it all exactly right.
 
@@ -171,7 +171,7 @@ pub const Uniforms = extern struct {
 
 /// The uniforms used for custom postprocess shaders.
 pub const PostUniforms = extern struct {
-    // Note: all of the explicit aligmnments are copied from the
+    // Note: all of the explicit aligmnents are copied from the
     // MSL developer reference just so that we can be sure that we got
     // it all exactly right.
     resolution: [3]f32 align(16),
@@ -625,7 +625,7 @@ fn initImagePipeline(
 
             // Access each Image per instance, not per vertex.
             layout.setProperty("stepFunction", @intFromEnum(mtl.MTLVertexStepFunction.per_instance));
-            layout.setProperty("stride", @as(c_ulong, @sizeOf(Image)));
+            layout.setProperty("strride", @as(c_ulong, @sizeOf(Image)));
         }
 
         break :vertex_desc desc;
