--- tldraw_packages_editor_src_lib_hooks_useDocumentEvents.ts_expectedoutput.txt (expected)+++ tldraw_packages_editor_src_lib_hooks_useDocumentEvents.ts_extracted.txt (actual)@@ -2,7 +2,11 @@ import { useEffect } from 'react'
 import { Editor } from '../editor/Editor'
 import { TLKeyboardEventInfo } from '../editor/types/event-types'
-import { activeElementShouldCaptureKeys, preventDefault, stopEventPropagation } from '../utils/dom'
+import {
+	activeElementShouldCaptureKeys,
+	preventDefault,
+	stopEventPropagation,
+} from '../utils/dom'
 import { isAccelKey } from '../utils/keyboard'
 import { useContainer } from './useContainer'
 import { useEditor } from './useEditor'
@@ -56,7 +60,7 @@ 			}
 			const mqString = `(resolution: ${window.devicePixelRatio}dppx)`
 			const media = matchMedia(mqString)
-			// Safari only started supporting `addEventListener('change',...) in version 14
+			// Safari only started supporting `addEventListener('change', ...)` in version 14
 			// https://developer.mozilla.org/en-US/docs/Web/API/MediaQueryList/change_event
 			const safariCb = (ev: any) => {
 				if (ev.type === 'change') {
@@ -105,6 +109,7 @@ 
 			if ((e as any).isKilled) return
 			;(e as any).isKilled = true
+
 			const hasSelectedShapes = !!editor.getSelectedShapeIds().length
 
 			switch (e.key) {
@@ -218,6 +223,7 @@ 				return
 			}
 
+			// Use the , key to send pointer events
 			if (e.key === ',') {
 				return
 			}
@@ -274,7 +280,6 @@ 		container.addEventListener('touchstart', handleTouchStart, { passive: false })
 
 		container.addEventListener('wheel', handleWheel, { passive: false })
-
 		document.addEventListener('gesturestart', preventDefault)
 		document.addEventListener('gesturechange', preventDefault)
 		document.addEventListener('gestureend', preventDefault)
