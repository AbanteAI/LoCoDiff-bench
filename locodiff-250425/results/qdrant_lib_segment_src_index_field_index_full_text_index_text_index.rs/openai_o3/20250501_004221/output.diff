
index 9edafaca..c5a05a09 100644
--- a/qdrant_lib_segment_src_index_field_index_full_text_index_text_index.rs_expectedoutput.txt (expected):tmp/tmpodm3lev__expected.txt	
+++ b/qdrant_lib_segment_src_index_field_index_full_text_index_text_index.rs_extracted.txt (actual):tmp/tmpen9d6r2e_actual.txt	
@@ -14,10 +14,10 @@ use super::inverted_index::{Document, InvertedIndex, ParsedQuery, TokenId};
 use super::mmap_text_index::{FullTextMmapIndexBuilder, MmapFullTextIndex};
 use super::mutable_text_index::MutableFullTextIndex;
 use super::tokenizers::Tokenizer;
-use crate::common::Flusher;
 use crate::common::operation_error::{OperationError, OperationResult};
 use crate::common::rocksdb_buffered_delete_wrapper::DatabaseColumnScheduledDeleteWrapper;
 use crate::common::rocksdb_wrapper::DatabaseColumnWrapper;
+use crate::common::Flusher;
 use crate::data_types::index::TextIndexParams;
 use crate::index::field_index::{
     CardinalityEstimation, FieldIndexBuilderTrait, PayloadBlockCondition, PayloadFieldIndex,
@@ -144,15 +144,21 @@ impl FullTextIndex {
         hw_counter: &HardwareCounterCell,
     ) -> CardinalityEstimation {
         match self {
-            Self::Mutable(index) => index
-                .inverted_index
-                .estimate_cardinality(query, condition, hw_counter),
-            Self::Immutable(index) => index
-                .inverted_index
-                .estimate_cardinality(query, condition, hw_counter),
-            Self::Mmap(index) => index
-                .inverted_index
-                .estimate_cardinality(query, condition, hw_counter),
+            Self::Mutable(index) => {
+                index
+                    .inverted_index
+                    .estimate_cardinality(query, condition, hw_counter)
+            }
+            Self::Immutable(index) => {
+                index
+                    .inverted_index
+                    .estimate_cardinality(query, condition, hw_counter)
+            }
+            Self::Mmap(index) => {
+                index
+                    .inverted_index
+                    .estimate_cardinality(query, condition, hw_counter)
+            }
         }
     }
 
@@ -163,12 +169,16 @@ impl FullTextIndex {
         hw_counter: &HardwareCounterCell,
     ) -> bool {
         match self {
-            Self::Mutable(index) => index
-                .inverted_index
-                .check_match(query, point_id, hw_counter),
-            Self::Immutable(index) => index
-                .inverted_index
-                .check_match(query, point_id, hw_counter),
+            Self::Mutable(index) => {
+                index
+                    .inverted_index
+                    .check_match(query, point_id, hw_counter)
+            }
+            Self::Immutable(index) => {
+                index
+                    .inverted_index
+                    .check_match(query, point_id, hw_counter)
+            }
             Self::Mmap(index) => index
                 .inverted_index
                 .check_match(query, point_id, hw_counter),
