
index 9edafaca..a5503127 100644
--- a/qdrant_lib_segment_src_index_field_index_full_text_index_text_index.rs_expectedoutput.txt (expected):tmp/tmpppighjam_expected.txt	
+++ b/qdrant_lib_segment_src_index_field_index_full_text_index_text_index.rs_extracted.txt (actual):tmp/tmp2yu1lnm7_actual.txt	
@@ -14,7 +14,6 @@ use super::inverted_index::{Document, InvertedIndex, ParsedQuery, TokenId};
 use super::mmap_text_index::{FullTextMmapIndexBuilder, MmapFullTextIndex};
 use super::mutable_text_index::MutableFullTextIndex;
 use super::tokenizers::Tokenizer;
-use crate::common::Flusher;
 use crate::common::operation_error::{OperationError, OperationResult};
 use crate::common::rocksdb_buffered_delete_wrapper::DatabaseColumnScheduledDeleteWrapper;
 use crate::common::rocksdb_wrapper::DatabaseColumnWrapper;
@@ -216,9 +215,7 @@ impl FullTextIndex {
             tokens: BTreeSet<String>,
         }
         serde_cbor::from_slice::<StoredDocument>(data)
-            .map_err(|e| {
-                OperationError::service_error(format!("Failed to deserialize document: {e}"))
-            })
+            .map_err(|e| OperationError::service_error(format!("Failed to deserialize document: {e}")))
             .map(|doc| doc.tokens)
     }
 
@@ -376,7 +373,7 @@ impl PayloadFieldIndex for FullTextIndex {
         }
     }
 
-    fn flusher(&self) -> Flusher {
+    fn flusher(&self) -> crate::common::Flusher {
         match self {
             Self::Mutable(index) => index.db_wrapper.flusher(),
             Self::Immutable(index) => index.db_wrapper.flusher(),
