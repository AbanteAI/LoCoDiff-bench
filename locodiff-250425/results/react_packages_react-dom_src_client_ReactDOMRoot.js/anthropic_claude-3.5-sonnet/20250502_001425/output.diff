
index 9352fb4a..f87a095f 100644
--- a/react_packages_react-dom_src_client_ReactDOMRoot.js_expectedoutput.txt (expected):tmp/tmpfuxrjn0c_expected.txt	
+++ b/react_packages_react-dom_src_client_ReactDOMRoot.js_extracted.txt (actual):tmp/tmp8344bnxl_actual.txt	
@@ -180,28 +180,29 @@ export function createRoot(
   let onRecoverableError = defaultOnRecoverableError;
   let transitionCallbacks = null;
 
-  if (options !== null && options !== undefined) {
-    if (__DEV__) {
-      if ((options: any).hydrate) {
-        console.warn(
-          'hydrate through createRoot is deprecated. Use ReactDOMClient.hydrateRoot(container, <App />) instead.',
+  if (__DEV__) {
+    if ((options: any).hydrate) {
+      console.warn(
+        'hydrate through createRoot is deprecated. Use ReactDOMClient.hydrateRoot(container, <App />) instead.',
+      );
+    } else {
+      if (
+        typeof options === 'object' &&
+        options !== null &&
+        (options: any).$$typeof === REACT_ELEMENT_TYPE
+      ) {
+        console.error(
+          'You passed a JSX element to createRoot. You probably meant to ' +
+            'call root.render instead. ' +
+            'Example usage:\n\n' +
+            '  let root = createRoot(domContainer);\n' +
+            '  root.render(<App />);',
         );
-      } else {
-        if (
-          typeof options === 'object' &&
-          options !== null &&
-          (options: any).$$typeof === REACT_ELEMENT_TYPE
-        ) {
-          console.error(
-            'You passed a JSX element to createRoot. You probably meant to ' +
-              'call root.render instead. ' +
-              'Example usage:\n\n' +
-              '  let root = createRoot(domContainer);\n' +
-              '  root.render(<App />);',
-          );
-        }
       }
     }
+  }
+
+  if (options !== null && options !== undefined) {
     if (options.unstable_strictMode === true) {
       isStrictMode = true;
     }
@@ -250,6 +251,7 @@ export function createRoot(
 function ReactDOMHydrationRoot(internalRoot: FiberRoot) {
   this._internalRoot = internalRoot;
 }
+
 function scheduleHydration(target: Node) {
   if (target) {
     queueExplicitHydrationTarget(target);
@@ -290,6 +292,7 @@ export function hydrateRoot(
   let onRecoverableError = defaultOnRecoverableError;
   let transitionCallbacks = null;
   let formState = null;
+
   if (options !== null && options !== undefined) {
     if (options.unstable_strictMode === true) {
       isStrictMode = true;
