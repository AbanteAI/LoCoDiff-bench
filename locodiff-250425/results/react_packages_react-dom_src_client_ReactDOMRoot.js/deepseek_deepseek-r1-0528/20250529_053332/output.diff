
index 9352fb4a8..b7dccb4ea 100644
--- a/react_packages_react-dom_src_client_ReactDOMRoot.js_expectedoutput.txt (expected):tmp/tmpj_i5ugoe_expected.txt	
+++ b/react_packages_react-dom_src_client_ReactDOMRoot.js_extracted.txt (actual):tmp/tmpx36l0jhz_actual.txt	
@@ -7,13 +7,13 @@
  * @flow
  */
 
+import type {Container} from 'react-dom-bindings/src/client/ReactDOMContainer';
 import type {ReactNodeList, ReactFormState} from 'shared/ReactTypes';
 import type {
   FiberRoot,
   TransitionTracingCallbacks,
 } from 'react-reconciler/src/ReactInternalTypes';
 
-import {isValidContainer} from 'react-dom-bindings/src/client/ReactDOMContainer';
 import {queueExplicitHydrationTarget} from 'react-dom-bindings/src/events/ReactDOMEventReplaying';
 import {REACT_ELEMENT_TYPE} from 'shared/ReactSymbols';
 import {disableCommentsAsDOMContainers} from 'shared/ReactFeatureFlags';
@@ -163,7 +163,7 @@ ReactDOMHydrationRoot.prototype.unmount = ReactDOMRoot.prototype.unmount =
   };
 
 export function createRoot(
-  container: Element | Document | DocumentFragment,
+  container: Container,
   options?: CreateRootOptions,
 ): RootType {
   if (!isValidContainer(container)) {
@@ -259,7 +259,7 @@ function scheduleHydration(target: Node) {
 ReactDOMHydrationRoot.prototype.unstable_scheduleHydration = scheduleHydration;
 
 export function hydrateRoot(
-  container: Document | Element,
+  container: Container,
   initialChildren: ReactNodeList,
   options?: HydrateRootOptions,
 ): RootType {
