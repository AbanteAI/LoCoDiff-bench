
index 9352fb4a..bef892ab 100644
--- a/react_packages_react-dom_src_client_ReactDOMRoot.js_expectedoutput.txt (expected):tmp/tmpmgtawse6_expected.txt	
+++ b/react_packages_react-dom_src_client_ReactDOMRoot.js_extracted.txt (actual):tmp/tmp8qi0pp0f_actual.txt	
@@ -7,7 +7,11 @@
  * @flow
  */
 
-import type {ReactNodeList, ReactFormState} from 'shared/ReactTypes';
+import type {Container} from 'react-dom-bindings/src/client/ReactDOMHostConfig';
+import type {
+  ReactNodeList,
+  ReactFormState,
+} from 'shared/ReactTypes';
 import type {
   FiberRoot,
   TransitionTracingCallbacks,
@@ -18,6 +22,33 @@ import {queueExplicitHydrationTarget} from 'react-dom-bindings/src/events/ReactD
 import {REACT_ELEMENT_TYPE} from 'shared/ReactSymbols';
 import {disableCommentsAsDOMContainers} from 'shared/ReactFeatureFlags';
 
+
+import ReactDOMSharedInternals from '../ReactDOMSharedInternals';
+const {Dispatcher} = ReactDOMSharedInternals;
+
+import {ReactDOMClientDispatcher} from 'react-dom-bindings/src/client/ReactFiberConfigDOM';
+import {
+  clearContainer,
+  markContainerAsRoot,
+  unmarkContainerAsRoot,
+} from 'react-dom-bindings/src/client/ReactDOMComponentTree';
+import {listenToAllSupportedEvents} from 'react-dom-bindings/src/events/DOMPluginEventSystem';
+import {COMMENT_NODE} from 'react-dom-bindings/src/client/HTMLNodeType';
+
+import {
+  createContainer,
+  createHydrationContainer,
+  updateContainer,
+  updateContainerSync,
+  flushSyncWork,
+  isAlreadyRendering,
+  defaultOnUncaughtError,
+  defaultOnCaughtError,
+  defaultOnRecoverableError,
+} from 'react-reconciler/src/ReactFiberReconciler';
+import {ConcurrentRoot} from 'react-reconciler/src/ReactRootTags';
+
+
 export type RootType = {
   render(children: ReactNodeList): void,
   unmount(): void,
@@ -71,27 +102,6 @@ export type HydrateRootOptions = {
   formState?: ReactFormState<any, any> | null,
 };
 
-import {
-  isContainerMarkedAsRoot,
-  markContainerAsRoot,
-  unmarkContainerAsRoot,
-} from 'react-dom-bindings/src/client/ReactDOMComponentTree';
-import {listenToAllSupportedEvents} from 'react-dom-bindings/src/events/DOMPluginEventSystem';
-import {COMMENT_NODE} from 'react-dom-bindings/src/client/HTMLNodeType';
-
-import {
-  createContainer,
-  createHydrationContainer,
-  updateContainer,
-  updateContainerSync,
-  flushSyncWork,
-  isAlreadyRendering,
-  defaultOnUncaughtError,
-  defaultOnCaughtError,
-  defaultOnRecoverableError,
-} from 'react-reconciler/src/ReactFiberReconciler';
-import {ConcurrentRoot} from 'react-reconciler/src/ReactRootTags';
-
 // $FlowFixMe[missing-this-annot]
 function ReactDOMRoot(internalRoot: FiberRoot) {
   this._internalRoot = internalRoot;
@@ -225,6 +235,7 @@ export function createRoot(
   const root = createContainer(
     container,
     ConcurrentRoot,
+    false,
     null,
     isStrictMode,
     concurrentUpdatesByDefaultOverride,
@@ -316,7 +327,6 @@ export function hydrateRoot(
 
   const root = createHydrationContainer(
     initialChildren,
-    null,
     container,
     ConcurrentRoot,
     hydrationCallbacks,
@@ -330,6 +340,7 @@ export function hydrateRoot(
     formState,
   );
   markContainerAsRoot(root.current, container);
+  Dispatcher.current = ReactDOMClientDispatcher;
   // This can't be a comment node since hydration doesn't work on comment nodes anyway.
   listenToAllSupportedEvents(container);
 
