
index 9352fb4a..a758bd08 100644
--- a/react_packages_react-dom_src_client_ReactDOMRoot.js_expectedoutput.txt (expected):tmp/tmpwlogm4n__expected.txt	
+++ b/react_packages_react-dom_src_client_ReactDOMRoot.js_extracted.txt (actual):tmp/tmpn_36sb6z_actual.txt	
@@ -24,28 +24,28 @@ export type RootType = {
   _internalRoot: FiberRoot | null,
 };
 
-export type CreateRootOptions = {
+export type CreateRootOptions = {|
   unstable_strictMode?: boolean,
   unstable_transitionCallbacks?: TransitionTracingCallbacks,
   identifierPrefix?: string,
   onUncaughtError?: (
     error: mixed,
-    errorInfo: {+componentStack?: ?string},
+    errorInfo: {|+componentStack?: ?string|},
   ) => void,
   onCaughtError?: (
     error: mixed,
     errorInfo: {
       +componentStack?: ?string,
       +errorBoundary?: ?React$Component<any, any>,
-    },
+    |},
   ) => void,
   onRecoverableError?: (
     error: mixed,
-    errorInfo: {+componentStack?: ?string},
+    errorInfo: {|+componentStack?: ?string|},
   ) => void,
-};
+|};
 
-export type HydrateRootOptions = {
+export type HydrateRootOptions = {|
   // Hydration options
   onHydrated?: (hydrationBoundary: Comment) => void,
   onDeleted?: (hydrationBoundary: Comment) => void,
@@ -55,21 +55,21 @@ export type HydrateRootOptions = {
   identifierPrefix?: string,
   onUncaughtError?: (
     error: mixed,
-    errorInfo: {+componentStack?: ?string},
+    errorInfo: {|+componentStack?: ?string|},
   ) => void,
   onCaughtError?: (
     error: mixed,
     errorInfo: {
       +componentStack?: ?string,
       +errorBoundary?: ?React$Component<any, any>,
-    },
+    |},
   ) => void,
   onRecoverableError?: (
     error: mixed,
-    errorInfo: {+componentStack?: ?string},
+    errorInfo: {|+componentStack?: ?string|},
   ) => void,
   formState?: ReactFormState<any, any> | null,
-};
+|};
 
 import {
   isContainerMarkedAsRoot,
