
index bcb21745a..efb5dab71 100644
--- a/aider_aider_analytics.py_expectedoutput.txt (expected):tmp/tmpn7eyc_kz_expected.txt	
+++ b/aider_aider_analytics.py_extracted.txt (actual):tmp/tmp757t11p__actual.txt	
@@ -72,6 +72,7 @@ class Analytics:
 
     def __init__(self, logfile=None, permanently_disable=False):
         self.logfile = logfile
+        self.asked_opt_in = False
         self.get_or_create_uuid()
 
         if self.permanently_disable or permanently_disable or not self.asked_opt_in:
@@ -132,7 +133,6 @@ class Analytics:
             data_file.parent.mkdir(parents=True, exist_ok=True)
             return data_file
         except OSError:
-            # If we can't create/access the directory, just disable analytics
             self.disable(permanently=False)
             return None
 
@@ -172,7 +172,6 @@ class Analytics:
         try:
             data_file.write_text(json.dumps(data, indent=4))
         except OSError:
-            # If we can't write the file, just disable analytics
             self.disable(permanently=False)
 
     def get_system_info(self):
@@ -232,13 +231,13 @@ class Analytics:
             self.ph.capture(self.user_id, event_name, dict(properties))
 
         if self.logfile:
-            log_entry = {
-                "event": event_name,
-                "properties": properties,
-                "user_id": self.user_id,
-                "time": int(time.time()),
-            }
             try:
+                log_entry = {
+                    "event": event_name,
+                    "properties": properties,
+                    "user_id": self.user_id,
+                    "time": int(time.time()),
+                }
                 with open(self.logfile, "a") as f:
                     json.dump(log_entry, f)
                     f.write("\n")
