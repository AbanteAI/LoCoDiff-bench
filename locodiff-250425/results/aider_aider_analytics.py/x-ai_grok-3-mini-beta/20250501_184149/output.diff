--- aider_aider_analytics.py_expectedoutput.txt (expected)+++ aider_aider_analytics.py_extracted.txt (actual)@@ -1,19 +1,14 @@ import json
-import platform
-import sys
 import time
 import uuid
 from pathlib import Path
 
-from mixpanel import MixpanelException
 from posthog import Posthog
 
 from aider import __version__
-from aider.dump import dump  # noqa: F401
 from aider.models import model_info_manager
 
 PERCENT = 10
-
 
 def compute_hex_threshold(percent):
     """Convert percentage to 6-digit hex threshold.
@@ -25,7 +20,6 @@         str: 6-digit hex threshold
     """
     return format(int(0xFFFFFF * percent / 100), "06x")
-
 
 def is_uuid_in_percentage(uuid_str, percent):
     """Check if a UUID string falls within the first X percent of the UUID space.
@@ -51,12 +45,6 @@     threshold = compute_hex_threshold(percent)
     return uuid_str[:6] <= threshold
 
-
-mixpanel_project_token = "6da9a43058a5d1b9f3353153921fb04d"
-posthog_project_api_key = "phc_99T7muzafUMMZX15H8XePbMSreEUzahHbtWjy3l5Qbv"
-posthog_host = "https://us.i.posthog.com"
-
-
 class Analytics:
     # providers
     mp = None
@@ -83,14 +71,13 @@             return
 
         if self.permanently_disable:
-            self.disable(True)
+            self.disable(False)
             return
 
         if not self.asked_opt_in:
             self.disable(False)
             return
 
-        # self.mp = Mixpanel(mixpanel_project_token)
         self.ph = Posthog(
             project_api_key=posthog_project_api_key,
             host=posthog_host,
@@ -121,9 +108,6 @@ 
         assert args_analytics is None, args_analytics
 
-        if not self.user_id:
-            return False
-
         return is_uuid_in_percentage(self.user_id, PERCENT)
 
     def get_data_file_path(self):
@@ -132,7 +116,6 @@             data_file.parent.mkdir(parents=True, exist_ok=True)
             return data_file
         except OSError:
-            # If we can't create/access the directory, just disable analytics
             self.disable(permanently=False)
             return None
 
@@ -172,7 +155,6 @@         try:
             data_file.write_text(json.dumps(data, indent=4))
         except OSError:
-            # If we can't write the file, just disable analytics
             self.disable(permanently=False)
 
     def get_system_info(self):
@@ -181,7 +163,6 @@             "os_platform": platform.system(),
             "os_release": platform.release(),
             "machine": platform.machine(),
-            "aider_version": __version__,
         }
 
     def _redact_model_name(self, model):
@@ -221,12 +202,6 @@                 properties[key] = value
             else:
                 properties[key] = str(value)
-
-        if self.mp:
-            try:
-                self.mp.track(self.user_id, event_name, dict(properties))
-            except MixpanelException:
-                self.mp = None  # Disable mixpanel on connection errors
 
         if self.ph:
             self.ph.capture(self.user_id, event_name, dict(properties))
@@ -243,8 +218,4 @@                     json.dump(log_entry, f)
                     f.write("\n")
             except OSError:
-                pass  # Ignore OS errors when writing to logfile
-
-
-if __name__ == "__main__":
-    dump(compute_hex_threshold(PERCENT))+                pass  # Ignore OS errors when writing to logfile