--- aider_aider_analytics.py_expectedoutput.txt (expected)+++ aider_aider_analytics.py_extracted.txt (actual)@@ -14,7 +14,6 @@ 
 PERCENT = 10
 
-
 def compute_hex_threshold(percent):
     """Convert percentage to 6-digit hex threshold.
 
@@ -72,10 +71,12 @@ 
     def __init__(self, logfile=None, permanently_disable=False):
         self.logfile = logfile
+        self.asked_opt_in = False
         self.get_or_create_uuid()
 
         if self.permanently_disable or permanently_disable or not self.asked_opt_in:
             self.disable(permanently_disable)
+            return
 
     def enable(self):
         if not self.user_id:
@@ -83,7 +84,7 @@             return
 
         if self.permanently_disable:
-            self.disable(True)
+            self.disable(False)
             return
 
         if not self.asked_opt_in:
@@ -102,11 +103,10 @@     def disable(self, permanently):
         self.mp = None
         self.ph = None
-
         if permanently:
             self.asked_opt_in = True
-            self.permanently_disable = True
-            self.save_data()
+        self.permanently_disable = True
+        self.save_data()
 
     def need_to_ask(self, args_analytics):
         if args_analytics is False:
@@ -120,9 +120,6 @@             return True
 
         assert args_analytics is None, args_analytics
-
-        if not self.user_id:
-            return False
 
         return is_uuid_in_percentage(self.user_id, PERCENT)
 
@@ -198,8 +195,6 @@     def posthog_error(self):
         """disable posthog if we get an error"""
         print("X" * 100)
-        # https://github.com/PostHog/posthog-python/blob/9e1bb8c58afaa229da24c4fb576c08bb88a75752/posthog/consumer.py#L86
-        # https://github.com/Aider-AI/aider/issues/2532
         self.ph = None
 
     def event(self, event_name, main_model=None, **kwargs):
@@ -207,7 +202,6 @@             return
 
         properties = {}
-
         if main_model:
             properties["main_model"] = self._redact_model_name(main_model)
             properties["weak_model"] = self._redact_model_name(main_model.weak_model)
