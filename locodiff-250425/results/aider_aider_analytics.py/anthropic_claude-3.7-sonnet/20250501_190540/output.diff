--- aider_aider_analytics.py_expectedoutput.txt (expected)+++ aider_aider_analytics.py_extracted.txt (actual)@@ -70,41 +70,29 @@     # ephemeral
     logfile = None
 
-    def __init__(self, logfile=None, permanently_disable=False):
+    def __init__(self, enable=False, logfile=None, permanently_disable=False):
         self.logfile = logfile
+        self.asked_opt_in = False
         self.get_or_create_uuid()
 
-        if self.permanently_disable or permanently_disable or not self.asked_opt_in:
+        if not enable or self.permanently_disable or permanently_disable:
             self.disable(permanently_disable)
-
-    def enable(self):
-        if not self.user_id:
-            self.disable(False)
-            return
-
-        if self.permanently_disable:
-            self.disable(True)
-            return
-
-        if not self.asked_opt_in:
-            self.disable(False)
-            return
-
-        # self.mp = Mixpanel(mixpanel_project_token)
-        self.ph = Posthog(
-            project_api_key=posthog_project_api_key,
-            host=posthog_host,
-            on_error=self.posthog_error,
-            enable_exception_autocapture=True,
-            super_properties=self.get_system_info(),  # Add system info to all events
-        )
+            return
+
+        if self.user_id and not self.permanently_disable:
+            # self.mp = Mixpanel(mixpanel_project_token)
+            self.ph = Posthog(
+                project_api_key=posthog_project_api_key,
+                host=posthog_host,
+                on_error=self.posthog_error,
+                enable_exception_autocapture=True,
+                super_properties=self.get_system_info(),  # Add system info to all events
+            )
 
     def disable(self, permanently):
         self.mp = None
         self.ph = None
-
-        if permanently:
-            self.asked_opt_in = True
+        if permanently and not self.permanently_disable:
             self.permanently_disable = True
             self.save_data()
 
