Looking at the commit history of the `ReactDOMRoot-test.js` file, I can see several key developments related to how React DOM handles container validation and hydration:

## Key Findings:

### 1. **Container Validation Evolution**
- Initially (2017), React had basic validation that containers must be DOM elements
- Warning for `document.body` was added but later removed when Float feature was enabled (2022)
- Comment nodes were initially supported but later disabled (2022)

### 2. **Hydration Improvements**
The test file shows progressive refinement of hydration:
- Early tests just checked basic hydration functionality
- Later added detailed mismatch warnings with helpful error messages
- Most recently (2025), added Owner Stack information to hydration mismatches for better debugging

### 3. **API Changes Over Time**
- **2018**: `createRoot` started as `unstable_createRoot`
- **2021**: Moved from experimental to stable API  
- **2022**: `createRoot` and `hydrateRoot` moved to `react-dom/client` module
- **2024**: Legacy APIs (`render`, `hydrate`, `unmountComponentAtNode`) were removed

### 4. **Error Handling Evolution**
- **2022**: Added warnings for common mistakes (JSX passed to createRoot, missing children in hydrateRoot)
- **2023**: Moved from throwing errors to logging them via `reportError`
- **2024**: Made error handlers configurable via root options
- **2025**: Converted to using `assertConsoleErrorDev` for better test assertions

### 5. **Key Container-Related Features**
- **Clear existing children**: createRoot clears existing DOM content before mounting
- **Multiple roots warning**: Prevents creating multiple roots on the same container
- **Validation timing**: Container validation happens at root creation, not during render

The evolution shows React moving toward:
- More helpful error messages
- Better separation of concerns (client code in `/client`)
- More predictable behavior (always clearing containers)
- Better developer experience with detailed hydration mismatch information