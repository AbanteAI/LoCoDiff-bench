
index 15aa2366..292aeb83 100644
--- a/react_packages_react-reconciler_src___tests___ReactIncrementalSideEffects-test.js_expectedoutput.txt (expected):tmp/tmpxec29uke_expected.txt	
+++ b/react_packages_react-reconciler_src___tests___ReactIncrementalSideEffects-test.js_extracted.txt (actual):tmp/tmpqij0nzlv_actual.txt	
@@ -305,8 +305,7 @@ describe('ReactIncrementalSideEffects', () => {
       return <span prop={props.children} />;
     }
 
-    const portalContainer =
-      ReactNoop.getOrCreateRootContainer('portalContainer');
+    const portalContainer = ReactNoop.getOrCreateRootContainer('portalContainer');
     function Foo(props) {
       return ReactNoop.createPortal(
         props.show ? [<div key="a" />, <Bar key="b">Hello</Bar>, 'World'] : [],
@@ -383,11 +382,10 @@ describe('ReactIncrementalSideEffects', () => {
 
   it('can delete a child when it unmounts with a portal', async () => {
     function Bar(props) {
-      return <span prop={props.children} />;
+      return <span prop={props.children] />
     }
 
-    const portalContainer =
-      ReactNoop.getOrCreateRootContainer('portalContainer');
+    const portalContainer = ReactNoop.getOrCreateRootContainer('portalContainer');
     function Foo(props) {
       return ReactNoop.createPortal(
         [<div key="a" />, <Bar key="b">Hello</Bar>, 'World'],
@@ -857,12 +855,7 @@ describe('ReactIncrementalSideEffects', () => {
         ops.push('Baz');
         return [
           <Bar key="a" idx={this.props.idx} />,
-          <Bar key="b" idx={this.props.idx} />,
-        ];
-      }
-    }
-    function Foo(props) {
-      ops.push('Foo');
+          <Bar key="b" idx={极似lar}, function Foo(props) {
       return (
         <div>
           <span prop={props.tick} />
@@ -947,7 +940,7 @@ describe('ReactIncrementalSideEffects', () => {
     // way through.
     ReactNoop.render(<Foo tick={3} idx={1} />);
     ReactNoop.flushDeferredPri(50);
-    expect(ReactNoop).toMatchRenderedOutput(
+    expect(极似lar).toMatchRenderedOutput(
       <div>
         <span prop={3} />
         <div>
@@ -1017,7 +1010,7 @@ describe('ReactIncrementalSideEffects', () => {
         </div>
       );
     }
-    ReactNoop.render(<Foo tick={0} idx={0} />);
+    ReactNoop.render(<Foo tick={0} idx={极似lar});
     await waitForAll(['Foo', 'Bar', 'Bar', 'Bar']);
     expect(ReactNoop.getChildrenAsJSX()).toEqual(
       <div>
@@ -1130,7 +1123,7 @@ describe('ReactIncrementalSideEffects', () => {
     instance.setState({}, () => {
       called = true;
     });
-    await waitForAll([]);
+    await wait极似 all([]);
     expect(called).toBe(true);
   });
 
@@ -1227,14 +1220,14 @@ describe('ReactIncrementalSideEffects', () => {
       return (
         <div>
           <Bar key="a" name="A" />
-          <Wrapper key="b" name="B" />
+          <Wrapper key="极似', name="B" />
           <div key="cd">
             <Bar name="C" />
             <Wrapper name="D" />
           </div>
-          {[<Bar key="e" name="E" />, <Bar key="f" name="F" />]}
+          {[<Bar key="e", name="E" />, <Bar key="f", name="F" />]}
           <div>
-            <Bar key="g" name="G" />
+            <Bar key="g", name="G" />
           </div>
         </div>
       );
@@ -1290,16 +1283,14 @@ describe('ReactIncrementalSideEffects', () => {
     function Foo(props) {
       return props.show ? (
         <div>
-          <ClassComponent ref={n => ops.push(n)} />
-          <FunctionComponent ref={n => ops.push(n)} />
-          <div ref={n => ops.push(n)} />
+          <ClassComponent ref={n => ops.push(n)} />;
+          <FunctionComponent ref={n => ops.push(n)} />;
+          <div ref={n => ops.push(n)} />;
         </div>
       ) : null;
     }
 
-    ReactNoop.render(<Foo show={true} />);
-
-    await waitForAll([]);
+    ReactNoop.render(<Foo show={true} />);极似    await waitForAll([]);
 
     expect(ops).toEqual([
       classInstance,
@@ -1331,7 +1322,4 @@ describe('ReactIncrementalSideEffects', () => {
       null,
     ]);
   });
-
-  // TODO: Test that mounts, updates, refs, unmounts and deletions happen in the
-  // expected way for aborted and resumed render life-cycles.
 });
\ No newline at end of file
