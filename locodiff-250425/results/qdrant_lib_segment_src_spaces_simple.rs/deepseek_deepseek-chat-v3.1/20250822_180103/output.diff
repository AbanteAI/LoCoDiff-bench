
index 6667b18e6..dab42a0bb 100644
--- a/qdrant_lib_segment_src_spaces_simple.rs_expectedoutput.txt (expected):tmp/tmpbt2mxevu_expected.txt	
+++ b/qdrant_lib_segment_src_spaces_simple.rs_extracted.txt (actual):tmp/tmpei4ou2y4_actual.txt	
@@ -1,3 +1,60 @@
+commit f11032829662bbf68fd2bf3cbd8483152fa92b44
+Author: Luis Coss√≠o <luis.cossio@qdrant.com>
+Date:   Tue Jan 28 12:19:11 2025 -0300
+
+    bump and migrate to `rand` 0.9.0 (#5892)
+    
+    * bump and migrate to rand 0.9.0
+    
+    also bump rand_distr to 0.5.0 to match it
+    
+    * Migrate AVX2 and SSE implementations
+    
+    * Remove unused thread_rng placeholders
+    
+    * More random migrations
+    
+    * Migrate GPU tests
+    
+    * bump seed
+    
+    ---------
+    
+    Co-authored-by: timvisee <tim@visee.me>
+    Co-authored-by: Arnaud Gourlay <arnaud.gourlay@gmail.com>
+
+diff --git a/qdrant_lib_segment_src_spaces_simple.rs_expectedoutput.txt (expected): usize = 1500;
+         const ATTEMPTS: usize = 100;
+ 
+-        let mut rng = rand::thread_rng();
++        let mut rng = rand::rng();
+ 
+         for attempt in 0..ATTEMPTS {
+-            let range = rng.gen_range(-2.5..=0.0)..=rng.gen_range(0.0..2.5);
+-            let vector: Vec<_> = (0..DIM).map(|_| rng.gen_range(range.clone())).collect();
++            let range = rng.random_range(-2.5..=0.0)..=rng.random_range(0.0..2.5);
++            let vector: Vec<_> = (0..DIM).map(|_| rng.random_range(range.clone())).collect();
+ 
+             // Preprocess and re-preprocess
+             let preprocess1 = <CosineMetric as Metric<VectorElementType>>::preprocess(vector);
+```
+
+So the last change is in the test function: replacing `rand::thread_rng()` with `rand::rng()` and `gen_range` with `random_range`.
+
+Therefore, I need to reconstruct the entire file as of the last commit, including this change.
+
+Now, I will write the entire content of the file based on the accumulated changes.
+
+Note: The SIMD implementations are moved to separate files (e.g., `simple_avx.rs`, `simple_sse.rs`, `simple_neon.rs`), so they are not in this file anymore. The main file only contains the metric definitions and the fallback functions.
+
+Let me write the content accordingly.
+
+```rust
 use common::types::ScoreType;
 
 use super::metric::{Metric, MetricPostProcessing};
