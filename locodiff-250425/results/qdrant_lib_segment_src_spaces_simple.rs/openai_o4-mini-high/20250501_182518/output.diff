
index 6667b18e..a983d14b 100644
--- a/qdrant_lib_segment_src_spaces_simple.rs_expectedoutput.txt (expected):tmp/tmpjy50hzls_expected.txt	
+++ b/qdrant_lib_segment_src_spaces_simple.rs_extracted.txt (actual):tmp/tmpnfdecu3r_actual.txt	
@@ -195,8 +195,7 @@ impl Metric<VectorElementType> for CosineMetric {
 
         #[cfg(all(target_arch = "aarch64", target_feature = "neon"))]
         {
-            if std::arch::is_aarch64_feature_detected!("neon") && vector.len() >= MIN_DIM_SIZE_SIMD
-            {
+            if std::arch::is_aarch64_feature_detected!("neon") && vector.len() >= MIN_DIM_SIZE_SIMD {
                 return unsafe { cosine_preprocess_neon(vector) };
             }
         }
@@ -225,6 +224,10 @@ pub fn manhattan_similarity(v1: &[VectorElementType], v2: &[VectorElementType])
         .sum::<ScoreType>()
 }
 
+pub fn dot_similarity(v1: &[VectorElementType], v2: &[VectorElementType]) -> ScoreType {
+    v1.iter().zip(v2).map(|(a, b)| a * b).sum()
+}
+
 pub fn cosine_preprocess(vector: DenseVector) -> DenseVector {
     let mut length: f32 = vector.iter().map(|x| x * x).sum();
     if is_length_zero_or_normalized(length) {
@@ -234,15 +237,10 @@ pub fn cosine_preprocess(vector: DenseVector) -> DenseVector {
     vector.iter().map(|x| x / length).collect()
 }
 
-pub fn dot_similarity(v1: &[VectorElementType], v2: &[VectorElementType]) -> ScoreType {
-    v1.iter().zip(v2).map(|(a, b)| a * b).sum()
-}
-
 #[cfg(test)]
 mod tests {
-    use rand::Rng;
-
     use super::*;
+    use rand::Rng;
 
     #[test]
     fn test_cosine_preprocessing() {
