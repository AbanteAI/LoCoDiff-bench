
index 1790a2e6e..ec03baf3a 100644
--- a/ghostty_src_font_face_coretext.zig_expectedoutput.txt (expected):tmp/tmp0lhx0_7y_expected.txt	
+++ b/ghostty_src_font_face_coretext.zig_extracted.txt (actual):tmp/tmpqd896v_s_actual.txt	
@@ -354,15 +354,6 @@ pub const Face = struct {
         };
         defer color.space.release();
 
-        // This is just a safety check.
-        if (atlas.format.depth() != color.depth) {
-            log.warn("font atlas color depth doesn't equal font color depth atlas={} font={}", .{
-                atlas.format.depth(),
-                color.depth,
-            });
-            return error.InvalidAtlasFormat;
-        }
-
         // Our buffer for rendering. We could cache this but glyph rasterization
         // usually stabilizes pretty quickly and is very infrequent so I think
         // the allocation overhead is acceptable compared to the cost of
@@ -645,7 +636,7 @@ pub const Face = struct {
         else
             @as(f64, @floatFromInt(post.underlinePosition)) * px_per_unit;
 
-        const underline_thickness = if (has_broken_underline)
+        const underline_thickness: ?f64 = if (has_broken_underline)
             null
         else
             @as(f64, @floatFromInt(post.underlineThickness)) * px_per_unit;
