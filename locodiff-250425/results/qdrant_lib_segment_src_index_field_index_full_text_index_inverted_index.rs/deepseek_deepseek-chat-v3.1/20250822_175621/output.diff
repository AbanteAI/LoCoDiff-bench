
index a2b4b4303..1a7cf5fae 100644
--- a/qdrant_lib_segment_src_index_field_index_full_text_index_inverted_index.rs_expectedoutput.txt (expected):tmp/tmp_palff_m_expected.txt	
+++ b/qdrant_lib_segment_src_index_field_index_full_text_index_inverted_index.rs_extracted.txt (actual):tmp/tmpnftdapkg_actual.txt	
@@ -1,6 +1,5 @@
 use std::collections::{BTreeSet, HashMap};
 
-use common::counter::hardware_counter::HardwareCounterCell;
 use common::types::PointOffsetType;
 use serde::{Deserialize, Serialize};
 
@@ -48,7 +47,6 @@ impl ParsedQuery {
         if self.tokens.contains(&None) {
             return false;
         }
-
         // Check that all tokens are in document
         self.tokens
             .iter()
@@ -83,25 +81,21 @@ pub trait InvertedIndex {
         &mut self,
         idx: PointOffsetType,
         document: Document,
-        hw_counter: &HardwareCounterCell,
     ) -> OperationResult<()>;
 
     fn remove_document(&mut self, idx: PointOffsetType) -> bool;
 
-    fn filter<'a>(
-        &'a self,
+    fn filter(
+        &self,
         query: ParsedQuery,
-        hw_counter: &'a HardwareCounterCell,
-    ) -> Box<dyn Iterator<Item = PointOffsetType> + 'a>;
+    ) -> Box<dyn Iterator<Item = PointOffsetType> + '_>;
 
-    fn get_posting_len(&self, token_id: TokenId, hw_counter: &HardwareCounterCell)
-    -> Option<usize>;
+    fn get_posting_len(&self, token_id: TokenId) -> Option<usize>;
 
     fn estimate_cardinality(
         &self,
         query: &ParsedQuery,
         condition: &FieldCondition,
-        hw_counter: &HardwareCounterCell,
     ) -> CardinalityEstimation {
         let points_count = self.points_count();
 
@@ -110,7 +104,7 @@ pub trait InvertedIndex {
             .iter()
             .map(|&vocab_idx| match vocab_idx {
                 None => None,
-                Some(idx) => self.get_posting_len(idx, hw_counter),
+                Some(idx) => self.get_posting_len(idx),
             })
             .collect();
         if posting_lengths.is_none() || points_count == 0 {
@@ -185,7 +179,6 @@ pub trait InvertedIndex {
         &self,
         parsed_query: &ParsedQuery,
         point_id: PointOffsetType,
-        hw_counter: &HardwareCounterCell,
     ) -> bool;
 
     fn values_is_empty(&self, point_id: PointOffsetType) -> bool;
@@ -194,7 +187,7 @@ pub trait InvertedIndex {
 
     fn points_count(&self) -> usize;
 
-    fn get_token_id(&self, token: &str, hw_counter: &HardwareCounterCell) -> Option<TokenId>;
+    fn get_token_id(&self, token: &str) -> Option<TokenId>;
 }
 
 #[cfg(test)]
