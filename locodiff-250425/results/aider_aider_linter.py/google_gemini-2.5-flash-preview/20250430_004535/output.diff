
index add561d0..181e1f2c 100644
--- a/aider_aider_linter.py_expectedoutput.txt (expected):tmp/tmpuhcd8hw0_expected.txt	
+++ b/aider_aider_linter.py_extracted.txt (actual):tmp/tmpo7neql8v_actual.txt	
@@ -133,6 +133,7 @@ class Linter:
         if text or lines:
             return LintResult(text, lines)
 
+
     def flake8_lint(self, rel_fname):
         fatal = "E9,F821,F823,F831,F406,F407,F701,F702,F704,F706"
         flake8_cmd = [
@@ -144,18 +145,20 @@ class Linter:
             "--isolated",
             rel_fname,
         ]
+        flake8_cmd = " ".join(shlex.quote(arg) for arg in flake8_cmd)
 
-        text = f"## Running: {' '.join(flake8_cmd)}\n\n"
+        text = f"## Running: {flake8_cmd}\n\n"
 
         try:
             result = subprocess.run(
                 flake8_cmd,
+                cwd=self.root,
                 capture_output=True,
                 text=True,
                 check=False,
                 encoding=self.encoding,
                 errors="replace",
-                cwd=self.root,
+                shell=True # Enable shell to handle quoted command
             )
             errors = result.stdout + result.stderr
         except Exception as e:
@@ -256,7 +259,6 @@ def tree_context(fname, code, line_nums):
     return output
 
 
-# Traverse the tree to find errors
 def traverse_tree(node):
     errors = []
     if node.type == "ERROR" or node.is_missing:
