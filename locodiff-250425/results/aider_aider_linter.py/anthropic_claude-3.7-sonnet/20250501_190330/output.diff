
index add561d0..41ff556e 100644
--- a/aider_aider_linter.py_expectedoutput.txt (expected):tmp/tmp8g4rfdm1_expected.txt	
+++ b/aider_aider_linter.py_extracted.txt (actual):tmp/tmpkc5hzmuj_actual.txt	
@@ -1,10 +1,10 @@
 import os
 import re
+import shlex
 import subprocess
 import sys
 import traceback
 import warnings
-import shlex
 from dataclasses import dataclass
 from pathlib import Path
 
@@ -118,7 +118,14 @@ class Linter:
     def py_lint(self, fname, rel_fname, code):
         basic_res = basic_lint(rel_fname, code)
         compile_res = lint_python_compile(fname, code)
-        flake_res = self.flake8_lint(rel_fname)
+        fatal = "E9,F821,F823,F831,F406,F407,F701,F702,F704,F706"
+
+        flake8 = f"flake8 --select={fatal} --show-source --isolated"
+
+        try:
+            flake_res = self.run_cmd(flake8, rel_fname, code)
+        except FileNotFoundError:
+            flake_res = None
 
         text = ""
         lines = set()
@@ -133,40 +140,6 @@ class Linter:
         if text or lines:
             return LintResult(text, lines)
 
-    def flake8_lint(self, rel_fname):
-        fatal = "E9,F821,F823,F831,F406,F407,F701,F702,F704,F706"
-        flake8_cmd = [
-            sys.executable,
-            "-m",
-            "flake8",
-            f"--select={fatal}",
-            "--show-source",
-            "--isolated",
-            rel_fname,
-        ]
-
-        text = f"## Running: {' '.join(flake8_cmd)}\n\n"
-
-        try:
-            result = subprocess.run(
-                flake8_cmd,
-                capture_output=True,
-                text=True,
-                check=False,
-                encoding=self.encoding,
-                errors="replace",
-                cwd=self.root,
-            )
-            errors = result.stdout + result.stderr
-        except Exception as e:
-            errors = f"Error running flake8: {str(e)}"
-
-        if not errors:
-            return
-
-        text += errors
-        return self.errors_to_lint_result(rel_fname, text)
-
 
 @dataclass
 class LintResult:
