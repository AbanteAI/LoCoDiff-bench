--- ghostty_src_font_shaper_run.zig_expectedoutput.txt (expected)+++ ghostty_src_font_shaper_run.zig_extracted.txt (actual)@@ -12,11 +12,7 @@ /// rows in a terminal, so it is guaranteed to always be one line.
 pub const TextRun = struct {
     /// A unique hash for this run. This can be used to cache the shaping
-    /// results. We don't provide a means to compare actual values if the
-    /// hash is the same, so we should continue to improve this hash to
-    /// lower the chance of hash collisions if they become a problem. If
-    /// there are hash collisions, it would result in rendering issues but
-    /// the core data would be correct.
+    /// results.
     hash: u64,
 
     /// The offset in the row where this run started
@@ -125,13 +121,11 @@                             const cp = cell.codepoint();
                             if (cp == 'l' or cp == 'i') break;
                         },
-
                         // st
                         's' => {
                             const cp = cell.codepoint();
                             if (cp == 't') break;
                         },
-
                         else => {},
                     }
                 }
@@ -148,14 +142,14 @@ 
             // Text runs break when font styles change so we need to get
             // the proper style.
-            const font_style: font.Style = style: {
+            const font_style: font.Style = style_blk: {
                 if (style.flags.bold) {
-                    if (style.flags.italic) break :style .bold_italic;
-                    break :style .bold;
-                }
-
-                if (style.flags.italic) break :style .italic;
-                break :style .regular;
+                    if (style.flags.italic) break :style_blk .bold_italic;
+                    break :style_blk .bold;
+                }
+
+                if (style.flags.italic) break :style_blk .italic;
+                break :style_blk .regular;
             };
 
             // Determine the presentation format for this glyph.
@@ -168,8 +162,6 @@                 if (cps[0] == 0xFE0F) break :p .emoji;
                 break :p null;
             } else emoji: {
-                // If we're not a grapheme, our individual char could be
-                // an emoji so we want to check if we expect emoji presentation.
                 // The font grid indexForCodepoint we use below will do this
                 // automatically.
                 break :emoji null;
@@ -181,30 +173,17 @@             //
             // We do not break a cell that is exactly the grapheme. If there
             // are cells following that contain joiners, we allow those to
-            // break. This creates an effect where hovering over an emoji
-            // such as a skin-tone emoji is fine, but hovering over the
-            // joiners will show the joiners allowing you to modify the
-            // emoji.
+            // break.
             if (!cell.hasGrapheme()) {
                 if (self.cursor_x) |cursor_x| {
-                    // Exactly: self.i is the cursor and we iterated once. This
-                    // means that we started exactly at the cursor and did at
-                    // exactly one iteration. Why exactly one? Because we may
-                    // start at our cursor but do many if our cursor is exactly
-                    // on an emoji.
+                    // Exactly
                     if (self.i == cursor_x and j == self.i + 1) break;
 
-                    // Before: up to and not including the cursor. This means
-                    // that we started before the cursor (self.i < cursor_x)
-                    // and j is now at the cursor meaning we haven't yet processed
-                    // the cursor.
+                    // Before
                     if (self.i < cursor_x and j == cursor_x) {
                         assert(j > 0);
                         break;
                     }
-
-                    // After: after the cursor. We don't need to do anything
-                    // special, we just let the run complete.
                 }
             }
 
@@ -247,7 +226,6 @@                 unreachable;
             };
 
-            //log.warn("char={x} info={}", .{ cell.char, font_info });
             if (j == self.i) current_font = font_info.idx;
 
             // If our fonts are not equal, then we're done with our run.
@@ -303,7 +281,12 @@         };
     }
 
-    fn addCodepoint(self: *RunIterator, hasher: anytype, cp: u32, cluster: u32) !void {
+    fn addCodepoint(
+        self: *RunIterator,
+        hasher: anytype,
+        cp: u32,
+        cluster: u32,
+    ) !void {
         autoHash(hasher, cp);
         autoHash(hasher, cluster);
         try self.hooks.addCodepoint(cp, cluster);
@@ -398,9 +381,4 @@     var s = style;
 
     // We allow background colors to differ because we'll just paint the
-    // cell background whatever the style is, and wherever the glyph
-    // lands on top of it will be the color of the glyph.
-    s.bg_color = .none;
-
-    return s;
-}+    // cell