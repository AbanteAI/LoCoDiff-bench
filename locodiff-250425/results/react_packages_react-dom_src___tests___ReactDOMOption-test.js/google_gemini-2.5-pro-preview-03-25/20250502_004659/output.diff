--- react_packages_react-dom_src___tests___ReactDOMOption-test.js_expectedoutput.txt (expected)+++ react_packages_react-dom_src___tests___ReactDOMOption-test.js_extracted.txt (actual)@@ -8,6 +8,9 @@  */
 
 'use strict';
+
+// Assign console to variable here because we override it during tests
+const oldConsole = console;
 
 describe('ReactDOMOption', () => {
   let React;
@@ -143,7 +146,7 @@     // This is similar to <fbt>.
     // We don't toString it because you must instead provide a value prop.
     const obj = {
-      $$typeof: Symbol.for('react.element'),
+      $$typeof: Symbol.for('react.transitional.element'),
       type: props => props.content,
       ref: null,
       key: null,
@@ -240,6 +243,8 @@   });
 
   it('generates a hydration error when an invalid nested tag is used as a child', async () => {
+    // Temporarily override console.error to avoid noisy output
+    console.error = () => {};
     const ref = React.createRef();
     const children = (
       <select readOnly={true} value="bar">
@@ -285,5 +290,7 @@ 
     expect(ref.current.nodeName).toBe('DIV');
     expect(ref.current.parentNode).toBe(option);
+    // Restore console
+    console.error = oldConsole.error;
   });
 });