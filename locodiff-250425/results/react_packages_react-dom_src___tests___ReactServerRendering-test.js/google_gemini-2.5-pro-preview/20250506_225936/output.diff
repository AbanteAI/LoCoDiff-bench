
index 0921f10c..16628a33 100644
--- a/react_packages_react-dom_src___tests___ReactServerRendering-test.js_expectedoutput.txt (expected):tmp/tmp_yto5_jd_expected.txt	
+++ b/react_packages_react-dom_src___tests___ReactServerRendering-test.js_extracted.txt (actual):tmp/tmpf9otsc34_actual.txt	
@@ -653,6 +653,39 @@ describe('ReactDOMServer', () => {
     expect(markup).toBe('<div></div>');
   });
 
+  it('throws for unsupported types on the server', () => {
+    expect(() => {
+      ReactDOMServer.renderToString(<React.Suspense />);
+    }).toThrow('ReactDOMServer does not yet support Suspense.');
+
+    async function fakeImport(result) {
+      return {default: result};
+    }
+
+    expect(() => {
+      const LazyFoo = React.lazy(() =>
+        fakeImport(
+          new Promise(resolve =>
+            resolve(function Foo() {
+              return <div />;
+            }),
+          ),
+        ),
+      );
+      ReactDOMServer.renderToString(<LazyFoo />);
+    }).toThrow('ReactDOMServer does not yet support Suspense.');
+  });
+
+  it('throws when suspending on the server', () => {
+    function AsyncFoo() {
+      throw new Promise(() => {});
+    }
+
+    expect(() => {
+      ReactDOMServer.renderToString(<AsyncFoo />);
+    }).toThrow('ReactDOMServer does not yet support Suspense.');
+  });
+
   it('does not get confused by throwing null', () => {
     function Bad() {
       // eslint-disable-next-line no-throw-literal
