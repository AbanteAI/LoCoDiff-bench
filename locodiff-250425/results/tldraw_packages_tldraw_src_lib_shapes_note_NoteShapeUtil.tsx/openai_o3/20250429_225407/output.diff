--- tldraw_packages_tldraw_src_lib_shapes_note_NoteShapeUtil.tsx_expectedoutput.txt (expected)+++ tldraw_packages_tldraw_src_lib_shapes_note_NoteShapeUtil.tsx_extracted.txt (actual)@@ -209,21 +209,6 @@ 		]
 	}
 
-	override onResize(shape: any, info: TLResizeInfo<any>) {
-		const { resizeMode } = this.options
-		switch (resizeMode) {
-			case 'none': {
-				return undefined
-			}
-			case 'scale': {
-				return resizeScaled(shape, info)
-			}
-			default: {
-				throw exhaustiveSwitchError(resizeMode)
-			}
-		}
-	}
-
 	override getText(shape: TLNoteShape) {
 		return renderPlaintextFromRichText(this.editor, shape.props.richText)
 	}
@@ -262,10 +247,8 @@ 		const rotation = useValue(
 			'shape rotation',
 			() => this.editor.getShapePageTransform(id)?.rotation() ?? 0,
-			[this.editor]
+			[id, this.editor]
 		)
-
-		// todo: consider hiding shadows on dark mode if they're invisible anyway
 
 		const hideShadows = useValue('zoom', () => this.editor.getZoomLevel() < 0.35 / scale, [
 			scale,
@@ -282,7 +265,7 @@ 		return (
 			<>
 				<div
-					id={id}
+					data-shape-id={id}
 					className="tl-note__container"
 					style={{
 						width: nw,
@@ -378,6 +361,21 @@ 		return getNoteSizeAdjustments(this.editor, next)
 	}
 
+	override onResize(shape: any, info: TLResizeInfo<any>) {
+		const { resizeMode } = this.options
+		switch (resizeMode) {
+			case 'none': {
+				return undefined
+			}
+			case 'scale': {
+				return resizeScaled(shape, info)
+			}
+			default: {
+				throw exhaustiveSwitchError(resizeMode)
+			}
+		}
+	}
+
 	override getInterpolatedProps(
 		startShape: TLNoteShape,
 		endShape: TLNoteShape,
@@ -452,7 +450,6 @@ 		if (fontSizeAdjustment <= 14) {
 			// Too small, just rely now on CSS `overflow-wrap: break-word`
 			// We need to recalculate the text measurement here with break-word enabled.
-			const html = renderHtmlFromRichTextForMeasurement(editor, richText)
 			const nextTextSizeWithOverflowBreak = editor.textMeasure.measureHtml(html, {
 				...TEXT_PROPS,
 				fontFamily: FONT_FAMILIES[shape.props.font],
