
index 37af12e0..fd55f1b5 100644
--- a/tldraw_packages_tldraw_src_lib_shapes_note_NoteShapeUtil.tsx_expectedoutput.txt (expected):tmp/tmp_1uz0l7x_expected.txt	
+++ b/tldraw_packages_tldraw_src_lib_shapes_note_NoteShapeUtil.tsx_extracted.txt (actual):tmp/tmp0wc4ixaf_actual.txt	
@@ -265,8 +265,6 @@ export class NoteShapeUtil extends ShapeUtil<TLNoteShape> {
 			[this.editor]
 		)
 
-		// todo: consider hiding shadows on dark mode if they're invisible anyway
-
 		const hideShadows = useValue('zoom', () => this.editor.getZoomLevel() < 0.35 / scale, [
 			scale,
 			this.editor,
@@ -282,7 +280,7 @@ export class NoteShapeUtil extends ShapeUtil<TLNoteShape> {
 		return (
 			<>
 				<div
-					id={id}
+					data-shape-id={id}
 					className="tl-note__container"
 					style={{
 						width: nw,
@@ -332,6 +330,7 @@ export class NoteShapeUtil extends ShapeUtil<TLNoteShape> {
 	}
 
 	override toSvg(shape: TLNoteShape, ctx: SvgExportContext) {
+		if (shape.props.richText) ctx.addExportDefs(this.getFontFaces(shape))
 		const theme = getDefaultColorTheme({ isDarkMode: ctx.isDarkMode })
 		const bounds = getBoundsForSVG(shape)
 
@@ -377,7 +376,6 @@ export class NoteShapeUtil extends ShapeUtil<TLNoteShape> {
 
 		return getNoteSizeAdjustments(this.editor, next)
 	}
-
 	override getInterpolatedProps(
 		startShape: TLNoteShape,
 		endShape: TLNoteShape,
@@ -396,7 +394,7 @@ export class NoteShapeUtil extends ShapeUtil<TLNoteShape> {
 function getNoteSizeAdjustments(editor: Editor, shape: TLNoteShape) {
 	const { labelHeight, fontSizeAdjustment } = getLabelSize(editor, shape)
 	// When the label height is more than the height of the shape, we add extra height to it
-	const growY = Math.max(0, labelHeight - NOTE_SIZE)
+	const growY = Math.max(0, labelHeight / shape.props.scale - NOTE_SIZE)
 
 	if (growY !== shape.props.growY || fontSizeAdjustment !== shape.props.fontSizeAdjustment) {
 		return {
@@ -410,6 +408,8 @@ function getNoteSizeAdjustments(editor: Editor, shape: TLNoteShape) {
 	}
 }
 
+const labelSizesForNote = new WeakCache<TLShape, ReturnType<typeof getNoteLabelSize>>()
+
 /**
  * Get the label size for a note.
  */
@@ -476,8 +476,6 @@ function getNoteLabelSize(editor: Editor, shape: TLNoteShape) {
 	}
 }
 
-const labelSizesForNote = new WeakCache<TLShape, ReturnType<typeof getNoteLabelSize>>()
-
 function getLabelSize(editor: Editor, shape: TLNoteShape) {
 	return labelSizesForNote.get(shape, () => getNoteLabelSize(editor, shape))
 }
