--- tldraw_packages_tldraw_src_lib_shapes_note_NoteShapeUtil.tsx_expectedoutput.txt (expected)+++ tldraw_packages_tldraw_src_lib_shapes_note_NoteShapeUtil.tsx_extracted.txt (actual)@@ -19,6 +19,7 @@ 	exhaustiveSwitchError,
 	getDefaultColorTheme,
 	getFontsFromRichText,
+	isEmptyRichText,
 	lerp,
 	noteShapeMigrations,
 	noteShapeProps,
@@ -40,12 +41,12 @@ 	LABEL_PADDING,
 	TEXT_PROPS,
 } from '../shared/default-shape-constants'
+import { getFontDefForExport } from '../shared/defaultStyleDefs'
 
 import { startEditingShapeWithLabel } from '../../tools/SelectTool/selectHelpers'
 
 import isEqual from 'lodash.isequal'
 import {
-	isEmptyRichText,
 	renderHtmlFromRichTextForMeasurement,
 	renderPlaintextFromRichText,
 } from '../../utils/text/richText'
@@ -120,6 +121,7 @@ 	}
 
 	getGeometry(shape: TLNoteShape) {
+		const noteHeight = getNoteHeight(shape)
 		const { labelHeight, labelWidth } = getLabelSize(this.editor, shape)
 		const { scale } = shape.props
 
@@ -253,9 +255,10 @@ 			},
 		} = shape
 
-		const handleKeyDown = useNoteKeydownHandler(id)
-
-		const theme = useDefaultColorTheme()
+		const handleKeyDown = useNoteKeydownHandler(id) // Added in diff 11/23 (re-added in 23 based on diff)
+
+		const theme = useDefaultColorTheme() // Adjusted import path in diff 19 & 20
+
 		const nw = NOTE_SIZE * scale
 		const nh = getNoteHeight(shape)
 
@@ -265,8 +268,6 @@ 			[this.editor]
 		)
 
-		// todo: consider hiding shadows on dark mode if they're invisible anyway
-
 		const hideShadows = useValue('zoom', () => this.editor.getZoomLevel() < 0.35 / scale, [
 			scale,
 			this.editor,
@@ -282,7 +283,6 @@ 		return (
 			<>
 				<div
-					id={id}
 					className="tl-note__container"
 					style={{
 						width: nw,
@@ -332,6 +332,8 @@ 	}
 
 	override toSvg(shape: TLNoteShape, ctx: SvgExportContext) {
+		if (shape.props.richText && !isEmptyRichText(shape.props.richText))
+			ctx.addExportDef(getFontDefForExport(shape.props.font))
 		const theme = getDefaultColorTheme({ isDarkMode: ctx.isDarkMode })
 		const bounds = getBoundsForSVG(shape)
 
@@ -549,7 +551,7 @@ 	const c = 6 * scale
 	const d = 7 * scale
 	return `0px ${a - lift}px ${a}px -${a}px rgba(15, 23, 31, .6),
-	0px ${(b + lift * d) * Math.max(0, oy)}px ${c + lift * d}px -${b + lift * c}px rgba(15, 23, 31, ${(0.3 + lift * 0.1).toFixed(2)}), 
+	0px ${(b + lift * d) * Math.max(0, oy)}px ${c + lift * d}px -${b + lift * c}px rgba(15, 23, 31, ${(0.3 + lift * 0.1).toFixed(2)}),
 	0px ${48 * scale}px ${10 * scale}px -${10 * scale}px inset rgba(15, 23, 44, ${((0.022 + random() * 0.005) * ((1 + oy) / 2)).toFixed(2)})`
 }
 
