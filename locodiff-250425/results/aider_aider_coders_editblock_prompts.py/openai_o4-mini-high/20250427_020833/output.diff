--- aider_aider_coders_editblock_prompts.py_expectedoutput.txt (expected)+++ aider_aider_coders_editblock_prompts.py_extracted.txt (actual)@@ -14,20 +14,13 @@ Always reply to the user in {language}.
 
 Once you understand the request you MUST:
+1. Decide if you need to propose *SEARCH/REPLACE* edits to any files that haven't been added to the chat. You can create new files without asking. But if you need to propose edits to existing files not already added to the chat, you *MUST* tell the user their full path names and ask them to *add the files to the chat*. End your reply and wait for their approval. You can keep asking if you then decide you need to edit more files.
+2. Think step-by-step and explain the needed changes with a numbered list of short sentences.
+3. Describe each change with a *SEARCH/REPLACE block* per the examples below. All changes to files must use this *SEARCH/REPLACE block* format. ONLY EVER RETURN CODE IN A *SEARCH/REPLACE BLOCK*!
 
-1. Decide if you need to propose *SEARCH/REPLACE* edits to any files that haven't been added to the chat. You can create new files without asking!
-
-But if you need to propose edits to existing files not already added to the chat, you *MUST* tell the user their full path names and ask them to *add the files to the chat*.
-End your reply and wait for their approval.
-You can keep asking if you then decide you need to edit more files.
-
-2. Think step-by-step and explain the needed changes in a few short sentences.
-
-3. Describe each change with a *SEARCH/REPLACE block* per the examples below.
-
-All changes to files must use this *SEARCH/REPLACE block* format.
-ONLY EVER RETURN CODE IN A *SEARCH/REPLACE BLOCK*!
-{shell_cmd_prompt}
+All changes to files must use the *SEARCH/REPLACE block* format.
+Keep this info about the user's system in mind:
+{platform}
 """
 
     shell_cmd_prompt = """
@@ -41,20 +34,13 @@ 
 Use the appropriate shell based on the user's system info:
 {platform}
-Examples of when to suggest shell commands:
-
-- If you changed a self-contained html file, suggest an OS-appropriate command to open a browser to view it to see the updated content.
-- If you changed a CLI program, suggest the command to run it to see the new behavior.
-- If you added a test, suggest how to run it with the testing tool used by the project.
-- Suggest OS-appropriate commands to delete or rename files/directories, or other file system operations.
-- If your code changes add new dependencies, suggest the command to install them.
-- Etc.
 """
 
     no_shell_cmd_prompt = """
 Keep in mind these details about the user's platform and environment:
 {platform}
 """
+
     example_messages = [
         dict(
             role="user",
@@ -157,7 +143,7 @@ 8. The closing fence: {fence[1]}
 
 Use the *FULL* file path, as shown to you by the user.
-{quad_backtick_reminder}
+
 Every *SEARCH* section must *EXACTLY MATCH* the existing file content, character for character, including all comments, docstrings, etc.
 If the file contains code or other data wrapped/escaped in json/xml/quotes or other containers, you need to propose edits to the literal contents of the file, including the container markup.
 
@@ -173,8 +159,6 @@ Only create *SEARCH/REPLACE* blocks for files that the user has added to the chat!
 
 To move code within a file, use 2 *SEARCH/REPLACE* blocks: 1 to delete it from its current location, 1 to insert it in the new location.
-
-Pay attention to which filenames the user wants you to edit, especially if they are asking you to create a new file.
 
 If you want to put code in a new file, use a *SEARCH/REPLACE block* with:
 - A new file path, including dir name if needed
@@ -203,5 +187,4 @@ - Suggest OS-appropriate commands to delete or rename files/directories, or other file system operations.
 - If your code changes add new dependencies, suggest the command to install them.
 - Etc.
-
 """