
index 6fc93c25..3ce9c4e3 100644
--- a/ghostty_src_font_DeferredFace.zig_expectedoutput.txt (expected):tmp/tmpc_x17nmn_expected.txt	
+++ b/ghostty_src_font_DeferredFace.zig_extracted.txt (actual):tmp/tmpv47tbxb6_actual.txt	
@@ -85,16 +85,16 @@ pub const WebCanvas = struct {
     }
 };
 
+pub fn init(face: Face) DeferredFace {
+    return .{ .face = face };
+}
+
 pub fn deinit(self: *DeferredFace) void {
     switch (options.backend) {
         .fontconfig_freetype => if (self.fc) |*fc| fc.deinit(),
+        .coretext, .coretext_freetype, .coretext_harfbuzz, .coretext_noshape => if (self.ct) |*ct| ct.deinit(),
         .freetype => {},
         .web_canvas => if (self.wc) |*wc| wc.deinit(),
-        .coretext,
-        .coretext_freetype,
-        .coretext_harfbuzz,
-        .coretext_noshape,
-        => if (self.ct) |*ct| ct.deinit(),
     }
     self.* = undefined;
 }
@@ -107,11 +107,7 @@ pub fn familyName(self: DeferredFace, buf: []u8) ![]const u8 {
         .fontconfig_freetype => if (self.fc) |fc|
             return (try fc.pattern.get(.family, 0)).string,
 
-        .coretext,
-        .coretext_freetype,
-        .coretext_harfbuzz,
-        .coretext_noshape,
-        => if (self.ct) |ct| {
+        .coretext, .coretext_freetype, .coretext_harfbuzz, .coretext_noshape => if (self.ct) |ct| {
             const family_name = ct.font.copyAttribute(.family_name) orelse
                 return "unknown";
             return family_name.cstringPtr(.utf8) orelse unsupported: {
@@ -135,11 +131,7 @@ pub fn name(self: DeferredFace, buf: []u8) ![]const u8 {
         .fontconfig_freetype => if (self.fc) |fc|
             return (try fc.pattern.get(.fullname, 0)).string,
 
-        .coretext,
-        .coretext_freetype,
-        .coretext_harfbuzz,
-        .coretext_noshape,
-        => if (self.ct) |ct| {
+        .coretext, .coretext_freetype, .coretext_harfbuzz, .coretext_noshape => if (self.ct) |ct| {
             const display_name = ct.font.copyDisplayName();
             return display_name.cstringPtr(.utf8) orelse unsupported: {
                 // "NULL if the internal storage of theString does not allow
@@ -288,11 +280,7 @@ pub fn hasCodepoint(self: DeferredFace, cp: u32, p: ?Presentation) bool {
             }
         },
 
-        .coretext,
-        .coretext_freetype,
-        .coretext_harfbuzz,
-        .coretext_noshape,
-        => {
+        .coretext, .coretext_freetype, .coretext_harfbuzz, .coretext_noshape => {
             // If we are using coretext, we check the loaded CT font.
             if (self.ct) |ct| {
                 // This presentation check isn't as detailed as isColorGlyph
