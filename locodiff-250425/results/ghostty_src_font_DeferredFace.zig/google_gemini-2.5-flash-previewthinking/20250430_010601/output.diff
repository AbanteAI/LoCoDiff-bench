--- ghostty_src_font_DeferredFace.zig_expectedoutput.txt (expected)+++ ghostty_src_font_DeferredFace.zig_extracted.txt (actual)@@ -146,8 +146,15 @@                 // this to be returned efficiently." In this case, we need
                 // to allocate. But we can't return an allocated string because
                 // we don't have an allocator. Let's use the stack and log it.
-                break :unsupported display_name.cstring(buf, .utf8) orelse
-                    return error.OutOfMemory;
+                var buf: [1024]u8 = undefined;
+                const buf_name = display_name.cstring(&buf, .utf8) orelse
+                    "<not enough internal storage space>";
+
+                log.info(
+                    "CoreText font required too much space to copy, value = {s}",
+                    .{buf_name},
+                );
+                break :unsupported "<CoreText internal storage limited, see logs>";
             };
         },
 
@@ -318,8 +325,6 @@             }
         },
 
-        // Canvas always has the codepoint because we have no way of
-        // really checking and we let the browser handle it.
         .web_canvas => if (self.wc) |wc| {
             // Fast-path if we have a specific presentation and we
             // don't match, then it is definitely not this face.
@@ -335,9 +340,9 @@             ) catch |err| {
                 log.warn("failed to init face for codepoint check " ++
                     "face={s} err={}", .{
-                    wc.font_str,
-                    err,
-                });
+                        wc.font_str,
+                        err,
+                    });
 
                 return false;
             };
@@ -392,7 +397,7 @@     }
 
     export fn deferred_face_load(self: *DeferredFace, pts: f32) void {
-        self.load(.{}, .{ .points = pts }) catch |err| {
+        self.load(.{}, .{ .size = .{ .points = pts } }) catch |err| {
             log.warn("error loading deferred face err={}", .{err});
             return;
         };
@@ -430,7 +435,7 @@ }
 
 test "coretext" {
-    if (options.backend != .coretext) return error.SkipZigTest;
+    if (options.backend != .coretext and options.backend != .coretext_harfbuzz and options.backend != .coretext_noshape) return error.SkipZigTest;
 
     const discovery = @import("main.zig").discovery;
     const testing = std.testing;
