
index 6fc93c25..e1862a76 100644
--- a/ghostty_src_font_DeferredFace.zig_expectedoutput.txt (expected):tmp/tmpebx3_6o__expected.txt	
+++ b/ghostty_src_font_DeferredFace.zig_extracted.txt (actual):tmp/tmp25_r_xas_actual.txt	
@@ -19,7 +19,7 @@ const Presentation = @import("main.zig").Presentation;
 
 const log = std.log.scoped(.deferred_face);
 
-/// Fontconfig
+/// Fontconfig 
 fc: if (options.backend == .fontconfig_freetype) ?Fontconfig else void =
     if (options.backend == .fontconfig_freetype) null else {},
 
@@ -115,7 +115,7 @@ pub fn familyName(self: DeferredFace, buf: []u8) ![]const u8 {
             const family_name = ct.font.copyAttribute(.family_name) orelse
                 return "unknown";
             return family_name.cstringPtr(.utf8) orelse unsupported: {
-                break :unsupported family_name.cstring(buf, .utf8) orelse
+                break :unsupported family_name.cstring(buf, .utf8) orelse 
                     return error.OutOfMemory;
             };
         },
@@ -142,10 +142,6 @@ pub fn name(self: DeferredFace, buf: []u8) ![]const u8 {
         => if (self.ct) |ct| {
             const display_name = ct.font.copyDisplayName();
             return display_name.cstringPtr(.utf8) orelse unsupported: {
-                // "NULL if the internal storage of theString does not allow
-                // this to be returned efficiently." In this case, we need
-                // to allocate. But we can't return an allocated string because
-                // we don't have an allocator. Let's use the stack and log it.
                 break :unsupported display_name.cstring(buf, .utf8) orelse
                     return error.OutOfMemory;
             };
@@ -245,7 +241,6 @@ fn loadCoreTextFreetype(
     var face = try Face.initFile(lib, buf[0..path_slice.len :0], 0, opts);
     errdefer face.deinit();
     try face.setVariations(ct.variations, opts);
-
     return face;
 }
 
@@ -321,28 +316,8 @@ pub fn hasCodepoint(self: DeferredFace, cp: u32, p: ?Presentation) bool {
         // Canvas always has the codepoint because we have no way of
         // really checking and we let the browser handle it.
         .web_canvas => if (self.wc) |wc| {
-            // Fast-path if we have a specific presentation and we
-            // don't match, then it is definitely not this face.
             if (p) |desired| if (wc.presentation != desired) return false;
-
-            // Slow-path: we initialize the font, render it, and check
-            // if it works and the presentation matches.
-            var face = Face.initNamed(
-                wc.alloc,
-                wc.font_str,
-                .{ .points = 12 },
-                wc.presentation,
-            ) catch |err| {
-                log.warn("failed to init face for codepoint check " ++
-                    "face={s} err={}", .{
-                    wc.font_str,
-                    err,
-                });
-
-                return false;
-            };
-            defer face.deinit();
-            return face.glyphIndex(cp) != null;
+            return true;
         },
 
         .freetype => {},
