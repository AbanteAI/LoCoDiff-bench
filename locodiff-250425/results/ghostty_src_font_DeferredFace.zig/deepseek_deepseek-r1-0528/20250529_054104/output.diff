
index 6fc93c257..525ff1e25 100644
--- a/ghostty_src_font_DeferredFace.zig_expectedoutput.txt (expected):tmp/tmpd21qhw0s_expected.txt	
+++ b/ghostty_src_font_DeferredFace.zig_extracted.txt (actual):tmp/tmpwzh3y5pr_actual.txt	
@@ -8,7 +8,6 @@ const DeferredFace = @This();
 
 const std = @import("std");
 const assert = std.debug.assert;
-const Allocator = std.mem.Allocator;
 const fontconfig = @import("fontconfig");
 const macos = @import("macos");
 const font = @import("main.zig");
@@ -88,13 +87,9 @@ pub const WebCanvas = struct {
 pub fn deinit(self: *DeferredFace) void {
     switch (options.backend) {
         .fontconfig_freetype => if (self.fc) |*fc| fc.deinit(),
+        .coretext, .coretext_freetype, .coretext_harfbuzz, .coretext_noshape => if (self.ct) |*ct| ct.deinit(),
         .freetype => {},
         .web_canvas => if (self.wc) |*wc| wc.deinit(),
-        .coretext,
-        .coretext_freetype,
-        .coretext_harfbuzz,
-        .coretext_noshape,
-        => if (self.ct) |*ct| ct.deinit(),
     }
     self.* = undefined;
 }
@@ -330,7 +325,7 @@ pub fn hasCodepoint(self: DeferredFace, cp: u32, p: ?Presentation) bool {
             var face = Face.initNamed(
                 wc.alloc,
                 wc.font_str,
-                .{ .points = 12 },
+                .{ .size = .{ .points = 12 } },
                 wc.presentation,
             ) catch |err| {
                 log.warn("failed to init face for codepoint check " ++
