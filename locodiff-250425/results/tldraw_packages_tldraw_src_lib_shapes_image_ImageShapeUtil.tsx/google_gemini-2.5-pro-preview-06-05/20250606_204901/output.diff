
index 2e4a3e7b2..783cabea0 100644
--- a/tldraw_packages_tldraw_src_lib_shapes_image_ImageShapeUtil.tsx_expectedoutput.txt (expected):tmp/tmpfpqn9lbl_expected.txt	
+++ b/tldraw_packages_tldraw_src_lib_shapes_image_ImageShapeUtil.tsx_extracted.txt (actual):tmp/tmpk7aujjd3_actual.txt	
@@ -396,22 +396,6 @@ function getCroppedContainerStyle(shape: TLImageShape) {
 	}
 }
 
-function getFlipStyle(shape: TLImageShape, size?: { width: number; height: number }) {
-	const { flipX, flipY } = shape.props
-	if (!flipX && !flipY) return undefined
-
-	const scale = `scale(${flipX ? -1 : 1}, ${flipY ? -1 : 1})`
-	const translate = size
-		? `translate(${flipX ? size.width : 0}px, ${flipY ? size.height : 0}px)`
-		: ''
-
-	return {
-		transform: `${translate} ${scale}`,
-		// in SVG, flipping around the center doesn't work so we use explicit width/height
-		transformOrigin: size ? '0 0' : 'center center',
-	}
-}
-
 function SvgImage({ shape, src }: { shape: TLImageShape; src: string }) {
 	const cropClipId = useUniqueSafeId()
 	const containerStyle = getCroppedContainerStyle(shape)
@@ -487,4 +471,20 @@ function getFirstFrameOfAnimatedImage(url: string) {
 	})
 
 	return { promise, cancel: () => (cancelled = true) }
+}
+
+function getFlipStyle(shape: TLImageShape, size?: { width: number; height: number }) {
+	const { flipX, flipY } = shape.props
+	if (!flipX && !flipY) return undefined
+
+	const scale = `scale(${flipX ? -1 : 1}, ${flipY ? -1 : 1})`
+	const translate = size
+		? `translate(${flipX ? size.width : 0}px, ${flipY ? size.height : 0}px)`
+		: ''
+
+	return {
+		transform: `${translate} ${scale}`,
+		// in SVG, flipping around the center doesn't work so we use explicit width/height
+		transformOrigin: size ? '0 0' : 'center center',
+	}
 }
\ No newline at end of file
