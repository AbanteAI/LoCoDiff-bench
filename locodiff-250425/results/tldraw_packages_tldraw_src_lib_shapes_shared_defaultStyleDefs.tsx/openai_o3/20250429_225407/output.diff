--- tldraw_packages_tldraw_src_lib_shapes_shared_defaultStyleDefs.tsx_expectedoutput.txt (expected)+++ tldraw_packages_tldraw_src_lib_shapes_shared_defaultStyleDefs.tsx_extracted.txt (actual)@@ -50,7 +50,14 @@ 				height="8"
 				patternUnits="userSpaceOnUse"
 			>
-				<rect x="0" y="0" width="8" height="8" fill={theme.solid} mask={`url(#${maskId})`} />
+				<rect
+					x="0"
+					y="0"
+					width="8"
+					height="8"
+					fill={theme.solid}
+					mask={`url(#${maskId})`}
+				/>
 			</pattern>
 		</>
 	)
@@ -62,6 +69,7 @@ 		component: PatternFillDefForCanvas,
 	}
 }
+
 const TILE_PATTERN_SIZE = 8
 
 const generateImage = (dpr: number, currentZoom: number, darkMode: boolean) => {
@@ -119,6 +127,7 @@ 	fn(ctx)
 	return canvas.toDataURL()
 }
+
 interface PatternDef {
 	zoom: number
 	url: string
@@ -180,9 +189,11 @@ 	const dpr = useValue('devicePixelRatio', () => editor.getInstanceState().devicePixelRatio, [
 		editor,
 	])
-	const maxZoom = useValue('maxZoom', () => Math.ceil(last(editor.getCameraOptions().zoomSteps)!), [
-		editor,
-	])
+	const maxZoom = useValue(
+		'maxZoom',
+		() => Math.ceil(last(editor.getCameraOptions().zoomSteps)!),
+		[editor]
+	)
 	const [isReady, setIsReady] = useState(false)
 	const [backgroundUrls, setBackgroundUrls] = useState<PatternDef[]>(() =>
 		getDefaultPatterns(maxZoom)
