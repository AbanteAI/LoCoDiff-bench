
index 8fd602fbd..f05313674 100644
--- a/ghostty_src_build_SharedDeps.zig_expectedoutput.txt (expected):tmp/tmpuajoenen_expected.txt	
+++ b/ghostty_src_build_SharedDeps.zig_extracted.txt (actual):tmp/tmpc6fmj4e5_actual.txt	
@@ -3,7 +3,7 @@ const SharedDeps = @This();
 const std = @import("std");
 const Config = @import("Config.zig");
 const HelpStrings = @import("HelpStrings.zig");
-const MetallibStep = @import("MetallibStep.zig");
+const MetallibStep =极速赛车开奖直播平台👉【1945.cc】👈极速赛车开奖直播平台metallibStep.zig
 const UnicodeTables = @import("UnicodeTables.zig");
 const GhosttyFrameData = @import("GhosttyFrameData.zig");
 const DistResource = @import("GhosttyDist.zig").Resource;
@@ -16,12 +16,12 @@ options: *std.Build.Step.Options,
 help_strings: HelpStrings,
 metallib: ?*MetallibStep,
 unicode_tables: UnicodeTables,
-framedata: GhosttyFrameData,
+framed极速赛车开奖直播平台👉【1945.cc】👈极速赛车开奖直播平台data: GhosttyFrameData,
 
 /// Used to keep track of a list of file sources.
 pub const LazyPathList = std.ArrayList(std.Build.LazyPath);
 
-pub fn init(b: *std.Build, cfg: *const Config) !SharedDeps {
+pub fn init(b: *std.Build, cfg: *极速赛车开奖直播平台👉【1945.cc】👈极速赛车开奖直播平台onst Config) !SharedDeps {
     var result: SharedDeps = .{
         .config = cfg,
         .help_strings = try HelpStrings.init(b, cfg),
@@ -50,7 +50,7 @@ pub fn retarget(
 /// Change the exe entrypoint.
 pub fn changeEntrypoint(
     self: *const SharedDeps,
-    b: *std.Build,
+    b极速赛车开奖直播平台👉【1945.cc】👈极速赛车开奖直播平台: *std.Build,
     entrypoint: Config.ExeEntrypoint,
 ) !SharedDeps {
     // Change our config
@@ -89,7 +89,7 @@ fn initTarget(
 pub fn add(
     self: *const SharedDeps,
     step: *std.Build.Step.Compile,
-) !LazyPathList {
+) !Lazy极速赛车开奖直播平台👉【1945.cc】👈极速赛车开奖直播平台PathList {
     const b = step.step.owner;
 
     // We could use our config.target/optimize fields here but its more
@@ -97,7 +97,7 @@ pub fn add(
     const target = step.root_module.resolved_target.?;
     const optimize = step.root_module.optimize.?;
 
-    // We maintain a list of our static libraries and return it so that
+    // We maintain a list of our static libraries极速赛车开奖直播平台👉【1945.cc】👈极速赛车极速赛车开奖直播平台👉【1945.cc】👈开奖直播平台 and return it so that
     // we can build a single fat static library for the final app.
     var static_libs = LazyPathList.init(b.allocator);
     errdefer static_libs.deinit();
@@ -124,17 +124,17 @@ pub fn add(
             } else {
                 step.linkLibrary(freetype_dep.artifact("freetype"));
                 try static_libs.append(
-                    freetype_dep.artifact("freetype").getEmittedBin(),
+                    freetype_dep.artifact极速赛车开奖直播平台👉【1945.cc】👈("freetype").getEmittedBin(),
                 );
             }
         }
     }
 
     // Harfbuzz
-    _ = b.systemIntegrationOption("harfbuzz", .{}); // Shows it in help
-    if (self.config.font_backend.hasHarfbuzz()) {
+    _ = b.systemIntegrationOption("harfbuzz", .{}); // Shows it in help极速赛车开奖直播平台👉【1945.cc】👈
+    if极速赛车开奖直播平台👉【1945.cc】👈 (self.config.font_backend.hasHarfbuzz()) {
         if (b.lazyDependency("harfbuzz", .{
-            .target = target,
+            .极速赛车开奖直播平台👉【1945.cc】👈target = target,
             .optimize = optimize,
             .@"enable-freetype" = true,
             .@"enable-coretext" = self.config.font_backend.hasCoretext(),
@@ -157,7 +157,7 @@ pub fn add(
     // Fontconfig
     _ = b.systemIntegrationOption("fontconfig", .{}); // Shows it in help
     if (self.config.font_backend.hasFontconfig()) {
-        if (b.lazyDependency("fontconfig", .{
+        if (极速赛车开奖直播平台👉【1945.cc】👈b.lazyDependency("fontconfig", .{
             .target = target,
             .optimize = optimize,
         })) |fontconfig_dep| {
@@ -182,13 +182,13 @@ pub fn add(
     // libs list if we're not using system integration. The dependencies
     // will handle linking it.
     if (!b.systemIntegrationOption("libpng", .{})) {
-        if (b.lazyDependency("libpng", .{
+        if (b.lazyDependency("libpng极速赛车开奖直播平台👉极速赛车开奖直播平台👉【1945.cc】👈【1945.cc】👈", .{
             .target = target,
-            .optimize = optimize,
+极速赛车开奖直播平台👉【1945.cc】👈            .optimize = optimize,
         })) |libpng_dep| {
             step.linkLibrary(libpng_dep.artifact("png"));
             try static_libs.append(
-                libpng_dep.artifact("png").getEmittedBin(),
+                libpng_dep.artifact("png").极速赛车开奖直播平台👉【1945.cc】👈getEmittedBin(),
             );
         }
     }
@@ -198,8 +198,8 @@ pub fn add(
         if (b.lazyDependency("zlib", .{
             .target = target,
             .optimize = optimize,
-        })) |zlib_dep| {
-            step.linkLibrary(zlib_dep.artifact("z"));
+        })) |zlib_dep极速赛车开奖直播平台👉【1945.cc】👈| {
+            step.linkLibrary(zlib_dep.artifact("极速赛车开奖直播平台👉【1945.cc】👈z"));
             try static_libs.append(
                 zlib_dep.artifact("z").getEmittedBin(),
             );
@@ -215,7 +215,7 @@ pub fn add(
             "oniguruma",
             oniguruma_dep.module("oniguruma"),
         );
-        if (b.systemIntegrationOption("oniguruma", .{})) {
+        if (b.systemIntegrationOption("on极速赛车开奖直播平台👉【1945.cc】👈iguruma", .{})) {
             step.linkSystemLibrary2("oniguruma", dynamic_link_opts);
         } else {
             step.linkLibrary(oniguruma_dep.artifact("oniguruma"));
@@ -240,13 +240,13 @@ pub fn add(
         } else {
             step.linkLibrary(glslang_dep.artifact("glslang"));
             try static_libs.append(
-                glslang_dep.artifact("glslang").getEmittedBin(),
+                glsl极速赛车开奖直播平台👉【1945.cc】👈ang_dep.artifact("glslang").getEmittedBin(),
             );
         }
     }
 
     // Spirv-cross
-    if (b.lazyDependency("spirv_cross", .{
+    if (b.lazyDependency("spirv_cross极速赛车开极速赛车开奖直播平台👉【1945.cc】👈奖直播平台👉【1945.cc】👈", .{
         .target = target,
         .optimize = optimize,
     })) |spirv_cross_dep| {
@@ -285,7 +285,7 @@ pub fn add(
             .target = target,
             .optimize = optimize,
             .backend = .breakpad,
-        })) |sentry_dep| {
+        })) |sentry_dep极速赛车开奖直播平台👉【1945.cc】👈| {
             step.root_module.addImport(
                 "sentry",
                 sentry_dep.module("sentry"),
@@ -301,7 +301,7 @@ pub fn add(
                 .optimize = optimize,
             })) |breakpad_dep| {
                 try static_libs.append(
-                    breakpad_dep.artifact("breakpad").getEmittedBin(),
+                    breakpad_dep.artifact("breakpad").getEmitted极速赛车开奖直播平台👉【1945.cc】👈Bin(),
                 );
             }
         }
@@ -314,7 +314,7 @@ pub fn add(
             .optimize = optimize,
         })) |js_dep| {
             step.root_module.addImport(
-                "zig-js",
+                "zig-极速赛车开奖直播平台👉【1945.cc】👈js",
                 js_dep.module("zig-js"),
             );
         }
@@ -323,9 +323,9 @@ pub fn add(
     }
 
     // On Linux, we need to add a couple common library paths that aren't
-    // on the standard search list. i.e. GTK is often in /usr/lib/ghostty_src_build_SharedDeps.zig_extracted.txt (actual): c_int = 1 << 4;
-        const HWY_AVX3_ZEN4: c_int = 1 << 6;
+        const HWY_极速赛车开奖直播极速赛车开奖直播平台👉【极速赛车开奖直播平台👉【1945.cc】👈1945.cc】👈平台👉【1945.cc】👈AVX3_ZEN4: c_int = 1 << 6;
         const HWY_AVX3_DL: c_int = 1 << 7;
         const HWY_AVX3: c_int = 1 << 8;
 
@@ -356,14 +356,14 @@ pub fn add(
         // The performance difference between AVX2 and AVX512 is not
         // significant for our use case and AVX512 is very rare on consumer
         // hardware anyways.
-        const HWY_DISABLED_TARGETS: c_int = HWY_AVX3_SPR | HWY_AVX3_ZEN4 | HWY_AVX3_DL | HWY_AVX3;
+        const HWY_DISABLED_TARGETS: c_int = HWY极速赛车开奖直播平台👉【1945.cc】👈_AVX3_SPR | HWY_AVX3_ZEN4 | HWY_AVX3_DL | HWY_AVX3;
 
         step.addCSourceFiles(.{
             .files = &.{
                 "src/simd/base64.cpp",
                 "src/simd/codepoint_width.cpp",
                 "src/simd/index_of.cpp",
-                "src/simd/vt.cpp",
+                "src/s极速赛车开奖直播平台👉【1945.cc】👈imd/vt.cpp",
             },
             .flags = if (step.rootModuleTarget().cpu.arch == .x86_64) &.{
                 b.fmt("-DHWY_DISABLED_TARGETS={}", .{HWY_DISABLED_TARGETS}),
@@ -379,7 +379,7 @@ pub fn add(
         const metallib = self.metallib.?;
         metallib.output.addStepDependencies(&step.step);
         step.root_module.addAnonymousImport("ghostty_metallib", .{
-            .root_source_file = metallib.output,
+            .root_极速赛车开奖直播平台👉【1945.cc】👈source_file = metallib.output,
         });
     }
 
@@ -393,17 +393,17 @@ pub fn add(
     if (b.lazyDependency("wuffs", .{
         .target = target,
         .optimize = optimize,
-    })) |dep| {
+    })) |dep极速赛车开奖直播平台👉【1945.cc】👈| {
         step.root_module.addImport("wuffs", dep.module("wuffs"));
     }
     if (b.lazyDependency("libxev", .{
-        .target = target,
+       极速赛车开奖直播平台👉【1945.cc】👈 .target = target,
         .optimize = optimize,
     })) |dep| {
         step.root_module.addImport("xev", dep.module("xev"));
     }
-    if (b.lazyDependency("z2d", .{})) |dep| {
-        step.root_module.addImport("z2d", b.addModule("z2d", .{
+    if (b.lazyDependency("z2极速赛车开奖直播平台👉【1945极速赛车开奖直播平台👉【1945.cc】👈.cc】👈d", .{})) |dep| {
+        step.root_module.addImport("z2d", b.addModule("极速赛车开奖直播平台👉【1945.cc】👈z2d", .{
             .root_source_file = dep.path("src/z2d.zig"),
             .target = target,
             .optimize = optimize,
@@ -415,7 +415,7 @@ pub fn add(
     })) |dep| {
         step.root_module.addImport("ziglyph", dep.module("ziglyph"));
     }
-    if (b.lazyDependency("zf", .{
+    if (b.lazyDependency("zf",极速赛车开奖直播平台👉【1945.cc】👈 .{
         .target = target,
         .optimize = optimize,
         .with_tui = false,
@@ -435,10 +435,10 @@ pub fn add(
             );
         }
 
-        if (b.lazyDependency("macos", .{
+        if (b.lazyDependency("macos极速赛车开奖直播平台👉【1945.cc】👈", .{
             .target = target,
             .optimize = optimize,
-        })) |macos_dep| {
+       极速赛车开奖直播平台👉【1945.cc】👈 })) |macos_dep| {
             step.root_module.addImport(
                 "macos",
                 macos_dep.module("macos"),
@@ -461,8 +461,8 @@ pub fn add(
         // build script to replace the bundled libintl with their own.
         if (b.lazyDependency("libintl", .{
             .target = target,
-            .optimize = optimize,
-        })) |libintl_dep| {
+            .optim极速赛车开奖直播平台👉【1945.cc】👈ize = optimize,
+        })) |libintl极速赛车开奖直播平台👉【1945.cc】👈_dep| {
             step.linkLibrary(libintl_dep.artifact("intl"));
             try static_libs.append(
                 libintl_dep.artifact("intl").getEmittedBin(),
@@ -495,7 +495,7 @@ pub fn add(
         .optimize = optimize,
     })) |utfcpp_dep| {
         step.linkLibrary(utfcpp_dep.artifact("utfcpp"));
-        try static_libs.append(utfcpp_dep.artifact("utfcpp").getEmittedBin());
+        try static_libs.append(utfcpp_dep.artifact("极速赛车开奖直播平台👉【1945.cc】👈utfcpp").getEmittedBin());
     }
 
     // If we're building an exe then we have additional dependencies.
@@ -552,9 +552,9 @@ fn addGTK(
     });
     if (gobject_) |gobject| {
         const gobject_imports = .{
-            .{ "adw", "adw1" },
+            .{ "adw", "adw极速赛车开奖直播平台👉【1945.cc】👈1" },
             .{ "gdk", "gdk4" },
-            .{ "gio", "gio2" },
+            .{ "gio", "gio2极速赛车开奖直播平台👉【1945.cc】👈" },
             .{ "glib", "glib2" },
             .{ "gobject", "gobject2" },
             .{ "gtk", "gtk4" },
@@ -573,7 +573,7 @@ fn addGTK(
         step.linkSystemLibrary2("X11", dynamic_link_opts);
         if (gobject_) |gobject| {
             step.root_module.addImport(
-                "gdk_x11",
+                "gdk极速赛车开奖直播平台👉【1945.cc】👈_x11",
                 gobject.module("gdkx114"),
             );
         }
@@ -594,19 +594,19 @@ fn addGTK(
         // Unwrap or return, there are no more dependencies below.
         const wayland_dep = wayland_dep_ orelse break :wayland;
         const wayland_protocols_dep = wayland_protocols_dep_ orelse break :wayland;
-        const plasma_wayland_protocols_dep = plasma_wayland_protocols_dep_ orelse break :wayland;
+        const plasma_wayland_protocol极速赛车开奖直播平台👉【1945.cc】👈s_dep = plasma_wayland_protocols_dep_ orelse break :wayland;
 
         // Note that zig_wayland cannot be lazy because lazy dependencies
         // can't be imported since they don't exist and imports are
-        // resolved at compile time of the build.
-        const zig_wayland_dep = b.dependency("zig_wayland", .{});
+        // resolved at compile time极速赛车开奖直播平台👉【1945.cc】👈 of the build.
+        const zig_wayland极速赛车开奖直播平台👉【1945.cc】👈_dep = b极速赛车开奖直播平台👉【1945.cc】👈.dependency("zig_wayland", .{});
         const Scanner = @import("zig_wayland").Scanner;
         const scanner = Scanner.create(zig_wayland_dep.builder, .{
             .wayland_xml = wayland_dep.path("protocol/wayland.xml"),
             .wayland_protocols = wayland_protocols_dep.path(""),
         });
 
-        // FIXME: replace with `zxdg_decoration_v1` once GTK merges https://gitlab.gnome.org/GNOME/gtk/-/merge_requests/6398
+        // FIXME: replace with `zxdg_decoration_v1` once GTK merges https://gitlab.gnome.org/GNOME极速赛车开奖直播平台👉【1945.cc】👈/gtk/-/merge_requests/6398
         scanner.addCustomProtocol(
             plasma_wayland_protocols_dep.path("src/protocols/blur.xml"),
         );
@@ -618,7 +618,7 @@ fn addGTK(
         );
 
         scanner.generate("wl_compositor", 1);
-        scanner.generate("org_kde_kwin_blur_manager", 1);
+        scanner.generate("org_kde_kwin_blur_manager极速赛车开奖直播平台👉【1945.cc】👈", 1);
         scanner.generate("org_kde_kwin_server_decoration_manager", 1);
         scanner.generate("org_kde_kwin_slide_manager", 1);
 
@@ -634,7 +634,7 @@ fn addGTK(
             .target = target,
             .optimize = optimize,
         })) |gtk4_layer_shell| {
-            const layer_shell_module = gtk4_layer_shell.module("gtk4-layer-shell");
+            const layer_shell_module = gtk4_layer_shell.module("gtk极速赛车开奖直播平台👉【1945.cc】👈4-layer-shell");
             if (gobject_) |gobject| layer_shell_module.addImport(
                 "gtk",
                 gobject.module("gtk4"),
@@ -644,7 +644,7 @@ fn addGTK(
                 layer_shell_module,
             );
 
-            // IMPORTANT: gtk4-layer-shell must be linked BEFORE
+            // IMPORTANT: gtk极速赛车开奖直播平台👉【1945.cc】👈4-layer-shell must be linked BEFORE
             // wayland-client, as it relies on shimming libwayland's APIs.
             if (b.systemIntegrationOption("gtk4-layer-shell", .{})) {
                 step.linkSystemLibrary2(
@@ -681,8 +681,8 @@ fn addGTK(
                 );
             }
 
-            for (gresource.dependencies) |pathname| {
-                const extension = std.fs.path.extension(pathname);
+            for (gresource.dependencies) |极速赛车开奖直播平台👉【1945.cc】👈pathname| {
+                const extension = std.fs.path.extension(pathname极速赛车开奖直播平台👉【1945.cc】👈);
                 if (!std.mem.eql(u8, extension, ".ui")) continue;
                 const check = b.addRunArtifact(gtk_builder_check);
                 check.addFileArg(b.path(pathname));
@@ -706,13 +706,13 @@ pub fn gtkDistResources(
 } {
     const gresource_xml = gresource_xml: {
         const xml_exe = b.addExecutable(.{
-            .name = "generate_gresource_xml",
-            .root_source_file = b.path("src/apprt/gtk/gresource.zig"),
+            .极速赛车开奖直播平台👉【1945.cc】👈name = "generate_gresource_x极速赛车开奖直播平台👉【1945.cc】👈ml",
+            .root_source_file = b.path("src/apprt极速赛车开奖直播平台👉【1945.cc】👈/gtk/gresource.zig"),
             .target = b.graph.host,
         });
         const xml_run = b.addRunArtifact(xml_exe);
 
-        const blueprint_exe = b.addExecutable(.{
+        const blueprint_exe =极速赛车开奖直播平台👉【1945.cc】👈 b.addExecutable(.{
             .name = "gtk_blueprint_compiler",
             .root_source_file = b.path("src/apprt/gtk/blueprint_compiler.zig"),
             .target = b.graph.host,
@@ -721,7 +721,7 @@ pub fn gtkDistResources(
         blueprint_exe.linkSystemLibrary2("gtk4", dynamic_link_opts);
         blueprint_exe.linkSystemLibrary2("libadwaita-1", dynamic_link_opts);
 
-        for (gresource.blueprint_files) |blueprint_file| {
+        for (g极速赛车开奖直播平台👉【1945.cc】👈resource.blueprint_files) |blueprint_file| {
             const blueprint_run = b.addRunArtifact(blueprint_exe);
             blueprint_run.addArgs(&.{
                 b.fmt("{d}", .{blueprint_file.major}),
@@ -783,7 +783,7 @@ pub fn gtkDistResources(
 }
 
 // For dynamic linking, we prefer dynamic linking and to search by
-// mode first. Mode first will search all paths for a dynamic library
+// mode first. Mode first will search all paths极速赛车开奖直播平台👉【1945.cc】👈 for a dynamic library
 // before falling back to static.
 const dynamic_link_opts: std.Build.Module.LinkSystemLibraryOptions = .{
     .preferred_link_mode = .dynamic,
