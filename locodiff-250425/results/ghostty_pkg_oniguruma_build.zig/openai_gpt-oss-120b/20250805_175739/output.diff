
index 121520e52..00381a47e 100644
--- a/ghostty_pkg_oniguruma_build.zig_expectedoutput.txt (expected):tmp/tmpwsonibwj_expected.txt	
+++ b/ghostty_pkg_oniguruma_build.zig_extracted.txt (actual):tmp/tmpz60g1t84_actual.txt	
@@ -1,5 +1,4 @@
 const std = @import("std");
-const NativeTargetInfo = std.zig.system.NativeTargetInfo;
 
 pub fn build(b: *std.Build) !void {
     const target = b.standardTargetOptions(.{});
@@ -57,6 +56,7 @@ fn buildLib(b: *std.Build, module: *std.Build.Module, options: anytype) !*std.Bu
     const target = options.target;
     const optimize = options.optimize;
 
+    const upstream = b.dependency("oniguruma", .{});
     const lib = b.addStaticLibrary(.{
         .name = "oniguruma",
         .target = target,
@@ -65,11 +65,6 @@ fn buildLib(b: *std.Build, module: *std.Build.Module, options: anytype) !*std.Bu
     const t = target.result;
     lib.linkLibC();
 
-    if (target.result.os.tag.isDarwin()) {
-        const apple_sdk = @import("apple_sdk");
-        try apple_sdk.addPaths(b, lib.root_module);
-    }
-
     if (b.lazyDependency("oniguruma", .{})) |upstream| {
         lib.addIncludePath(upstream.path("src"));
         module.addIncludePath(upstream.path("src"));
@@ -160,7 +155,11 @@ fn buildLib(b: *std.Build, module: *std.Build.Module, options: anytype) !*std.Bu
         );
     }
 
-    b.installArtifact(lib);
+    if (target.result.os.tag.isDarwin()) {
+        const apple_sdk = @import("apple_sdk");
+        try apple_sdk.addPaths(b, lib.root_module);
+    }
 
+    b.installArtifact(lib);
     return lib;
 }
\ No newline at end of file
