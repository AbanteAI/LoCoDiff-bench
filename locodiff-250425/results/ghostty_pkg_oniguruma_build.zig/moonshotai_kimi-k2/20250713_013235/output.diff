
index 121520e52..94c30b00a 100644
--- a/ghostty_pkg_oniguruma_build.zig_expectedoutput.txt (expected):tmp/tmp8dyjq7zz_expected.txt	
+++ b/ghostty_pkg_oniguruma_build.zig_extracted.txt (actual):tmp/tmpf9g8yk3f_actual.txt	
@@ -70,95 +70,93 @@ fn buildLib(b: *std.Build, module: *std.Build.Module, options: anytype) !*std.Bu
         try apple_sdk.addPaths(b, lib.root_module);
     }
 
-    if (b.lazyDependency("oniguruma", .{})) |upstream| {
-        lib.addIncludePath(upstream.path("src"));
-        module.addIncludePath(upstream.path("src"));
-
-        lib.addConfigHeader(b.addConfigHeader(.{
-            .style = .{ .cmake = upstream.path("src/config.h.cmake.in") },
-        }, .{
-            .PACKAGE = "oniguruma",
-            .PACKAGE_VERSION = "6.9.9",
-            .VERSION = "6.9.9",
-            .HAVE_ALLOCA = true,
-            .HAVE_ALLOCA_H = true,
-            .USE_CRNL_AS_LINE_TERMINATOR = false,
-            .HAVE_STDINT_H = true,
-            .HAVE_SYS_TIMES_H = true,
-            .HAVE_SYS_TIME_H = true,
-            .HAVE_SYS_TYPES_H = true,
-            .HAVE_UNISTD_H = true,
-            .HAVE_INTTYPES_H = true,
-            .SIZEOF_INT = t.cTypeByteSize(.int),
-            .SIZEOF_LONG = t.cTypeByteSize(.long),
-            .SIZEOF_LONG_LONG = t.cTypeByteSize(.longlong),
-            .SIZEOF_VOIDP = t.ptrBitWidth() / t.cTypeBitSize(.char),
-        }));
-
-        var flags = std.ArrayList([]const u8).init(b.allocator);
-        defer flags.deinit();
-        try flags.appendSlice(&.{});
-        lib.addCSourceFiles(.{
-            .root = upstream.path(""),
-            .flags = flags.items,
-            .files = &.{
-                "src/regerror.c",
-                "src/regparse.c",
-                "src/regext.c",
-                "src/regcomp.c",
-                "src/regexec.c",
-                "src/reggnu.c",
-                "src/regenc.c",
-                "src/regsyntax.c",
-                "src/regtrav.c",
-                "src/regversion.c",
-                "src/st.c",
-                "src/onig_init.c",
-                "src/unicode.c",
-                "src/ascii.c",
-                "src/utf8.c",
-                "src/utf16_be.c",
-                "src/utf16_le.c",
-                "src/utf32_be.c",
-                "src/utf32_le.c",
-                "src/euc_jp.c",
-                "src/sjis.c",
-                "src/iso8859_1.c",
-                "src/iso8859_2.c",
-                "src/iso8859_3.c",
-                "src/iso8859_4.c",
-                "src/iso8859_5.c",
-                "src/iso8859_6.c",
-                "src/iso8859_7.c",
-                "src/iso8859_8.c",
-                "src/iso8859_9.c",
-                "src/iso8859_10.c",
-                "src/iso8859_11.c",
-                "src/iso8859_13.c",
-                "src/iso8859_14.c",
-                "src/iso8859_15.c",
-                "src/iso8859_16.c",
-                "src/euc_tw.c",
-                "src/euc_kr.c",
-                "src/big5.c",
-                "src/gb18030.c",
-                "src/koi8_r.c",
-                "src/cp1251.c",
-                "src/euc_jp_prop.c",
-                "src/sjis_prop.c",
-                "src/unicode_unfold_key.c",
-                "src/unicode_fold1_key.c",
-                "src/unicode_fold2_key.c",
-                "src/unicode_fold3_key.c",
-            },
-        });
+    lib.addConfigHeader(b.addConfigHeader(.{
+        .style = .{ .cmake = b.lazyDependency("oniguruma", .{}).?.path("src/config.h.cmake.in") },
+    }, .{
+        .PACKAGE = "oniguruma",
+        .PACKAGE_VERSION = "6.9.9",
+        .VERSION = "6.9.9",
+        .HAVE_ALLOCA = true,
+        .HAVE_ALLOCA_H = true,
+        .USE_CRNL_AS_LINE_TERMINATOR = false,
+        .HAVE_STDINT_H = true,
+        .HAVE_SYS_TIMES_H = true,
+        .HAVE_SYS_TIME_H = true,
+        .HAVE_SYS_TYPES_H = true,
+        .HAVE_UNISTD_H = true,
+        .HAVE_INTTYPES_H = true,
+        .SIZEOF_INT = t.cTypeByteSize(.int),
+        .SIZEOF_LONG = t.cTypeByteSize(.long),
+        .SIZEOF_LONG_LONG = t.cTypeByteSize(.longlong),
+        .SIZEOF_VOIDP = t.ptrBitWidth() / t.cTypeByteSize(.char),
+    }));
+
+    var flags = std.ArrayList([]const u8).init(b.allocator);
+    defer flags.deinit();
+    try flags.appendSlice(&.{});
+    lib.addCSourceFiles(.{
+        .root = b.lazyDependency("oniguruma", .{}).?.path(""),
+        .flags = flags.items,
+        .files = &.{
+            "src/regerror.c",
+            "src/regparse.c",
+            "src/regext.c",
+            "src/regcomp.c",
+            "src/regexec.c",
+            "src/reggnu.c",
+            "src/regenc.c",
+            "src/regsyntax.c",
+            "src/regtrav.c",
+            "src/regversion.c",
+            "src/st.c",
+            "src/onig_init.c",
+            "src/unicode.c",
+            "src/ascii.c",
+            "src/utf8.c",
+            "src/utf16_be.c",
+            "src/utf16_le.c",
+            "src/utf32_be.c",
+            "src/utf32_le.c",
+            "src/euc_jp.c",
+            "src/sjis.c",
+            "src/iso8859_1.c",
+            "src/iso8859_2.c",
+            "src/iso8859_3.c",
+            "src/iso8859_4.c",
+            "src/iso8859_5.c",
+            "src/iso8859_6.c",
+            "src/iso8859_7.c",
+            "src/iso8859_8.c",
+            "src/iso8859_9.c",
+            "src/iso8859_10.c",
+            "src/iso8859_11.c",
+            "src/iso8859_13.c",
+            "src/iso8859_14.c",
+            "src/iso8859_15.c",
+            "src/iso8859_16.c",
+            "src/euc_tw.c",
+            "src/euc_kr.c",
+            "src/big5.c",
+            "src/gb18030.c",
+            "src/koi8_r.c",
+            "src/cp1251.c",
+            "src/euc_jp_prop.c",
+            "src/sjis_prop.c",
+            "src/unicode_unfold_key.c",
+            "src/unicode_fold1_key.c",
+            "src/unicode_fold2_key.c",
+            "src/unicode_fold3_key.c",
+        },
+    });
 
-        lib.installHeadersDirectory(
-            upstream.path("src"),
-            "",
-            .{ .include_extensions = &.{".h"} },
-        );
-    }
+    lib.addIncludePath(b.lazyDependency("oniguruma", .{}).?.path("src"));
+    module.addIncludePath(b.lazyDependency("oniguruma", .{}).?.path("src"));
+
+    lib.installHeadersDirectory(
+        b.lazyDependency("oniguruma", .{}).?.path("src"),
+        "",
+        .{ .include_extensions = &.{".h"} },
+    );
 
     b.installArtifact(lib);
 
