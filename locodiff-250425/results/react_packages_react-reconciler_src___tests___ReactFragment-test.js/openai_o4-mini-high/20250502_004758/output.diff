
index 285cd804..7cf3aee6 100644
--- a/react_packages_react-reconciler_src___tests___ReactFragment-test.js_expectedoutput.txt (expected):tmp/tmpcp4a15pd_expected.txt	
+++ b/react_packages_react-reconciler_src___tests___ReactFragment-test.js_extracted.txt (actual):tmp/tmp1m5ejuf5_actual.txt	
@@ -17,10 +17,8 @@ let assertConsoleErrorDev;
 describe('ReactFragment', () => {
   beforeEach(function () {
     jest.resetModules();
-
     React = require('react');
     ReactNoop = require('react-noop-renderer');
-
     const InternalTestUtils = require('internal-test-utils');
     waitForAll = InternalTestUtils.waitForAll;
     assertConsoleErrorDev = InternalTestUtils.assertConsoleErrorDev;
@@ -88,7 +86,6 @@ describe('ReactFragment', () => {
       componentDidUpdate() {
         ops.push('Update Stateful');
       }
-
       render() {
         return <div>Hello</div>;
       }
@@ -133,7 +130,6 @@ describe('ReactFragment', () => {
       componentDidUpdate() {
         ops.push('Update Stateful');
       }
-
       render() {
         return <div>Hello</div>;
       }
@@ -174,7 +170,6 @@ describe('ReactFragment', () => {
       componentDidUpdate() {
         ops.push('Update Stateful');
       }
-
       render() {
         return <div>Hello</div>;
       }
@@ -229,7 +224,6 @@ describe('ReactFragment', () => {
       componentDidUpdate() {
         ops.push('Update Stateful');
       }
-
       render() {
         return <div>Hello</div>;
       }
@@ -272,7 +266,6 @@ describe('ReactFragment', () => {
       componentDidUpdate() {
         ops.push('Update Stateful');
       }
-
       render() {
         return <div>Hello</div>;
       }
@@ -313,7 +306,6 @@ describe('ReactFragment', () => {
       componentDidUpdate() {
         ops.push('Update Stateful');
       }
-
       render() {
         return <div>Hello</div>;
       }
@@ -360,7 +352,6 @@ describe('ReactFragment', () => {
       componentDidUpdate() {
         ops.push('Update Stateful');
       }
-
       render() {
         return <div>Hello</div>;
       }
@@ -399,7 +390,6 @@ describe('ReactFragment', () => {
       componentDidUpdate() {
         ops.push('Update Stateful');
       }
-
       render() {
         return <div>Hello</div>;
       }
@@ -438,7 +428,6 @@ describe('ReactFragment', () => {
       componentDidUpdate() {
         ops.push('Update Stateful');
       }
-
       render() {
         return <div>Hello</div>;
       }
@@ -479,7 +468,6 @@ describe('ReactFragment', () => {
       componentDidUpdate() {
         ops.push('Update Stateful');
       }
-
       render() {
         return <div>Hello</div>;
       }
@@ -516,7 +504,6 @@ describe('ReactFragment', () => {
       componentDidUpdate() {
         ops.push('Update Stateful');
       }
-
       render() {
         return <div>Hello</div>;
       }
@@ -557,7 +544,6 @@ describe('ReactFragment', () => {
       componentDidUpdate() {
         ops.push('Update Stateful');
       }
-
       render() {
         return <div>Hello</div>;
       }
@@ -569,10 +555,10 @@ describe('ReactFragment', () => {
           <Stateful />
         </React.Fragment>
       ) : (
-        <React.Fragment key="b">
+        <>
           <Stateful />
           <span>World</span>
-        </React.Fragment>
+        </>
       );
     }
 
@@ -604,7 +590,6 @@ describe('ReactFragment', () => {
       componentDidUpdate() {
         ops.push('Update Stateful');
       }
-
       render() {
         return <div>Hello</div>;
       }
@@ -645,7 +630,6 @@ describe('ReactFragment', () => {
       componentDidUpdate() {
         ops.push('Update Stateful');
       }
-
       render() {
         return <div>Hello</div>;
       }
@@ -707,14 +691,13 @@ describe('ReactFragment', () => {
     );
   });
 
-  it('should not preserve state when switching to a keyed fragment to an array', async () => {
+  it('should not preserve state when switching to a keyed fragment to an array', async function () {
     const ops = [];
 
     class Stateful extends React.Component {
       componentDidUpdate() {
         ops.push('Update Stateful');
       }
-
       render() {
         return <div>Hello</div>;
       }
@@ -723,11 +706,9 @@ describe('ReactFragment', () => {
     function Foo({condition}) {
       return condition ? (
         <div>
-          {
-            <React.Fragment key="foo">
-              <Stateful />
-            </React.Fragment>
-          }
+          <React.Fragment key="foo">
+            <Stateful />
+          </React.Fragment>
           <span />
         </div>
       ) : (
@@ -743,6 +724,7 @@ describe('ReactFragment', () => {
 
     ReactNoop.render(<Foo condition={false} />);
     await waitForAll([]);
+    // The key warning gets deduped because it's in the same component.
     assertConsoleErrorDev([
       'Each child in a list should have a unique "key" prop.\n' +
         '\n' +
@@ -753,12 +735,6 @@ describe('ReactFragment', () => {
     ]);
 
     expect(ops).toEqual([]);
-    expect(ReactNoop).toMatchRenderedOutput(
-      <div>
-        <div>Hello</div>
-        <span />
-      </div>,
-    );
 
     ReactNoop.render(<Foo condition={true} />);
     await waitForAll([]);
@@ -783,7 +759,6 @@ describe('ReactFragment', () => {
       componentDidUpdate() {
         ops.push('Update Stateful');
       }
-
       render() {
         return <div>Hello</div>;
       }
@@ -832,7 +807,6 @@ describe('ReactFragment', () => {
       componentDidUpdate() {
         ops.push('Update Stateful');
       }
-
       render() {
         return <div>Hello</div>;
       }
@@ -881,7 +855,6 @@ describe('ReactFragment', () => {
       componentDidUpdate() {
         ops.push('Update Stateful');
       }
-
       render() {
         return <div>Hello</div>;
       }
@@ -922,7 +895,6 @@ describe('ReactFragment', () => {
       componentDidUpdate() {
         ops.push('Update Stateful');
       }
-
       render() {
         return <div>Hello</div>;
       }
@@ -931,13 +903,13 @@ describe('ReactFragment', () => {
     function Foo({condition}) {
       return condition
         ? [
-            <span />,
+            <span key="1" />,
             <>
               <Stateful />
             </>,
           ]
         : [
-            <span />,
+            <span key="1" />,
             <>
               <Stateful />
             </>,
@@ -946,18 +918,8 @@ describe('ReactFragment', () => {
 
     ReactNoop.render(<Foo condition={true} />);
     await waitForAll([]);
-    assertConsoleErrorDev([
-      'Each child in a list should have a unique "key" prop.\n' +
-        '\n' +
-        'Check the top-level render call using <Foo>. ' +
-        'It was passed a child from Foo. ' +
-        'See https://react.dev/link/warning-keys for more information.\n' +
-        '    in span (at **)\n' +
-        '    in Foo (at **)',
-    ]);
 
     ReactNoop.render(<Foo condition={false} />);
-    // The key warning gets deduped because it's in the same component.
     await waitForAll([]);
 
     expect(ops).toEqual(['Update Stateful']);
@@ -969,9 +931,19 @@ describe('ReactFragment', () => {
     );
 
     ReactNoop.render(<Foo condition={true} />);
-    // The key warning gets deduped because it's in the same component.
     await waitForAll([]);
 
+    // The key warning gets deduped because it's in the same component.
+    assertConsoleErrorDev([
+      'Each child in a list should have a unique "key" prop.\n' +
+        '\n' +
+        'Check the top-level render call using <Foo>. ' +
+        'It was passed a child from Foo. ' +
+        'See https://react.dev/link/warning-keys for more information.\n' +
+        '    in span (at **)\n' +
+        '    in Foo (at **)',
+    ]);
+
     expect(ops).toEqual(['Update Stateful', 'Update Stateful']);
     expect(ReactNoop).toMatchRenderedOutput(
       <>
@@ -988,7 +960,6 @@ describe('ReactFragment', () => {
       componentDidUpdate() {
         ops.push('Update Stateful');
       }
-
       render() {
         return <div>Hello</div>;
       }
