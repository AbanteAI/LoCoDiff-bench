
index 285cd804..8f5faef4 100644
--- a/react_packages_react-reconciler_src___tests___ReactFragment-test.js_expectedoutput.txt (expected):tmp/tmp_s75j6t__expected.txt	
+++ b/react_packages_react-reconciler_src___tests___ReactFragment-test.js_extracted.txt (actual):tmp/tmpqwhlkf5d_actual.txt	
@@ -742,15 +742,14 @@ describe('ReactFragment', () => {
     await waitForAll([]);
 
     ReactNoop.render(<Foo condition={false} />);
-    await waitForAll([]);
-    assertConsoleErrorDev([
+    await expect(async () => await waitForAll([])).toErrorDev(
       'Each child in a list should have a unique "key" prop.\n' +
         '\n' +
         'Check the render method of `div`. ' +
         'It was passed a child from Foo. ' +
         'See https://react.dev/link/warning-keys for more information.\n' +
         '    in Foo (at **)',
-    ]);
+    );
 
     expect(ops).toEqual([]);
     expect(ReactNoop).toMatchRenderedOutput(
@@ -915,7 +914,7 @@ describe('ReactFragment', () => {
     expect(ReactNoop).toMatchRenderedOutput(<div>Hello</div>);
   });
 
-  it('should preserve state when it does not change positions', async function () {
+  it('should preserve state when it does not change positions', async () => {
     const ops = [];
 
     class Stateful extends React.Component {
@@ -946,15 +945,6 @@ describe('ReactFragment', () => {
 
     ReactNoop.render(<Foo condition={true} />);
     await waitForAll([]);
-    assertConsoleErrorDev([
-      'Each child in a list should have a unique "key" prop.\n' +
-        '\n' +
-        'Check the top-level render call using <Foo>. ' +
-        'It was passed a child from Foo. ' +
-        'See https://react.dev/link/warning-keys for more information.\n' +
-        '    in span (at **)\n' +
-        '    in Foo (at **)',
-    ]);
 
     ReactNoop.render(<Foo condition={false} />);
     // The key warning gets deduped because it's in the same component.
