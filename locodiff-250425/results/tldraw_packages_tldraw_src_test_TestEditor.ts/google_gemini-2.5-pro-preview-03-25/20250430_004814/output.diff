
index c20a7cb5..f00ca022 100644
--- a/tldraw_packages_tldraw_src_test_TestEditor.ts_expectedoutput.txt (expected):tmp/tmpl294lt_a_expected.txt	
+++ b/tldraw_packages_tldraw_src_test_TestEditor.ts_extracted.txt (actual):tmp/tmp8wgiec1p_actual.txt	
@@ -391,10 +391,10 @@ export class TestEditor extends Editor {
 	): TLKeyboardEventInfo {
 		return {
 			shiftKey: key === 'Shift',
-			ctrlKey: key === 'Control' || key === 'Meta',
+			ctrlKey: key === 'Control',
 			altKey: key === 'Alt',
 			metaKey: key === 'Meta',
-			accelKey: tlenv.isDarwin ? key === 'Meta' : key === 'Control' || key === 'Meta',
+			accelKey: tlenv.isDarwin ? key === 'Meta' : key === 'Control',
 			...options,
 			name,
 			code:
@@ -515,7 +515,7 @@ export class TestEditor extends Editor {
 			type: 'click',
 			name: 'double_click',
 			phase: 'down',
-		})
+		}).forceTick()
 		this.dispatch({
 			...this.getPointerEventInfo(x, y, options, modifiers),
 			type: 'click',
@@ -539,7 +539,7 @@ export class TestEditor extends Editor {
 		this.dispatch({
 			...this.getKeyboardEventInfo(key, 'key_up', {
 				shiftKey: this.inputs.shiftKey && key !== 'Shift',
-				ctrlKey: this.inputs.ctrlKey && !(key === 'Control' || key === 'Meta'),
+				ctrlKey: this.inputs.ctrlKey && !(key === 'Control'),
 				altKey: this.inputs.altKey && key !== 'Alt',
 				metaKey: this.inputs.metaKey && key !== 'Meta',
 				...options,
@@ -852,4 +852,6 @@ export const createDefaultShapes = (): TLShapePartial[] => [
 ]
 
 type PointerEventInit = Partial<TLPointerEventInfo> | TLShapeId
-type EventModifiers = Partial<Pick<TLPointerEventInfo, 'shiftKey' | 'ctrlKey' | 'altKey'>>
\ No newline at end of file
+type EventModifiers = Partial<
+	Pick<TLPointerEventInfo, 'shiftKey' | 'ctrlKey' | 'altKey' | 'metaKey'>
+>
\ No newline at end of file
