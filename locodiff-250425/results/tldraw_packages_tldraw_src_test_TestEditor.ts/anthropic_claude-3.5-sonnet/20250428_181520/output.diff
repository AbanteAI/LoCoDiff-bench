
index c20a7cb5..7db81c1d 100644
--- a/tldraw_packages_tldraw_src_test_TestEditor.ts_expectedoutput.txt (expected):tmp/tmp7al_n1v4_expected.txt	
+++ b/tldraw_packages_tldraw_src_test_TestEditor.ts_extracted.txt (actual):tmp/tmpvfg7my95_actual.txt	
@@ -13,7 +13,7 @@ import {
 	TLArrowBinding,
 	TLArrowShape,
 	TLContent,
-	TLEditorOptions,
+	TLEditorOptions, 
 	TLEventInfo,
 	TLKeyboardEventInfo,
 	TLPinchEventInfo,
@@ -34,7 +34,7 @@ import {
 	tlenv,
 } from '@tldraw/editor'
 import { defaultBindingUtils } from '../lib/tldraw_packages_tldraw_src_test_TestEditor.ts_extracted.txt (actual): () => elm,
 			initialState: 'select',
 			textOptions: {
-				addFontsFromNode: defaultAddFontsFromNode,
+				addFontsFromNode: defaultAddFontsFromNode, 
 				tipTapConfig: {
 					extensions: tipTapDefaultExtensions,
 				},
@@ -387,7 +387,7 @@ export class TestEditor extends Editor {
 	protected getKeyboardEventInfo(
 		key: string,
 		name: TLKeyboardEventInfo['name'],
-		options = {} as Partial<Exclude<TLKeyboardEventInfo, 'point'>>
+		options = {} as Partial<Exclude<TLKeyboardEventInfo, 'key'>>
 	): TLKeyboardEventInfo {
 		return {
 			shiftKey: key === 'Shift',
@@ -448,7 +448,7 @@ export class TestEditor extends Editor {
 
 	pointerDown(
 		x = this.inputs.currentScreenPoint.x,
-		y = this.inputs.currentScreenPoint.y,
+		y = this.inputs.currentScreenPoint.y, 
 		options?: PointerEventInit,
 		modifiers?: EventModifiers
 	) {
@@ -486,7 +486,7 @@ export class TestEditor extends Editor {
 	rightClick(
 		x = this.inputs.currentScreenPoint.x,
 		y = this.inputs.currentScreenPoint.y,
-		options?: PointerEventInit,
+		options?: PointerEventInit, 
 		modifiers?: EventModifiers
 	) {
 		this.dispatch({
@@ -515,11 +515,11 @@ export class TestEditor extends Editor {
 			type: 'click',
 			name: 'double_click',
 			phase: 'down',
-		})
+		}).forceTick()
 		this.dispatch({
 			...this.getPointerEventInfo(x, y, options, modifiers),
 			type: 'click',
-			name: 'double_click',
+			name: 'double_click', 
 			phase: 'up',
 		}).forceTick()
 		return this
@@ -532,7 +532,7 @@ export class TestEditor extends Editor {
 
 	keyRepeat(key: string, options = {} as Partial<Exclude<TLKeyboardEventInfo, 'key'>>) {
 		this.dispatch({ ...this.getKeyboardEventInfo(key, 'key_repeat', options) }).forceTick()
-		return this
+		return this  
 	}
 
 	keyUp(key: string, options = {} as Partial<Omit<TLKeyboardEventInfo, 'key'>>) {
@@ -618,7 +618,7 @@ export class TestEditor extends Editor {
 			...options,
 			point: { x, y, z },
 			delta: { x: dx, y: dy, z: dz },
-		})
+		}).forceTick()
 		return this
 	}
 
@@ -645,6 +645,7 @@ export class TestEditor extends Editor {
 		}).forceTick()
 		return this
 	}
+
 	/* ------ Interaction Helpers ------ */
 
 	rotateSelection(
