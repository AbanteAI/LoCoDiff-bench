
index f68c81d66..37032de09 100644
--- a/ghostty_src_config_formatter.zig_expectedoutput.txt (expected):tmp/tmpzcdg2glx_expected.txt	
+++ b/ghostty_src_config_formatter.zig_extracted.txt (actual):tmp/tmpsu0eub3p_actual.txt	
@@ -296,43 +296,4 @@ test "formatEntry void" {
 test "formatEntry optional" {
     const testing = std.testing;
 
-    {
-        var buf = std.ArrayList(u8).init(testing.allocator);
-        defer buf.deinit();
-        try formatEntry(?bool, "a", null, buf.writer());
-        try testing.expectEqualStrings("a = \n", buf.items);
-    }
-
-    {
-        var buf = std.ArrayList(u8).init(testing.allocator);
-        defer buf.deinit();
-        try formatEntry(?bool, "a", false, buf.writer());
-        try testing.expectEqualStrings("a = false\n", buf.items);
-    }
-}
-
-test "formatEntry string" {
-    const testing = std.testing;
-
-    {
-        var buf = std.ArrayList(u8).init(testing.allocator);
-        defer buf.deinit();
-        try formatEntry([]const u8, "a", "hello", buf.writer());
-        try testing.expectEqualStrings("a = hello\n", buf.items);
-    }
-}
-
-test "formatEntry packed struct" {
-    const testing = std.testing;
-    const Value = packed struct {
-        one: bool = true,
-        two: bool = false,
-    };
-
-    {
-        var buf = std.ArrayList(u8).init(testing.allocator);
-        defer buf.deinit();
-        try formatEntry(Value, "a", .{}, buf.writer());
-        try testing.expectEqualStrings("a = one,no-two\n", buf.items);
-    }
-}
\ No newline at end of file
+    {
\ No newline at end of file
