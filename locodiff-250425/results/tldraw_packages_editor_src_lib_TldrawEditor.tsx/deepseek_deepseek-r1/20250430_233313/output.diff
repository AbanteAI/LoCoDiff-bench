--- tldraw_packages_editor_src_lib_TldrawEditor.tsx_expectedoutput.txt (expected)+++ tldraw_packages_editor_src_lib_TldrawEditor.tsx_extracted.txt (actual)@@ -149,16 +149,6 @@ 	initialState?: string
 
 	/**
-	 * A classname to pass to the editor's container.
-	 */
-	className?: string
-
-	/**
-	 * The user interacting with the editor.
-	 */
-	user?: TLUser
-
-	/**
 	 * Whether to infer dark mode from the user's OS. Defaults to false.
 	 */
 	inferDarkMode?: boolean
@@ -223,6 +213,16 @@ 	 * The URLs for the fonts to use in the editor.
 	 */
 	assetUrls?: { fonts?: { [key: string]: string | undefined } }
+
+	/**
+	 * A classname to pass to the editor's container.
+	 */
+	className?: string
+
+	/**
+	 * The user interacting with the editor.
+	 */
+	user?: TLUser
 }
 
 /**
@@ -617,8 +617,8 @@ 	return (
 		// the top-level tldraw component also renders an error boundary almost
 		// identical to this one. the reason we have two is because this one has
-		// access to `App`, which means that here we can enrich errors with data
-		// from app for reporting, and also still attempt to render the user's
+		// access to `Editor`, which means that here we can enrich errors with data
+		// from editor for reporting, and also still attempt to render the user's
 		// document in the event of an error to reassure them that their work is
 		// not lost.
 		<OptionalErrorBoundary
@@ -639,7 +639,7 @@ 			)}
 		</OptionalErrorBoundary>
 	)
-}
+})
 
 function Layout({ children, onMount }: { children: ReactNode; onMount?: TLOnMountHandler }) {
 	useZoomCss()
