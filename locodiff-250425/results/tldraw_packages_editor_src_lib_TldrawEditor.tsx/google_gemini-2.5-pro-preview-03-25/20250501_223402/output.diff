--- tldraw_packages_editor_src_lib_TldrawEditor.tsx_expectedoutput.txt (expected)+++ tldraw_packages_editor_src_lib_TldrawEditor.tsx_extracted.txt (actual)@@ -14,6 +14,7 @@ } from 'react'
 
 import classNames from 'classnames'
+import { TLDeepLinkOptions } from '..'
 import { version } from '../version'
 import { OptionalErrorBoundary } from './components/ErrorBoundary'
 import { DefaultErrorFallback } from './components/default-components/DefaultErrorFallback'
@@ -43,7 +44,7 @@ import { LicenseProvider } from './license/LicenseProvider'
 import { Watermark } from './license/Watermark'
 import { TldrawOptions } from './options'
-import { TLDeepLinkOptions } from './utils/deepLinks'
+import { TLDeepLinkOptions as DeepLinkOptionsProp } from './utils/deepLinks'
 import { stopEventPropagation } from './utils/dom'
 import { TLTextOptions } from './utils/richText'
 import { TLStoreWithStatus } from './utils/sync/StoreWithStatus'
@@ -186,7 +187,7 @@ 	/**
 	 * Options for syncing the editor's camera state with the URL.
 	 */
-	deepLinks?: true | TLDeepLinkOptions
+	deepLinks?: true | DeepLinkOptionsProp
 
 	/**
 	 * Predicate for whether or not a shape should be hidden.
@@ -617,8 +618,8 @@ 	return (
 		// the top-level tldraw component also renders an error boundary almost
 		// identical to this one. the reason we have two is because this one has
-		// access to `App`, which means that here we can enrich errors with data
-		// from app for reporting, and also still attempt to render the user's
+		// access to `Editor`, which means that here we can enrich errors with data
+		// from editor for reporting, and also still attempt to render the user's
 		// document in the event of an error to reassure them that their work is
 		// not lost.
 		<OptionalErrorBoundary
