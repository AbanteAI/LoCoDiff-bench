
index fb7399b5..78542e99 100644
--- a/tldraw_packages_editor_src_lib_TldrawEditor.tsx_expectedoutput.txt (expected):tmp/tmp_1i7pm69_expected.txt	
+++ b/tldraw_packages_editor_src_lib_TldrawEditor.tsx_extracted.txt (actual):tmp/tmpl1psnqyi_actual.txt	
@@ -168,6 +168,12 @@ export interface TldrawEditorBaseProps {
 	 */
 	cameraOptions?: Partial<TLCameraOptions>
 
+	/**
+	 * Asset options for the editor.
+	 * @internal
+	 */
+	assetOptions?: Partial<TLAssetOptions>
+
 	/**
 	 * Text options for the editor.
 	 */
@@ -393,6 +399,11 @@ const TldrawEditorWithLoadingStore = memo(function TldrawEditorBeforeLoading({
 	return <TldrawEditorWithReadyStore {...rest} store={store.store} user={user} />
 })
 
+// For our examples site, we want autoFocus to be true on the examples site, but not
+// when embedded in our docs site. If present, the `tldraw_preserve_focus` search param
+// overrides the `autoFocus` prop and prevents the editor from focusing immediately,
+// however here we also add some logic to focus the editor when the user clicks
+// on it and unfocus it when the user clicks away from it.
 const noAutoFocus = () => document.location.search.includes('tldraw_preserve_focus') // || !document.hasFocus() // breaks in nextjs
 
 function TldrawEditorWithReadyStore({
@@ -443,16 +454,6 @@ function TldrawEditorWithReadyStore({
 		deepLinks,
 	})
 
-	useLayoutEffect(() => {
-		editorOptionsRef.current = {
-			autoFocus: autoFocus && !noAutoFocus(),
-			inferDarkMode,
-			initialState,
-			cameraOptions,
-			deepLinks,
-		}
-	}, [autoFocus, inferDarkMode, initialState, cameraOptions, deepLinks])
-
 	useLayoutEffect(
 		() => {
 			const { autoFocus, inferDarkMode, initialState, cameraOptions, deepLinks } =
@@ -529,22 +530,6 @@ function TldrawEditorWithReadyStore({
 		}
 	}, [editor, cameraOptions])
 
-	const crashingError = useSyncExternalStore(
-		useCallback(
-			(onStoreChange) => {
-				if (editor) {
-					editor.on('crash', onStoreChange)
-					return () => editor.off('crash', onStoreChange)
-				}
-				return () => {
-					// noop
-				}
-			},
-			[editor]
-		),
-		() => editor?.getCrashingError() ?? null
-	)
-
 	// For our examples site, we want autoFocus to be true on the examples site, but not
 	// when embedded in our docs site. If present, the `tldraw_preserve_focus` search param
 	// overrides the `autoFocus` prop and prevents the editor from focusing immediately,
@@ -565,7 +550,7 @@ function TldrawEditorWithReadyStore({
 			}
 
 			if (autoFocus && noAutoFocus()) {
-				editor.getContainer().addEventListener('pointerdown', handleFocusOnPointerDown)
+				editor.getContainer()?.addEventListener('pointerdown', handleFocusOnPointerDown)
 				document.body.addEventListener('pointerdown', handleBlurOnPointerDown)
 
 				return () => {
@@ -615,12 +600,6 @@ function TldrawEditorWithReadyStore({
 	}
 
 	return (
-		// the top-level tldraw component also renders an error boundary almost
-		// identical to this one. the reason we have two is because this one has
-		// access to `App`, which means that here we can enrich errors with data
-		// from app for reporting, and also still attempt to render the user's
-		// document in the event of an error to reassure them that their work is
-		// not lost.
 		<OptionalErrorBoundary
 			fallback={ErrorFallback as any}
 			onError={(error) =>
@@ -663,7 +642,7 @@ function Crash({ crashingError }: { crashingError: unknown }): null {
 	throw crashingError
 }
 
-/** @public */
+/** @public @react */
 export interface LoadingScreenProps {
 	children: ReactNode
 }
