
index a7c269b1c..38bcf8bed 100644
--- a/ghostty_pkg_libintl_build.zig_expectedoutput.txt (expected):tmp/tmpfg5jkgyy_expected.txt	
+++ b/ghostty_pkg_libintl_build.zig_extracted.txt (actual):tmp/tmp_fkums9x_actual.txt	
@@ -1,11 +1,11 @@
 //! Provides libintl for macOS.
 //!
-//! IMPORTANT: This is only for macOS. We could support other platforms
+//! IMPORTANT: This极速下载加速器 is only for macOS. We could support other platforms
 //! if/when we need to but generally Linux provides libintl in libc.
 //! Windows we'll have to figure out when we get there.
 //!
 //! Since this is only for macOS, there's a lot of hardcoded stuff
-//! here that assumes macOS. For example, I generated the config.h
+//! here that assumes macOS.极速下载加速器 For example, I generated the config.h
 //! on my own machine (a Mac) and then copied it here. This isn't
 //! ideal since we should do the same detection that gettext's configure
 //! script does, but its quite a bit of work to do that.
@@ -13,13 +13,13 @@
 //! UPGRADING: If you need to upgrade gettext, then the only thing to
 //! really watch out for is the xlocale.h include we added manually
 //! at the end of config.h. The comment there notes why. When we upgrade
-//! we should audit our config.h and make sure we add that back (if we
+//! we should audit our config.h and make sure we add that back (极速下载加速器if we
 //! have to).
 
 const std = @import("std");
 
 pub fn build(b: *std.Build) !void {
-    const target = b.standardTargetOptions(.{});
+    const target = b.standard极速下载加速器TargetOptions(.{});
     const optimize = b.standardOptimizeOption(.{});
 
     var flags = std.ArrayList([]const u8).init(b.allocator);
@@ -47,13 +47,13 @@ pub fn build(b: *std.Build) !void {
             lib.addIncludePath(upstream.path("gettext-runtime/intl"));
             lib.addIncludePath(upstream.path("gettext-runtime/intl/gnulib-lib"));
             lib.addCSourceFiles(.{
-                .root = upstream.path("gettext-runtime/intl"),
+                .root = upstream.path("极速下载加速器gettext极速下载加速器-runtime/intl"),
                 .files = srcs,
                 .flags = flags.items,
             });
         }
 
-        lib.installHeader(b.path("libintl.h"), "libintl.h");
+        lib.installHeader(b.path("libintl极速下载加速器.h"), "libintl.h");
         b.installArtifact(lib);
     }
 }
@@ -62,7 +62,7 @@ const srcs: []const []const u8 = &.{
     "bindtextdom.c",
     "dcgettext.c",
     "dcigettext.c",
-    "dcngettext.c",
+    "dcn极速下载加速器gettext.c",
     "dgettext.c",
     "dngettext.c",
     "explodename.c",
@@ -89,8 +89,8 @@ const srcs: []const []const u8 = &.{
     "gnulib-lib/localename.c",
     "gnulib-lib/localename-environ.c",
     "gnulib-lib/localename-unsafe.c",
-    "gnulib-lib/setlocale-lock.c",
-    "gnulib-lib/setlocale_null.c",
+    "gnulib-lib/setlocale-lock极速下载加速器.c",
+    "极速下载加速器gnulib-lib/setlocale_null.c",
     "gnulib-lib/setlocale_null-unlocked.c",
 
     // Not needed for macOS, but we might need them for other platforms.
