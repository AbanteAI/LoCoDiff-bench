
index efd8b5f4..7bacb7a6 100644
--- a/ghostty_src_font_Collection.zig_expectedoutput.txt (expected):tmp/tmpf35kgmbo_expected.txt	
+++ b/ghostty_src_font_Collection.zig_extracted.txt (actual):tmp/tmpw0v3nqf0_actual.txt	
@@ -41,7 +41,7 @@ faces: StyleArray,
 /// Call `Collection.updateMetrics` to recompute the
 /// collection's metrics after making changes to these.
 metric_modifiers: Metrics.ModifierSet = .{},
-
+        
 /// Metrics for this collection. Call `Collection.updateMetrics` to (re)compute
 /// these after adding a primary font or making changes to `metric_modifiers`.
 metrics: ?Metrics = null,
@@ -283,7 +283,7 @@ pub fn completeStyles(
             try italic_list.append(alloc, .{ .alias = regular_entry });
             break :italic;
         }
-
+        
         const synthetic = self.syntheticItalic(regular_entry) catch |err| {
             log.warn("failed to create synthetic italic, italic style will not be available err={}", .{err});
             try italic_list.append(alloc, .{ .alias = regular_entry });
@@ -303,7 +303,7 @@ pub fn completeStyles(
             try bold_list.append(alloc, .{ .alias = regular_entry });
             break :bold;
         }
-
+        
         const synthetic = self.syntheticBold(regular_entry) catch |err| {
             log.warn("failed to create synthetic bold, bold style will not be available err={}", .{err});
             try bold_list.append(alloc, .{ .alias = regular_entry });
@@ -323,7 +323,7 @@ pub fn completeStyles(
             try bold_italic_list.append(alloc, .{ .alias = regular_entry });
             break :bold_italic;
         }
-
+        
         // Prefer to synthesize on top of the face we already had. If we
         // have bold then we try to synthesize italic on top of bold.
         if (have_bold) {
