--- aider_aider_onboarding.py_expectedoutput.txt (expected)+++ aider_aider_onboarding.py_extracted.txt (actual)@@ -87,7 +87,6 @@     Returns:
         True if authentication was successful, False otherwise.
     """
-    # No API keys found - Offer OpenRouter OAuth
     io.tool_output("OpenRouter provides free and paid access to many LLMs.")
     # Use confirm_ask which handles non-interactive cases
     if io.confirm_ask(
@@ -97,10 +96,7 @@         analytics.event("oauth_flow_initiated", provider="openrouter")
         openrouter_key = start_openrouter_oauth_flow(io, analytics)
         if openrouter_key:
-            # Successfully got key via OAuth, use the default OpenRouter model
-            # Ensure OPENROUTER_API_KEY is now set in the environment for later use
-            os.environ["OPENROUTER_API_KEY"] = openrouter_key
-            # Track OAuth success leading to model selection
+            # Successfully got key via OAuth
             analytics.event("oauth_flow_success")
             return True
 
@@ -243,7 +239,6 @@                         b"You can close this browser tab.</p></body></html>"
                     )
                     # Signal the main thread to shut down the server
-                    # Signal the main thread to shut down the server
                     shutdown_server.set()
                 else:
                     # Redirect to aider website if 'code' is missing (e.g., user visited manually)
@@ -257,7 +252,6 @@                 self.send_response(302)
                 self.send_header("Location", urls.website)
                 self.end_headers()
-                self.wfile.write(b"Not Found")
 
         def log_message(self, format, *args):
             # Suppress server logging to keep terminal clean
