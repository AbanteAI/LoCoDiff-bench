
index 01d9cdcba..c1d610b8b 100644
--- a/aider_aider_onboarding.py_expectedoutput.txt (expected):tmp/tmpeks_37u5_expected.txt	
+++ b/aider_aider_onboarding.py_extracted.txt (actual):tmp/tmpnoqj495e_actual.txt	
@@ -87,7 +87,6 @@ def offer_openrouter_oauth(io, analytics):
     Returns:
         True if authentication was successful, False otherwise.
     """
-    # No API keys found - Offer OpenRouter OAuth
     io.tool_output("OpenRouter provides free and paid access to many LLMs.")
     # Use confirm_ask which handles non-interactive cases
     if io.confirm_ask(
@@ -97,10 +96,9 @@ def offer_openrouter_oauth(io, analytics):
         analytics.event("oauth_flow_initiated", provider="openrouter")
         openrouter_key = start_openrouter_oauth_flow(io, analytics)
         if openrouter_key:
-            # Successfully got key via OAuth, use the default OpenRouter model
+            # Successfully got key via OAuth
             # Ensure OPENROUTER_API_KEY is now set in the environment for later use
             os.environ["OPENROUTER_API_KEY"] = openrouter_key
-            # Track OAuth success leading to model selection
             analytics.event("oauth_flow_success")
             return True
 
@@ -109,7 +107,6 @@ def offer_openrouter_oauth(io, analytics):
         analytics.event("oauth_flow_failure")
         io.tool_error("OpenRouter authentication did not complete successfully.")
         # Fall through to the final error message
-
     return False
 
 
