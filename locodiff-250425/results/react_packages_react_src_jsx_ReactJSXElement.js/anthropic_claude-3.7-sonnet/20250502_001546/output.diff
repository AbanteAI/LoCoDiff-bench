--- react_packages_react_src_jsx_ReactJSXElement.js_expectedoutput.txt (expected)+++ react_packages_react_src_jsx_ReactJSXElement.js_extracted.txt (actual)@@ -237,22 +237,7 @@         value: null,
       });
     }
-  } else {
-    // In prod, `ref` is a regular property and _owner doesn't exist.
-    element = {
-      // This tag allows us to uniquely identify this as a React Element
-      $$typeof: REACT_ELEMENT_TYPE,
-
-      // Built-in properties that belong on the element
-      type,
-      key,
-      ref,
-
-      props,
-    };
-  }
-
-  if (__DEV__) {
+
     // The validation flag is currently mutative. We put it on
     // an external backing store so that we can freeze the whole object.
     // This can be replaced with a WeakMap once they are implemented in
@@ -292,6 +277,19 @@       Object.freeze(element.props);
       Object.freeze(element);
     }
+  } else {
+    // In prod, `ref` is a regular property and _owner doesn't exist.
+    element = {
+      // This tag allows us to uniquely identify this as a React Element
+      $$typeof: REACT_ELEMENT_TYPE,
+
+      // Built-in properties that belong on the element
+      type,
+      key,
+      ref,
+
+      props,
+    };
   }
 
   return element;
@@ -379,9 +377,6 @@ // support `jsx` and `jsxs` when running in development. This supports the case
 // where a third-party dependency ships code that was compiled for production;
 // we want to still provide warnings in development.
-//
-// So these functions are the _dev_ implementations of the _production_
-// API signatures.
 //
 // Since these functions are dev-only, it's ok to add an indirection here. They
 // only exist to provide different versions of `isStaticChildren`. (We shouldn't
