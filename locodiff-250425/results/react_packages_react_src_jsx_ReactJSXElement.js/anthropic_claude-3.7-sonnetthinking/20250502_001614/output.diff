
index 43e688b1..30423c8c 100644
--- a/react_packages_react_src_jsx_ReactJSXElement.js_expectedoutput.txt (expected):tmp/tmpk128f8gs_expected.txt	
+++ b/react_packages_react_src_jsx_ReactJSXElement.js_extracted.txt (actual):tmp/tmp2g8_oank_actual.txt	
@@ -16,10 +16,7 @@ import {
 } from 'shared/ReactSymbols';
 import {checkKeyStringCoercion} from 'shared/CheckStringCoercion';
 import isArray from 'shared/isArray';
-import {
-  disableDefaultPropsExceptForClasses,
-  ownerStackLimit,
-} from 'shared/ReactFeatureFlags';
+import {disableDefaultPropsExceptForClasses} from 'shared/ReactFeatureFlags';
 
 const createTask =
   // eslint-disable-next-line react-internal/no-production-logging
@@ -160,17 +157,16 @@ function elementRefGetterWithDeprecationWarning() {
  * if something is a React Element.
  *
  * @param {*} type
- * @param {*} props
  * @param {*} key
- * @param {string|object} ref
- * @param {*} owner
- * @param {*} self A *temporary* helper to detect places where `this` is
+ * @param {string|object} self A *temporary* helper to detect places where `this` is
  * different from the `owner` when React.createElement is called, so that we
  * can warn. We want to get rid of owner and replace string `ref`s with arrow
  * functions, and as long as `this` and owner are the same, there will be no
  * change in behavior.
  * @param {*} source An annotation object (added by a transpiler or otherwise)
  * indicating filename, line number, and/or other information.
+ * @param {*} owner
+ * @param {*} props
  * @internal
  */
 function ReactElement(
@@ -237,22 +233,7 @@ function ReactElement(
         value: null,
       });
     }
-  } else {
-    // In prod, `ref` is a regular property and _owner doesn't exist.
-    element = {
-      // This tag allows us to uniquely identify this as a React Element
-      $$typeof: REACT_ELEMENT_TYPE,
-
-      // Built-in properties that belong on the element
-      type,
-      key,
-      ref,
-
-      props,
-    };
-  }
 
-  if (__DEV__) {
     // The validation flag is currently mutative. We put it on
     // an external backing store so that we can freeze the whole object.
     // This can be replaced with a WeakMap once they are implemented in
@@ -292,6 +273,19 @@ function ReactElement(
       Object.freeze(element.props);
       Object.freeze(element);
     }
+  } else {
+    // In prod, `ref` is a regular property and _owner doesn't exist.
+    element = {
+      // This tag allows us to uniquely identify this as a React Element
+      $$typeof: REACT_ELEMENT_TYPE,
+
+      // Built-in properties that belong on the element
+      type,
+      key,
+      ref,
+
+      props,
+    };
   }
 
   return element;
@@ -818,11 +812,7 @@ export function cloneElement(element, config, children) {
 
     // Remaining properties override existing props
     let defaultProps;
-    if (
-      !disableDefaultPropsExceptForClasses &&
-      element.type &&
-      element.type.defaultProps
-    ) {
+    if (element.type && element.type.defaultProps) {
       defaultProps = element.type.defaultProps;
     }
     for (propName in config) {
@@ -888,6 +878,21 @@ export function cloneElement(element, config, children) {
   return clonedElement;
 }
 
+/**
+ * Verifies the object is a ReactElement.
+ * See https://reactjs.org/docs/react-api.html#isvalidelement
+ * @param {?object} object
+ * @return {boolean} True if `object` is a ReactElement.
+ * @final
+ */
+export function isValidElement(object) {
+  return (
+    typeof object === 'object' &&
+    object !== null &&
+    object.$$typeof === REACT_ELEMENT_TYPE
+  );
+}
+
 /**
  * Ensure that every element either is passed in a static location, in an
  * array with an explicit keys property defined, or in an object literal
@@ -908,19 +913,4 @@ function validateChildKeys(node, parentType) {
       }
     }
   }
-}
-
-/**
- * Verifies the object is a ReactElement.
- * See https://reactjs.org/docs/react-api.html#isvalidelement
- * @param {?object} object
- * @return {boolean} True if `object` is a ReactElement.
- * @final
- */
-export function isValidElement(object) {
-  return (
-    typeof object === 'object' &&
-    object !== null &&
-    object.$$typeof === REACT_ELEMENT_TYPE
-  );
 }
\ No newline at end of file
