
index 0a4e2d76..431f8225 100644
--- a/qdrant_lib_segment_src_index_field_index_map_index_mod.rs_expectedoutput.txt (expected):tmp/tmppihpn18k_expected.txt	
+++ b/qdrant_lib_segment_src_index_field_index_map_index_mod.rs_extracted.txt (actual):tmp/tmpmnggjmlv_actual.txt	
@@ -32,7 +32,6 @@ use crate::index::field_index::stat_tools::number_of_selected_points;
 use crate::index::field_index::{
     CardinalityEstimation, PayloadBlockCondition, PayloadFieldIndex, PrimaryCondition, ValueIndexer,
 };
-use crate::index::query_estimator::combine_should_estimations;
 use crate::telemetry::PayloadIndexTelemetry;
 use crate::types::{
     AnyVariants, FieldCondition, IntPayloadType, Match, MatchAny, MatchExcept, MatchValue,
@@ -302,14 +301,6 @@ impl<N: MapIndexKey + ?Sized> MapIndex<N> {
         }
     }
 
-    fn files(&self) -> Vec<PathBuf> {
-        match self {
-            MapIndex::Mutable(_) => Vec::new(),
-            MapIndex::Immutable(_) => Vec::new(),
-            MapIndex::Mmap(index) => index.files(),
-        }
-    }
-
     /// Estimates cardinality for `except` clause
     ///
     /// # Arguments
@@ -895,7 +886,7 @@ impl PayloadFieldIndex for MapIndex<UuidIntType> {
                             .unwrap_or(0),
                     )
                 })
-                .filter(move |(_value, count)| *count >= threshold)
+                .filter(move |(_value, count)| *count > threshold)
                 .map(move |(value, count)| PayloadBlockCondition {
                     condition: FieldCondition::new_match(
                         key.clone(),
