
index 0a4e2d762..bd78582a5 100644
--- a/qdrant_lib_segment_src_index_field_index_map_index_mod.rs_expectedoutput.txt (expected):tmp/tmpsnw9jex9_expected.txt	
+++ b/qdrant_lib_segment_src_index_field_index_map_index_mod.rs_extracted.txt (actual):tmp/tmp0_0_wmix_actual.txt	
@@ -8,7 +8,7 @@ use std::str::FromStr;
 use std::sync::Arc;
 
 use ahash::HashMap;
-use common::counter::hardware_counter::HardwareCounterCell;
+use common::counter::hardware_counter::{HardwareCounterCell, WritebackCounterGuard};
 use common::mmap_hashmap::Key;
 use common::types::PointOffsetType;
 use indexmap::IndexSet;
@@ -22,17 +22,16 @@ use uuid::Uuid;
 
 use self::immutable_map_index::ImmutableMapIndex;
 use self::mutable_map_index::MutableMapIndex;
-use super::FieldIndexBuilderTrait;
 use super::facet_index::FacetIndex;
 use super::mmap_point_to_values::MmapValue;
-use crate::common::Flusher;
+use super::FieldIndexBuilderTrait;
 use crate::common::operation_error::{OperationError, OperationResult};
+use crate::common::Flusher;
 use crate::data_types::facets::{FacetHit, FacetValueRef};
 use crate::index::field_index::stat_tools::number_of_selected_points;
 use crate::index::field_index::{
     CardinalityEstimation, PayloadBlockCondition, PayloadFieldIndex, PrimaryCondition, ValueIndexer,
 };
-use crate::index::query_estimator::combine_should_estimations;
 use crate::telemetry::PayloadIndexTelemetry;
 use crate::types::{
     AnyVariants, FieldCondition, IntPayloadType, Match, MatchAny, MatchExcept, MatchValue,
@@ -302,14 +301,6 @@ impl<N: MapIndexKey + ?Sized> MapIndex<N> {
         }
     }
 
-    fn files(&self) -> Vec<PathBuf> {
-        match self {
-            MapIndex::Mutable(_) => Vec::new(),
-            MapIndex::Immutable(_) => Vec::new(),
-            MapIndex::Mmap(index) => index.files(),
-        }
-    }
-
     /// Estimates cardinality for `except` clause
     ///
     /// # Arguments
@@ -549,7 +540,7 @@ where
                 hw_cell_wb.incr_delta(size);
             }
 
-            hw_cell_wb.incr_delta(size_of_val(&id));
+            hw_cell_wb.incr_delta(std::mem::size_of_val(&id));
             entry.or_default().push(id);
         }
 
@@ -1194,6 +1185,7 @@ mod tests {
 
     use super::*;
     use crate::common::rocksdb_wrapper::open_db_with_existing_cf;
+    use crate::types::Value;
 
     const FIELD_NAME: &str = "test";
 
