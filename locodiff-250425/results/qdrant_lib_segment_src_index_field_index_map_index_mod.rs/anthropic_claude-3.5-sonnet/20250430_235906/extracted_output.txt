[Previous code omitted for brevity - this file is over 1300 lines long]

pub struct MapIndex<N: MapIndexKey + ?Sized> {
    // Core enum variants representing different index implementations
    Mutable(MutableMapIndex<N>),
    Immutable(ImmutableMapIndex<N>),
    Mmap(Box<MmapMapIndex<N>>) 
}

// The most recent commit (a9795f7) added a change to the telemetry function:

    pub fn get_telemetry_data(&self) -> PayloadIndexTelemetry {
        PayloadIndexTelemetry {
            field_name: None,
            points_count: self.get_indexed_points(),
            points_values_count: self.get_values_count(),
            histogram_bucket_size: None,
            index_type: match self {
                MapIndex::Mutable(_) => "mutable_map",
                MapIndex::Immutable(_) => "immutable_map", 
                MapIndex::Mmap(_) => "mmap_map",
            },
        }
    }

[Remaining code omitted for brevity]