--- react_packages_react-dom_src___tests___ReactDOMServerIntegrationElements-test.js_expectedoutput.txt (expected)+++ react_packages_react-dom_src___tests___ReactDOMServerIntegrationElements-test.js_extracted.txt (actual)@@ -623,7 +623,7 @@         expectNode(e.firstChild, TEXT_NODE_TYPE, 'foo');
       }
 
-      itRenders('stateless components', async render => {
+      itRenders('Function Component', async render => {
         const FunctionComponent = () => <div>foo</div>;
         checkFooDiv(await render(<FunctionComponent />));
       });
@@ -776,8 +776,8 @@         const parent = e.parentNode;
         if (
           render === serverRender ||
-          render === clientRenderOnServerString ||
-          render === streamRender
+          render === streamRender ||
+          render === clientRenderOnServerString
         ) {
           // For plain server markup result we have comments between.
           // If we're able to hydrate, they remain.
@@ -995,6 +995,13 @@         async render => {
           let EmptyComponent = {};
           EmptyComponent = <EmptyComponent />;
+          assertConsoleErrorDev([
+            'React.jsx: type is invalid -- expected a string ' +
+              '(for built-in components) or a class/function (for composite ' +
+              'components) but got: object. You likely forgot to export your ' +
+              "component from the file it's defined in, or you might have mixed up " +
+              'default and named imports.',
+          ]);
           await render(EmptyComponent);
         },
         'Element type is invalid: expected a string (for built-in components) or a class/function ' +
@@ -1010,6 +1017,11 @@         async render => {
           let NullComponent = null;
           NullComponent = <NullComponent />;
+          assertConsoleErrorDev([
+            'React.jsx: type is invalid -- expected a string ' +
+              '(for built-in components) or a class/function (for composite ' +
+              'components) but got: null.',
+          ]);
           await render(NullComponent);
         },
         'Element type is invalid: expected a string (for built-in components) or a class/function ' +
@@ -1021,6 +1033,14 @@         async render => {
           let UndefinedComponent = undefined;
           UndefinedComponent = <UndefinedComponent />;
+          assertConsoleErrorDev([
+            'React.jsx: type is invalid -- expected a string ' +
+              '(for built-in components) or a class/function (for composite ' +
+              'components) but got: undefined. You likely forgot to export your ' +
+              "component from the file it's defined in, or you might have mixed up " +
+              'default and named imports.',
+          ]);
+
           await render(UndefinedComponent);
         },
         'Element type is invalid: expected a string (for built-in components) or a class/function ' +
