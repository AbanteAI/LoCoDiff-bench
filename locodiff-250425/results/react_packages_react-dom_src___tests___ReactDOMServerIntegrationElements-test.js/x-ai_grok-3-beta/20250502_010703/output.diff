--- react_packages_react-dom_src___tests___ReactDOMServerIntegrationElements-test.js_expectedoutput.txt (expected)+++ react_packages_react-dom_src___tests___ReactDOMServerIntegrationElements-test.js_extracted.txt (actual)@@ -258,8 +258,8 @@         );
         if (
           render === serverRender ||
-          render === streamRender ||
-          render === clientRenderOnServerString
+          render === clientRenderOnServerString ||
+          render === streamRender
         ) {
           // In the server render output there's comments between text nodes.
           expect(e.childNodes.length).toBe(5);
@@ -578,24 +578,6 @@       },
     );
 
-    itRenders('a noscript with children', async render => {
-      const e = await render(
-        <noscript>
-          <div>Enable JavaScript to run this app.</div>
-        </noscript>,
-      );
-      if (render === clientCleanRender) {
-        // On the client we ignore the contents of a noscript
-        expect(e.childNodes.length).toBe(0);
-      } else {
-        // On the server or when hydrating the content should be correct
-        expect(e.childNodes.length).toBe(1);
-        expect(e.firstChild.textContent).toBe(
-          '<div>Enable JavaScript to run this app.</div>',
-        );
-      }
-    });
-
     describe('newline-eating elements', function () {
       itRenders(
         'a newline-eating tag with content not starting with \\n',
@@ -848,7 +830,6 @@             expect(e.childNodes.length).toBe(1);
             // Client rendering uses JS value with CR.
             // Null character stays.
-
             expectNode(
               e.childNodes[0],
               TEXT_NODE_TYPE,
@@ -882,7 +863,6 @@             // We have three nodes because there is a comment between them.
             expect(e.childNodes.length).toBe(3);
             // Hydration uses JS value with CR and null character.
-
             expectNode(e.childNodes[0], TEXT_NODE_TYPE, 'foo\rbar');
             expectNode(e.childNodes[2], TEXT_NODE_TYPE, '\r\nbaz\nqux\u0000');
           } else {
