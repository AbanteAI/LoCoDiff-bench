--- aider_benchmark_over_time.py_expectedoutput.txt (expected)+++ aider_benchmark_over_time.py_extracted.txt (actual)@@ -119,16 +119,22 @@             ax.scatter(dates, rates, c=color, alpha=0.5, s=120)
 
             # Add label for first point
-            first_model = sorted_group[0]
-            ax.annotate(
-                first_model.legend_label,
-                (first_model.release_date, first_model.pass_rate),
-                xytext=(10, 5),
-                textcoords="offset points",
-                color=color,
-                alpha=0.8,
-                fontsize=self.LABEL_FONT_SIZE,
-            )
+            if sorted_group:
+                first_model = sorted_group[0]
+                # Adjust xytext based on color for better label placement
+                xytext = (10, 5)
+                if color in ["brown", "cyan"]: # Brown and Cyan seem to need lower labels
+                    xytext = (10, -10)
+
+                ax.annotate(
+                    first_model.legend_label,
+                    (first_model.release_date, first_model.pass_rate),
+                    xytext=xytext,
+                    textcoords="offset points",
+                    color=color,
+                    alpha=0.8,
+                    fontsize=self.LABEL_FONT_SIZE,
+                )
 
     def set_labels_and_style(self, ax: plt.Axes):
         ax.set_xlabel("Model release date", fontsize=18, color="#555")
