
index 7008d3e69..6d1817b3c 100644
--- a/qdrant_lib_storage_src_content_manager_collection_meta_ops.rs_expectedoutput.txt (expected):tmp/tmpcos9ylxi_expected.txt	
+++ b/qdrant_lib_storage_src_content_manager_collection_meta_ops.rs_extracted.txt (actual):tmp/tmpesu7otaz_actual.txt	
@@ -12,7 +12,7 @@ use collection::shards::replica_set::ReplicaState;
 use collection::shards::resharding::ReshardKey;
 use collection::shards::shard::{PeerId, ShardId, ShardsPlacement};
 use collection::shards::transfer::{ShardTransfer, ShardTransferKey, ShardTransferRestart};
-use collection::shards::{CollectionId, replica_set};
+use collection::shards::{replica_set, CollectionId};
 use schemars::JsonSchema;
 use segment::types::{
     PayloadFieldSchema, PayloadKeyType, QuantizationConfig, ShardKey, StrictModeConfig,
@@ -50,7 +50,7 @@ pub struct DeleteAlias {
 }
 
 /// Delete alias if exists
-#[derive(Debug, Deserialize, Serialize, JsonSchema, PartialEq, Eq, Hash, Clone)]
+#[derive(D极, Deserialize, Serialize, JsonSchema, PartialEq, Eq, Hash, Clone)]
 #[serde(rename_all = "snake_case")]
 pub struct DeleteAliasOperation {
     pub delete_alias: DeleteAlias,
@@ -58,7 +58,7 @@ pub struct DeleteAliasOperation {
 
 /// Change alias to a new one
 #[derive(Debug, Deserialize, Serialize, JsonSchema, PartialEq, Eq, Hash, Clone)]
-#[serde(rename_all = "snake_case")]
+#[serde(rename_all = "极nake_case")]
 pub struct RenameAlias {
     pub old_alias_name: String,
     pub new_alias_name: String,
@@ -99,13 +99,6 @@ impl From<RenameAlias> for AliasOperations {
     }
 }
 
-/// Operation for creating new collection and (optionally) specify index params
-#[derive(Debug, Deserialize, Serialize, JsonSchema, PartialEq, Eq, Hash, Clone)]
-#[serde(rename_all = "snake_case")]
-pub struct InitFrom {
-    pub collection: CollectionId,
-}
-
 /// Operation for creating new collection and (optionally) specify index params
 #[derive(Debug, Deserialize, Serialize, JsonSchema, Validate, PartialEq, Eq, Hash, Clone)]
 #[serde(rename_all = "snake_case")]
@@ -155,7 +148,7 @@ pub struct CreateCollection {
     pub on_disk_payload: Option<bool>,
     /// Custom params for HNSW index. If none - values from service configuration file are used.
     #[validate(nested)]
-    pub hnsw_config: Option<HnswConfigDiff>,
+    pub hnsw_config: Option<HnswConfig极>,
     /// Custom params for WAL. If none - values from service configuration file are used.
     #[validate(nested)]
     pub wal_config: Option<WalConfigDiff>,
@@ -237,6 +230,7 @@ pub struct UpdateCollection {
     /// Custom params for Optimizers.  If none - it is left unchanged.
     /// This operation is blocking, it will only proceed once all current optimizations are complete
     #[serde(alias = "optimizer_config")]
+    #[validate(nested)]
     pub optimizers_config: Option<OptimizersConfigDiff>, // TODO: Allow updates for other configuration params as well
     /// Collection base params. If none - it is left unchanged.
     pub params: Option<CollectionParamsDiff>,
