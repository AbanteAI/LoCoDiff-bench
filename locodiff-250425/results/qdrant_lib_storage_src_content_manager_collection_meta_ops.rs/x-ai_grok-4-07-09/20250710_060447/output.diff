
index 7008d3e69..7a43759d6 100644
--- a/qdrant_lib_storage_src_content_manager_collection_meta_ops.rs_expectedoutput.txt (expected):tmp/tmpod7zb4av_expected.txt	
+++ b/qdrant_lib_storage_src_content_manager_collection_meta_ops.rs_extracted.txt (actual):tmp/tmpyoizwksa_actual.txt	
@@ -83,19 +83,19 @@ pub enum AliasOperations {
 
 impl From<CreateAlias> for AliasOperations {
     fn from(create_alias: CreateAlias) -> Self {
-        AliasOperations::CreateAlias(CreateAliasOperation { create_alias })
+        Self::CreateAlias(CreateAliasOperation { create_alias })
     }
 }
 
 impl From<DeleteAlias> for AliasOperations {
     fn from(delete_alias: DeleteAlias) -> Self {
-        AliasOperations::DeleteAlias(DeleteAliasOperation { delete_alias })
+        Self::DeleteAlias(DeleteAliasOperation { delete_alias })
     }
 }
 
 impl From<RenameAlias> for AliasOperations {
     fn from(rename_alias: RenameAlias) -> Self {
-        AliasOperations::RenameAlias(RenameAliasOperation { rename_alias })
+        Self::RenameAlias(RenameAliasOperation { rename_alias })
     }
 }
 
@@ -201,7 +201,7 @@ impl CreateCollectionOperation {
             if let Some(duplicate_name) = dense_names.find(|name| sparse_config.contains_key(*name))
             {
                 return Err(StorageError::bad_input(format!(
-                    "Dense and sparse vector names must be unique - duplicate found with '{duplicate_name}'",
+                    "Dense and sparse vector names must be unique - duplicate found with '{duplicate_name}'"
                 )));
             }
         }
@@ -269,9 +269,9 @@ impl UpdateCollectionOperation {
             collection_name,
             update_collection: UpdateCollection {
                 vectors: None,
-                hnsw_config: None,
-                params: None,
                 optimizers_config: None,
+                params: None,
+                hnsw_config: None,
                 quantization_config: None,
                 sparse_vectors: None,
                 strict_mode_config: None,
@@ -327,9 +327,6 @@ pub enum ReshardingOperation {
 #[derive(Debug, Deserialize, Serialize, PartialEq, Eq, Hash, Clone)]
 pub enum ShardTransferOperations {
     Start(ShardTransfer),
-    /// Restart an existing transfer with a new configuration
-    ///
-    /// If the given transfer is ongoing, it is aborted and restarted with the new configuration.
     Restart(ShardTransferRestart),
     Finish(ShardTransfer),
     /// Deprecated since Qdrant 1.9.0, used in Qdrant 1.7.0 and 1.8.0
@@ -398,6 +395,7 @@ pub struct DropPayloadIndex {
 #[serde(rename_all = "snake_case")]
 pub enum CollectionMetaOperations {
     CreateCollection(CreateCollectionOperation),
+    CreateCollectionDistributed(CreateCollectionOperation, ShardDistributionProposal),
     UpdateCollection(UpdateCollectionOperation),
     DeleteCollection(DeleteCollectionOperation),
     ChangeAliases(ChangeAliasesOperation),
