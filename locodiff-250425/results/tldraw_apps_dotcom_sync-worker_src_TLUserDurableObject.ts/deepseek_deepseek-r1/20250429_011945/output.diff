--- tldraw_apps_dotcom_sync-worker_src_TLUserDurableObject.ts_expectedoutput.txt (expected)+++ tldraw_apps_dotcom_sync-worker_src_TLUserDurableObject.ts_extracted.txt (actual)@@ -62,7 +62,6 @@ 	}
 
 	private userId: string | null = null
-	private coldStartStartTime: number | null = null
 
 	readonly router = Router()
 		.all('/app/:userId/*', async (req) => {
@@ -76,7 +75,6 @@ 				throw new Error('Rate limited')
 			}
 			if (!this.cache) {
-				this.coldStartStartTime = Date.now()
 				this.log.debug('creating cache', this.userId)
 				this.cache = new UserDataSyncer(
 					this.ctx,
@@ -116,6 +114,8 @@ 		assert(this.cache, 'no cache')
 	}
 
+	private readonly sockets = new Set<WebSocket>()
+
 	interval: NodeJS.Timeout | null = null
 
 	private maybeStartInterval() {
@@ -138,8 +138,6 @@ 			}, 2000)
 		}
 	}
-
-	private readonly sockets = new Set<WebSocket>()
 
 	maybeReportColdStartTime(type: ZServerSentMessage['type']) {
 		if (type !== 'initial_data' || !this.coldStartStartTime) return
