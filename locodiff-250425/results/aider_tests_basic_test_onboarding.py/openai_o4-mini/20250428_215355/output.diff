
index ceab82fc..d8413fd3 100644
--- a/aider_tests_basic_test_onboarding.py_expectedoutput.txt (expected):tmp/tmp4zku6mlr_expected.txt	
+++ b/aider_tests_basic_test_onboarding.py_extracted.txt (actual):tmp/tmpfu49jgl9_actual.txt	
@@ -18,13 +18,11 @@ from aider.onboarding import (
     try_to_select_default_model,
 )
 
-
 # Mock the Analytics class as it's used in some functions
 class DummyAnalytics:
     def event(self, *args, **kwargs):
         pass
 
-
 # Mock the InputOutput class
 class DummyIO:
     def tool_output(self, *args, **kwargs):
@@ -42,8 +40,8 @@ class DummyIO:
     def offer_url(self, *args, **kwargs):
         pass
 
-
 class TestOnboarding(unittest.TestCase):
+
     @patch("requests.get")
     def test_check_openrouter_tier_free(self, mock_get):
         """Test check_openrouter_tier identifies free tier."""
@@ -375,7 +373,7 @@ class TestOnboarding(unittest.TestCase):
 
     # --- Tests for offer_openrouter_oauth ---
     @patch("aider.onboarding.start_openrouter_oauth_flow", return_value="new_or_key")
-    @patch.dict(os.environ, {}, clear=True)  # Ensure no key exists initially
+    @patch.dict(os.environ, {}, clear=True)
     def test_offer_openrouter_oauth_confirm_yes_success(self, mock_start_oauth):
         """Test offer_openrouter_oauth when user confirms and OAuth succeeds."""
         io_mock = DummyIO()
@@ -394,7 +392,7 @@ class TestOnboarding(unittest.TestCase):
         # Clean up env var
         del os.environ["OPENROUTER_API_KEY"]
 
-    @patch("aider.onboarding.start_openrouter_oauth_flow", return_value=None)  # OAuth fails
+    @patch("aider.onboarding.start_openrouter_oauth_flow", return_value=None)
     @patch.dict(os.environ, {}, clear=True)
     def test_offer_openrouter_oauth_confirm_yes_fail(self, mock_start_oauth):
         """Test offer_openrouter_oauth when user confirms but OAuth fails."""
@@ -431,9 +429,5 @@ class TestOnboarding(unittest.TestCase):
         mock_start_oauth.assert_not_called()
         analytics_mock.event.assert_not_called()  # No OAuth events if declined
 
-    # --- More complex test for start_openrouter_oauth_flow (simplified) ---
-    # This test focuses on the successful path, mocking heavily
-
-
 if __name__ == "__main__":
     unittest.main()
\ No newline at end of file
