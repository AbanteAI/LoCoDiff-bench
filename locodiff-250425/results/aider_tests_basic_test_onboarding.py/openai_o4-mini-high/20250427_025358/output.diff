
index ceab82fc..c0359756 100644
--- a/aider_tests_basic_test_onboarding.py_expectedoutput.txt (expected):tmp/tmpn4rxj3k__expected.txt	
+++ b/aider_tests_basic_test_onboarding.py_extracted.txt (actual):tmp/tmp11wlcbv__actual.txt	
@@ -7,7 +7,6 @@ from unittest.mock import MagicMock, patch
 
 import requests
 
-# Import the functions to be tested
 from aider.onboarding import (
     check_openrouter_tier,
     exchange_code_for_key,
@@ -286,8 +285,6 @@ class TestOnboarding(unittest.TestCase):
             f"Error exchanging code for OpenRouter key: {req_exception}"
         )
 
-    # --- Tests for select_default_model ---
-
     @patch("aider.onboarding.try_to_select_default_model", return_value="gpt-4o")
     @patch("aider.onboarding.offer_openrouter_oauth")
     def test_select_default_model_already_specified(self, mock_offer_oauth, mock_try_select):
@@ -321,7 +318,8 @@ class TestOnboarding(unittest.TestCase):
         mock_offer_oauth.assert_not_called()
 
     @patch(
-        "aider.onboarding.try_to_select_default_model", side_effect=[None, None]
+        "aider.onboarding.try_to_select_default_model",
+        side_effect=[None, None],
     )  # Fails first, fails after oauth attempt
     @patch(
         "aider.onboarding.offer_openrouter_oauth", return_value=False
@@ -373,7 +371,6 @@ class TestOnboarding(unittest.TestCase):
         # not try_select itself.
         # We verify the final state and model returned.
 
-    # --- Tests for offer_openrouter_oauth ---
     @patch("aider.onboarding.start_openrouter_oauth_flow", return_value="new_or_key")
     @patch.dict(os.environ, {}, clear=True)  # Ensure no key exists initially
     def test_offer_openrouter_oauth_confirm_yes_success(self, mock_start_oauth):
@@ -431,9 +428,6 @@ class TestOnboarding(unittest.TestCase):
         mock_start_oauth.assert_not_called()
         analytics_mock.event.assert_not_called()  # No OAuth events if declined
 
-    # --- More complex test for start_openrouter_oauth_flow (simplified) ---
-    # This test focuses on the successful path, mocking heavily
-
 
 if __name__ == "__main__":
     unittest.main()
\ No newline at end of file
