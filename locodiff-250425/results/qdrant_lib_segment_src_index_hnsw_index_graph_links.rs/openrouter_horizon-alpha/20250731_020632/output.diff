
index 39d70b1f5..2226d2fc3 100644
--- a/qdrant_lib_segment_src_index_hnsw_index_graph_links.rs_expectedoutput.txt (expected):tmp/tmpae3uqu_l_expected.txt	
+++ b/qdrant_lib_segment_src_index_hnsw_index_graph_links.rs_extracted.txt (actual):tmp/tmptk7nxtvz_actual.txt	
@@ -156,23 +156,20 @@ impl GraphLinks {
     }
 }
 
-/// Sort the first `m` values in `links` and return them. Used to compare stored
-/// links where the order of the first `m` links is not preserved.
-#[cfg(test)]
-pub(super) fn normalize_links(m: usize, mut links: Vec<PointOffsetType>) -> Vec<PointOffsetType> {
-    let first = links.len().min(m);
-    links[..first].sort_unstable();
-    links
-}
-
 #[cfg(test)]
 mod tests {
-    use rand::Rng;
+    use rand::Rng as _;
     use rstest::rstest;
     use tempfile::Builder;
 
     use super::*;
 
+    fn normalize_links(m: usize, mut links: Vec<PointOffsetType>) -> Vec<PointOffsetType> {
+        let first = links.len().min(m);
+        links[..first].sort_unstable();
+        links
+    }
+
     fn random_links(
         points_count: usize,
         max_levels_count: usize,
