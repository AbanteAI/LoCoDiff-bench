
index 6f97774c..92d23cce 100644
--- a/aider_aider_watch.py_expectedoutput.txt (expected):tmp/tmpzu__rbv9_expected.txt	
+++ b/aider_aider_watch.py_extracted.txt (actual):tmp/tmp19xyz3a9_actual.txt	
@@ -35,22 +35,22 @@ def load_gitignores(gitignore_paths: list[Path]) -> Optional[PathSpec]:
         ".DS_Store",  # macOS metadata
         "Thumbs.db",  # Windows thumbnail cache
         # IDE files
-        ".idea/aider_aider_watch.py_expectedoutput.txt (expected):
         if path.exists():
@@ -64,7 +64,9 @@ class FileWatcher:
     """Watches source files for changes and AI comments"""
 
     # Compiled regex pattern for AI comments
-    ai_comment_pattern = re.compile(r"(?:#|//|--|;+) *(ai\b.*|ai\b.*|.*\bai[?!]?) *$", re.IGNORECASE)
+    ai_comment_pattern = re.compile(
+        r"(?:#|//|--|;+) *(ai\b.*|ai\b.*|.*\bai[?!]?) *$", re.IGNORECASE
+    )
 
     def __init__(self, coder, gitignores=None, verbose=False, analytics=None, root=None):
         self.coder = coder
@@ -77,6 +79,7 @@ class FileWatcher:
         self.changed_files = set()
         self.gitignores = gitignores
 
+        # Create filter function during initialization
         self.gitignore_spec = load_gitignores(
             [Path(g) for g in self.gitignores] if self.gitignores else []
         )
@@ -194,7 +197,7 @@ class FileWatcher:
         if not has_action:
             if added:
                 self.io.tool_output(
-                    "End your comment with AI! to request changes or AI? to ask questions"
+                    'End your comment with AI! to request changes or AI? to ask questions'
                 )
             return ""
 
@@ -262,7 +265,7 @@ class FileWatcher:
                     line_nums.append(i)
                     comments.append(comment)
                     comment = comment.lower()
-                    comment = comment.lstrip("/#-;")  # Added semicolon for Lisp comments
+                    comment = comment.lstrip("/#-;")
                     comment = comment.strip()
                     if comment.startswith("ai!") or comment.endswith("ai!"):
                         has_action = "!"
@@ -287,12 +290,6 @@ def main():
     args = parser.parse_args()
 
     directory = args.directory
-    print(f"Watching source files in {directory}...")
-
-    # Example ignore function that ignores files with "test" in the name
-    def ignore_test_files(path):
-        return "test" in path.name.lower()
-
     watcher = FileWatcher(directory, gitignores=args.gitignore)
     try:
         watcher.start()
