
index a7fabdd89..66dc6c7ce 100644
--- a/tldraw_packages_editor_src_lib_editor_shapes_ShapeUtil.ts_expectedoutput.txt (expected):tmp/tmp7j3rhgu8_expected.txt	
+++ b/tldraw_packages_editor_src_lib_editor_shapes_ShapeUtil.ts_extracted.txt (actual):tmp/tmpxjlqbg5x_actual.txt	
@@ -133,13 +133,6 @@ export abstract class ShapeUtil<Shape extends TLUnknownShape = TLUnknownShape> {
 	 */
 	static migrations?: LegacyMigrations | TLPropsMigrations | MigrationSequence
 
-	/**
-	 * The type of the shape util, which should match the shape's type.
-	 *
-	 * @public
-	 */
-	static type: string
-
 	/**
 	 * Get the default props for a shape.
 	 *
@@ -283,51 +276,6 @@ export abstract class ShapeUtil<Shape extends TLUnknownShape = TLUnknownShape> {
 		return false
 	}
 
-	/**
-	 * Whether the shape should hide its resize handles when selected.
-	 *
-	 * @public
-	 */
-	hideResizeHandles(_shape: Shape): boolean {
-		return false
-	}
-
-	/**
-	 * Whether the shape should hide its rotation handles when selected.
-	 *
-	 * @public
-	 */
-	hideRotateHandle(_shape: Shape): boolean {
-		return false
-	}
-
-	/**
-	 * Whether the shape should hide its selection bounds background when selected.
-	 *
-	 * @public
-	 */
-	hideSelectionBoundsBg(_shape: Shape): boolean {
-		return false
-	}
-
-	/**
-	 * Whether the shape should hide its selection bounds foreground when selected.
-	 *
-	 * @public
-	 */
-	hideSelectionBoundsFg(_shape: Shape): boolean {
-		return false
-	}
-
-	/**
-	 * Whether the shape's aspect ratio is locked.
-	 *
-	 * @public
-	 */
-	isAspectRatioLocked(_shape: Shape): boolean {
-		return false
-	}
-
 	/**
 	 * Get a JSX element for the shape (as an HTML element) to be rendered as part of the canvas background - behind any other shape content.
 	 *
@@ -428,22 +376,6 @@ export abstract class ShapeUtil<Shape extends TLUnknownShape = TLUnknownShape> {
 		return []
 	}
 
-	/**
-	 * Get the geometry to use when snapping to this this shape in translate/resize operations. See
-	 * {@link BoundsSnapGeometry} for details.
-	 */
-	getBoundsSnapGeometry(_shape: Shape): BoundsSnapGeometry {
-		return {}
-	}
-
-	/**
-	 * Get the geometry to use when snapping handles to this shape. See {@link HandleSnapGeometry}
-	 * for details.
-	 */
-	getHandleSnapGeometry(_shape: Shape): HandleSnapGeometry {
-		return {}
-	}
-
 	getText(_shape: Shape): string | undefined {
 		return undefined
 	}
