--- tldraw_packages_editor_src_lib_editor_shapes_ShapeUtil.ts_expectedoutput.txt (expected)+++ tldraw_packages_editor_src_lib_editor_shapes_ShapeUtil.ts_extracted.txt (actual)@@ -194,6 +194,15 @@ 	}
 
 	/**
+	 * Whether the shape can be bound to. See {@link TLShapeUtilCanBindOpts} for details.
+	 *
+	 * @public
+	 */
+	canBind(_opts: TLShapeUtilCanBindOpts): boolean {
+		return true
+	}
+
+	/**
 	 * Whether the shape can be tabbed to.
 	 *
 	 * @param shape - The shape.
@@ -210,15 +219,6 @@ 	 */
 	canScroll(_shape: Shape): boolean {
 		return false
-	}
-
-	/**
-	 * Whether the shape can be bound to. See {@link TLShapeUtilCanBindOpts} for details.
-	 *
-	 * @public
-	 */
-	canBind(_opts: TLShapeUtilCanBindOpts): boolean {
-		return true
 	}
 
 	/**
@@ -367,6 +367,25 @@ 	getHandles?(shape: Shape): TLHandle[]
 
 	/**
+	 * Get an array of outline segments for the shape. For most shapes,
+	 * this will be a single segment that includes the entire outline.
+	 * For shapes with handles, this might be segments of the outline
+	 * between each handle.
+	 *
+	 * @example
+	 *
+	 * ```ts
+	 * util.getOutlineSegments(myShape)
+	 * ```
+	 *
+	 * @param shape - The shape.
+	 * @public
+	 */
+	getOutlineSegments(shape: Shape): Vec[][] {
+		return [this.editor.getShapeGeometry(shape).vertices]
+	}
+
+	/**
 	 * Get whether the shape can receive children of a given type.
 	 *
 	 * @param shape - The shape.
@@ -414,18 +433,6 @@ 	/** @internal */
 	expandSelectionOutlinePx(shape: Shape): number | Box {
 		return 0
-	}
-
-	/**
-	 * Return elements to be added to the \<defs\> section of the canvases SVG context. This can be
-	 * used to define SVG content (e.g. patterns & masks) that can be referred to by ID from svg
-	 * elements returned by `component`.
-	 *
-	 * Each def should have a unique `key`. If multiple defs from different shapes all have the same
-	 * key, only one will be used.
-	 */
-	getCanvasSvgDefs(): TLShapeUtilCanvasSvgDef[] {
-		return []
 	}
 
 	/**
