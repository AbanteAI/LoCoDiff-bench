
index a7fabdd89..f78cc77f1 100644
--- a/tldraw_packages_editor_src_lib_editor_shapes_ShapeUtil.ts_expectedoutput.txt (expected):tmp/tmpnmseh3sd_expected.txt	
+++ b/tldraw_packages_editor_src_lib_editor_shapes_ShapeUtil.ts_extracted.txt (actual):tmp/tmpuji42jdc_actual.txt	
@@ -194,31 +194,31 @@ export abstract class ShapeUtil<Shape extends TLUnknownShape = TLUnknownShape> {
 	}
 
 	/**
-	 * Whether the shape can be tabbed to.
+	 * Whether the shape can be bound to. See {@link TLShapeUtilCanBindOpts} for details.
 	 *
-	 * @param shape - The shape.
 	 * @public
 	 */
-	canTabTo(_shape: Shape): boolean {
+	canBind(_opts: TLShapeUtilCanBindOpts): boolean {
 		return true
 	}
 
 	/**
-	 * Whether the shape can be scrolled while editing.
+	 * Whether the shape can be tabbed to.
 	 *
+	 * @param shape - The shape.
 	 * @public
 	 */
-	canScroll(_shape: Shape): boolean {
-		return false
+	canTabTo(_shape: Shape): boolean {
+		return true
 	}
 
 	/**
-	 * Whether the shape can be bound to. See {@link TLShapeUtilCanBindOpts} for details.
+	 * Whether the shape can be scrolled while editing.
 	 *
 	 * @public
 	 */
-	canBind(_opts: TLShapeUtilCanBindOpts): boolean {
-		return true
+	canScroll(_shape: Shape): boolean {
+		return false
 	}
 
 	/**
@@ -261,9 +261,7 @@ export abstract class ShapeUtil<Shape extends TLUnknownShape = TLUnknownShape> {
 	 * Whether the shape can participate in layout functions such as alignment or distribution.
 	 *
 	 * @param shape - The shape.
-	 * @param info - Additional context information: the type of action causing the layout and the
-	 * @public
-	 *
+	 * @param info - Additional context information about the layout action and the other shapes.
 	 * @public
 	 */
 	canBeLaidOut(_shape: Shape, _info: TLShapeUtilCanBeLaidOutOpts): boolean {
