
index 31d2c13e8..8fb824b6c 100644
--- a/react_packages_react-devtools-shared_src_devtools_store.js_expectedoutput.txt (expected):tmp/tmp7r50crgb_expected.txt	
+++ b/react_packages_react-devtools-shared_src_devtools_store.js_extracted.txt (actual):tmp/tmp9aiod8xi_actual.txt	
@@ -274,7 +274,7 @@ export default class Store extends EventEmitter<{
   }
 
   // This is only used in tests to avoid memory leaks.
-  assertExpectedRootMapSizes() {
+  assertExpectedRootMapSizes(): void {
     if (this.roots.length === 0) {
       // The only safe time to assert these maps are empty is when the store is empty.
       this.assertMapSizeMatchesRootCount(this._idToElement, '_idToElement');
@@ -293,7 +293,7 @@ export default class Store extends EventEmitter<{
   }
 
   // This is only used in tests to avoid memory leaks.
-  assertMapSizeMatchesRootCount(map: Map<any, any>, mapName: string) {
+  assertMapSizeMatchesRootCount(map: Map<any, any>, mapName: string): void {
     const expectedSize = this.roots.length;
     if (map.size !== expectedSize) {
       this._throwAndEmitError(
@@ -880,6 +880,20 @@ export default class Store extends EventEmitter<{
     }
   }
 
+  _recursivelyUpdateSubtree(
+    id: number,
+    callback: (element: Element) => void,
+  ): void {
+    const element = this._idToElement.get(id);
+    if (element) {
+      callback(element);
+
+      element.children.forEach(child =>
+        this._recursivelyUpdateSubtree(child, callback),
+      );
+    }
+  }
+
   _adjustParentTreeWeight: (
     parentElement: ?Element,
     weightDelta: number,
@@ -905,20 +919,6 @@ export default class Store extends EventEmitter<{
     }
   };
 
-  _recursivelyUpdateSubtree(
-    id: number,
-    callback: (element: Element) => void,
-  ): void {
-    const element = this._idToElement.get(id);
-    if (element) {
-      callback(element);
-
-      element.children.forEach(child =>
-        this._recursivelyUpdateSubtree(child, callback),
-      );
-    }
-  }
-
   onBridgeNativeStyleEditorSupported: ({
     isSupported: boolean,
     validAttributes: ?$ReadOnlyArray<string>,
