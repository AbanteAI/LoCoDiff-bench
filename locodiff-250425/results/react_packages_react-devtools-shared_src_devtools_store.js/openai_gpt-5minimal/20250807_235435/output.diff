
index 31d2c13e8..877b66983 100644
--- a/react_packages_react-devtools-shared_src_devtools_store.js_expectedoutput.txt (expected):tmp/tmp5otofkbc_expected.txt	
+++ b/react_packages_react-devtools-shared_src_devtools_store.js_extracted.txt (actual):tmp/tmpwagixflp_actual.txt	
@@ -475,10 +475,6 @@ export default class Store extends EventEmitter<{
     return this._supportsTimeline;
   }
 
-  get supportsTraceUpdates(): boolean {
-    return this._supportsTraceUpdates;
-  }
-
   get unsupportedBridgeProtocolDetected(): boolean {
     return this._unsupportedBridgeProtocolDetected;
   }
@@ -556,7 +552,6 @@ export default class Store extends EventEmitter<{
 
           return null;
         }
-
         const childWeight = child.isCollapsed ? 1 : child.weight;
 
         if (index <= currentWeight + childWeight) {
@@ -905,6 +900,16 @@ export default class Store extends EventEmitter<{
     }
   };
 
+  onBridgeNativeStyleEditorSupported: ({
+    isSupported: boolean,
+    validAttributes: ?$ReadOnlyArray<string>,
+  }) => void = ({isSupported, validAttributes}) => {
+    this._isNativeStyleEditorSupported = isSupported;
+    this._nativeStyleEditorValidAttributes = validAttributes || null;
+
+    this.emit('supportsNativeStyleEditor');
+  };
+
   _recursivelyUpdateSubtree(
     id: number,
     callback: (element: Element) => void,
@@ -919,16 +924,6 @@ export default class Store extends EventEmitter<{
     }
   }
 
-  onBridgeNativeStyleEditorSupported: ({
-    isSupported: boolean,
-    validAttributes: ?$ReadOnlyArray<string>,
-  }) => void = ({isSupported, validAttributes}) => {
-    this._isNativeStyleEditorSupported = isSupported;
-    this._nativeStyleEditorValidAttributes = validAttributes || null;
-
-    this.emit('supportsNativeStyleEditor');
-  };
-
   onBridgeOperations: (operations: Array<number>) => void = operations => {
     if (__DEBUG__) {
       console.groupCollapsed('onBridgeOperations');
@@ -1205,7 +1200,7 @@ export default class Store extends EventEmitter<{
           const id = operations[1];
 
           if (__DEBUG__) {
-            debug(`Remove root ${id}`);
+            debug(`Remove root ${id`);
           }
 
           const recursivelyDeleteElements = (elementID: number) => {
